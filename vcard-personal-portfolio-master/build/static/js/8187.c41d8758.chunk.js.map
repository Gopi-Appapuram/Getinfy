{"version":3,"file":"static/js/8187.c41d8758.chunk.js","mappings":"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","sources":["services/ProvidersService.js","views/accounts/Providers/store/dataSlice.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n    return ApiService.fetchData({\r\n        url: `account/provider`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/provider/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitProvider(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `account/provider`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateProvider(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `account/provider`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateProviderAccStatus(id, status) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators?id=${id}&acc_status=${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrencyProvider(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccountProvider(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCatProvider(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetContractTypeProvider(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/contract-types/unq-id-acc-type/drop-down/${data.enterAccount}/Provider`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetPublicRole(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/roles/master-roles/drop-down/${data.acc_mno_parent_unq_id}`,\r\n        //url: `/account/roles/master-roles/GL1`,\r\n        method: 'get',\r\n    })\r\n}\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders, apiGetCurrencyProvider, apiGetParentAccountProvider, apiGetProductCatProvider, apiGetContractTypeProvider, apiGetPublicRole, apiGetUploadFileTypes } from 'services/ProvidersService'\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'providerList/data/getOrders',\r\n    async (data) => {\r\n        const response = await apiGetSalesOrders(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\n\r\nexport const getCurrency = createAsyncThunk(\r\n    'providerList/data/getCurrency',\r\n    async (data) => {\r\n        const response = await apiGetCurrencyProvider(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getParentAccount = createAsyncThunk(\r\n    'providerList/data/getParentAccount',\r\n    async (data) => {\r\n        const response = await apiGetParentAccountProvider(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getProductCategory = createAsyncThunk(\r\n    'providerList/data/getProductCategory',\r\n    async (data) => {\r\n        const response = await apiGetProductCatProvider(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\n\r\nexport const getContractType = createAsyncThunk(\r\n    'providerList/data/getContractType',\r\n    async (data) => {\r\n       \r\n        const response = await apiGetContractTypeProvider(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getPublicRoles = createAsyncThunk(\r\n    'providerList/data/getPublicRoles',\r\n    async (data) => {\r\n        const response = await apiGetPublicRole(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\nexport const getUploadFileType = createAsyncThunk(\r\n    'providerList/data/getUploadFileType',\r\n    async (data) => {\r\n        const response = await apiGetUploadFileTypes(data)\r\n        return response.data\r\n    }\r\n)\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    \r\n    name: 'providerList/data',\r\n    initialState: {\r\n        loading: false,\r\n        orderList: [],\r\n        tableData: initialTableData,\r\n        currencyList:[],\r\n        parentAccountList:[],\r\n        productCatList:[],\r\n        contractTypeList:[],\r\n        publicRolesList:[]\r\n    },\r\n    reducers: {\r\n        \r\n        setOrderList: (state, action) => {\r\n            state.orderList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setCurrencyData: (state, action) => {\r\n            state.currencyList = action.payload\r\n        },\r\n        setParentAccountData: (state, action) => {\r\n            state.parentAccountList = action.payload\r\n        },\r\n\r\n        setProductCattData: (state, action) => {\r\n            state.productCatList = action.payload\r\n        },\r\n\r\n        setContractTypeData: (state, action) => {\r\n            state.contractTypeList = action.payload\r\n        },\r\n        setPublicRole : (state,action) => {\r\n            state.publicRolesList = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        \r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.orderList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCurrency.fulfilled]: (state, action) => {\r\n           \r\n           \r\n            state.currencyList=action.payload.response?.map((currency) => ({\r\n                value: currency.id,\r\n                label: currency.cur_title,\r\n            }));\r\n\r\n            state.loading = false\r\n        },\r\n        [getCurrency.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getParentAccount.fulfilled]: (state, action) => {\r\n            state.parentAccountList = action.payload?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.acc_name,\r\n            }))\r\n           \r\n            state.loading = false\r\n        },\r\n        [getParentAccount.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getProductCategory.fulfilled]: (state, action) => {\r\n           \r\n            \r\n            state.productCatList=action.payload.response?.map((product) => ({\r\n                value: product.id,\r\n                label: product.prod_cat_title,\r\n            }));\r\n\r\n            state.loading = false\r\n        },\r\n        [getProductCategory.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n       \r\n        [getContractType.fulfilled]: (state, action) => {\r\n         \r\n           \r\n            state.contractTypeList=action.payload.response?.map((contract) => ({\r\n                value: contract.id,\r\n                label: contract.contract_type_title,\r\n            }));\r\n            \r\n            state.loading = false\r\n        },\r\n        [getContractType.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getPublicRoles.fulfilled]: (state,action) => {\r\n            state.publicRolesList = action.payload?.res?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.name,\r\n            }))\r\n        },\r\n        [getPublicRoles.pending]:(state,action)=> {\r\n            state.loading = true\r\n        },\r\n        [getUploadFileType.fulfilled]: (state, action) => {\r\n            state.fileList = action.payload\r\n            state.loading = false\r\n        },\r\n        [getUploadFileType.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData ,setCurrencyData,setParentAccountData,setProductCattData,setContractTypeData,setPublicRole} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["apiGetSalesOrders","params","ApiService","url","method","apiDeleteSalesOrders","data","apiSubmitProvider","resp","status","message","response","toString","apiUpdateProvider","apiUpdateProviderAccStatus","id","apiGetCurrencyProvider","enterAccount","apiGetParentAccountProvider","apiGetProductCatProvider","apiGetContractTypeProvider","apiGetPublicRole","acc_mno_parent_unq_id","apiGetUploadFileTypes","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","getOrders","createAsyncThunk","deleteOrders","getCurrency","getParentAccount","getProductCategory","getContractType","getPublicRoles","getUploadFileType","dataSlice","createSlice","name","initialState","loading","orderList","tableData","total","pageIndex","pageSize","query","sort","order","key","currencyList","parentAccountList","productCatList","contractTypeList","publicRolesList","reducers","setOrderList","state","action","payload","setTableData","setCurrencyData","setParentAccountData","setProductCattData","setContractTypeData","setPublicRole","extraReducers","fulfilled","pending","map","currency","value","label","cur_title","parent","acc_name","product","prod_cat_title","contract","contract_type_title","res","fileList","actions"],"sourceRoot":""}