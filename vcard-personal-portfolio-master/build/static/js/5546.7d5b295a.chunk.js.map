{"version":3,"file":"static/js/5546.7d5b295a.chunk.js","mappings":"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","sources":["utils/hooks/useTimeOutMessage.js","views/auth/ForgotPassword/ForgotPasswordForm.js","views/auth/ForgotPassword/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n\r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, FormItem, FormContainer, Alert } from 'components/ui'\r\nimport { ActionLink } from 'components/shared'\r\nimport { apiForgotPassword } from 'services/AuthService'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { APP_NAME } from 'constants/app.constant'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { GetErrorMsg, OpenNotification } from 'views/Servicefile'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().required('Please enter your registered email id'),\r\n})\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const navigate = useNavigate()\r\n    const { disableSubmit = false, className, signInUrl = '/sign-in' } = props\r\n\r\n    \r\n\r\n    const [response, setResponse] = useState('')\r\n\r\n\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n    const onSendMail = async (values, setSubmitting) => {\r\n      \r\n        setSubmitting(true)\r\n        \r\n       \r\n            let body = {           \r\n                user_id: values.email,            \r\n            }\r\n            \r\n            const resp = await apiForgotPassword(body)\r\n          \r\n\r\n            \r\n            if (resp.status === 'success') {\r\n                setTimeout(async () => {\r\n                  setSubmitting(false);\r\n                  console.log(resp.data.data.response); \r\n                  OpenNotification('success', 'Successfully Submitted');\r\n                  setResponse(resp.data.data.response); \r\n                 \r\n                 \r\n                }, 2000);\r\n              }\r\n\r\n            if (resp.status === 'failed') {\r\n               \r\n                setMessage(GetErrorMsg(resp))\r\n                setSubmitting(false);\r\n            }\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (response) {\r\n            \r\n          navigate('/changePassword', { state: { data: response } });\r\n        }\r\n      }, [response]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n       \r\n           <div className={className} class=\"bg-white p-6\" style={{\r\n                padding: \"24px 32px 48px\", width: \"560px\", height: \"\", opacity: 0.9,\r\n                borderRadius: \"4px\"\r\n            }}>\r\n                \r\n                {message && (\r\n                    <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                        {message}\r\n                    </Alert>\r\n                )}\r\n                <Formik\r\n                    initialValues={{\r\n                        email: ' ',\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        if (!disableSubmit) {\r\n                            onSendMail(values, setSubmitting)\r\n                        } else {\r\n                            setSubmitting(false)\r\n                        }\r\n                    }}\r\n                >\r\n                    {({ touched, errors, isSubmitting }) => (\r\n                        <Form>\r\n                            <FormContainer>\r\n                                <div className='grid justify-center gap-8 mb-3'>\r\n                                    <p className='ml-16'>\r\n                                    <img className='w-20'\r\n                                                src={'/img/avatars/Primary Logo_Large.png'} />\r\n                                    </p>\r\n                                    <h4 className='font-bold text-2xl text-center'>Forgot Password</h4>\r\n                                </div>\r\n                              \r\n                                    <FormItem\r\n                                        label=\"Email ID\"\r\n                                        invalid={errors.email && touched.email}\r\n                                        errorMessage={errors.email}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"email\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter Email Id\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                             \r\n                                <Button\r\n                                            block\r\n                                            loading={isSubmitting}\r\n                                            variant=\"solid\"\r\n                                            type=\"submit\"\r\n                                            placeholder=\"Enter your Email ID to reset password\"\r\n                                        >\r\n                                            {'Submit'}\r\n                                        </Button>\r\n                                <div class=\"flex items-center py-3\">\r\n                                    <div class=\"flex-grow h-px bg-gray-400\"></div>\r\n                                    <span class=\"flex-shrink  text-black px-4\">Or</span>\r\n                                    <div class=\"flex-grow h-px bg-gray-400\"></div>\r\n                                </div>\r\n                                <div className=\" text-center\">\r\n                                    <p\r\n                                        className='border-2 border-blue-400 text-blue-500  justify-center p-3 w-full font-bold h-11 rounded'\r\n                                    >\r\n                                        <ActionLink to={signInUrl} className='text-[#0080FF]'>Back To Sign In page</ActionLink>\r\n                                    </p>\r\n\r\n                                </div>\r\n\r\n                            </FormContainer>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                \r\n            </div>\r\n           {/* </div> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm\r\n","import React from 'react'\r\nimport ForgotPasswordForm from './ForgotPasswordForm'\r\n\r\nconst ForgotPassword = () => {\r\n    return <ForgotPasswordForm disableSubmit={false} />\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"names":["interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","email","required","props","navigate","useNavigate","disableSubmit","className","signInUrl","response","setResponse","useTimeOutMessage","onSendMail","values","setSubmitting","body","user_id","apiForgotPassword","resp","status","console","log","data","OpenNotification","GetErrorMsg","state","class","style","padding","width","height","opacity","borderRadius","type","showIcon","initialValues","onSubmit","touched","errors","isSubmitting","src","label","invalid","errorMessage","autoComplete","name","placeholder","component","Input","block","loading","variant","to"],"sourceRoot":""}