{"version":3,"file":"static/js/1934.76d8b771.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","views/wareHouse/WareHouse/components/Inventory/InventoryTable.js","views/wareHouse/WareHouse/components/Inventory/InventoryTableSearch.js","views/wareHouse/WareHouse/components/Inventory/InventoryFilter.js","views/wareHouse/WareHouse/components/Inventory/InventoryTableTools.js","views/wareHouse/WareHouse/components/WarehousePreview.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/toNumber.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Badge, Tooltip, Dialog,Button } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import { getOrders, setTableData } from '../../store/dataSlice'\r\n// import {\r\n//     setSelectedRows,\r\n//     addRowItem,\r\n//     removeRowItem,\r\n//     setDeleteMode,\r\n//     setSelectedRow,\r\n// } from '../../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import cloneDeep from 'lodash/cloneDeep'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\nimport { getInventoryDetails, setInventoryTableData } from '../../store/dataSlice'\r\nimport { cloneDeep } from 'lodash'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\n/* const ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n} */\r\n\r\n\r\n\r\nconst InventoryTable = ({warehouseData}) => {\r\n    const warehouseId=warehouseData?.id\r\n    const [isDeactivate, setDeactivate] = useState(false)\r\n    const [row, setRow] = useState('')\r\n    const tableRef = useRef(null)\r\n    const [exportValue, setExportValue] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.wareHouse?.data?.inventoryTableData\r\n    );\r\n    const loading = useSelector((state) => state.wareHouse.data.loading)\r\n\r\n    const data = useSelector((state) => state.wareHouse.data.inventoryList)\r\n\r\n\r\n    \r\n    const fetchData = useCallback(() => {\r\n        dispatch(getInventoryDetails({ page: pageIndex - 1, size: pageSize, whId: warehouseId }))\r\n    }, [dispatch, pageIndex, pageSize, sort, query])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const ActionColumn = ({ row }) => {\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n    \r\n    \r\n        const onEdit = useCallback(() => {\r\n            navigate(`/warehouse-new-add-inventory`, {state: { data: row, warehouseData:warehouseData, mode: 'EDIT'} })\r\n        }, [navigate, row])\r\n    \r\n        return (\r\n            <div className=\"text-lg\">\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onEdit}\r\n                    >\r\n                        <MdModeEdit />\r\n    \r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"Delete\">\r\n                    <span\r\n                        className=\"cursor-pointer p-1 text-green-800 hover:text-green-800\"\r\n                        // onClick={onDelete}\r\n                    >\r\n                        <RiCheckboxCircleFill onClick = {() =>setExportValue(true)}/>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Product',\r\n                accessorKey: 'cat_items_info',\r\n            },\r\n            {\r\n                header: 'Product Variant',\r\n                accessorKey: 'cat_item_var',\r\n            },\r\n            // {\r\n            //     header: 'Category',\r\n            //     accessorKey: 'category',\r\n            // },\r\n            {\r\n                header: 'SKU Code',\r\n                accessorKey: 'sku_code',\r\n            },\r\n            // {\r\n            //     header: 'Shelf Location',\r\n            //     accessorKey: 'shelfLocation',\r\n            // },\r\n            {\r\n                header: 'Shelf Area',\r\n                accessorKey: 'shelf_area',\r\n            },\r\n            {\r\n                header: 'Shelf Code',\r\n                accessorKey: 'shelf_code',\r\n            },\r\n            // {\r\n            //     header: 'Bin',\r\n            //     accessorKey: 'bin',\r\n            // },\r\n            // {\r\n            //     header: 'Unit',\r\n            //     accessorKey: 'unit',\r\n            // },\r\n            {\r\n                header: 'Manufacturer',\r\n                accessorKey: 'manufacturer',\r\n            },\r\n            {\r\n                header: 'Moving Quantity',\r\n                accessorKey: 'moving_qty',\r\n            },\r\n            {\r\n                header: 'Holding Quantity',\r\n                accessorKey: 'holding_qty',\r\n            },\r\n            // {\r\n            //     header: 'Total Quantity',\r\n            //     accessorKey: 'totalQuantity',\r\n               \r\n            // },\r\n           \r\n        ],\r\n        []\r\n    )\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setInventoryTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setInventoryTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setInventoryTableData(newTableData))\r\n    }\r\n    return (\r\n        <>\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            loading={loading}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n        />\r\n        <Dialog isOpen={exportValue} onClose={() =>setExportValue(false)}>\r\n            <div>\r\n                    <h6>Deactivate </h6>\r\n                    <hr className='text-gray mb-3 mt-3' />\r\n                    <p className='mb-4'>Are you sure you want to deactivate this inventory ?</p>\r\n                    <div className='text-end'>\r\n                        <Button className='mr-3' onClick={() =>setExportValue(false)}>No</Button>\r\n                        <Button variant=\"solid\">Yes</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InventoryTable\r\n\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../../store/dataSlice'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst InventoryTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            // onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default InventoryTableSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst InventoryFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default InventoryFilter\r\n","import React from 'react'\r\nimport {\r\n    HiDownload,\r\n    HiPlusCircle,\r\n    HiOutlineDocumentDownload,\r\n} from 'react-icons/hi'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { BiRefresh } from 'react-icons/bi'\r\n\r\nimport { Button } from 'components/ui'\r\nimport InventoryTableSearch from './InventoryTableSearch'\r\nimport InventoryFilter from './InventoryFilter'\r\n\r\nconst InventoryTableTools = ({ warehouseData }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <InventoryTableSearch />\r\n            <InventoryFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiOutlineDocumentDownload />}>\r\n                    Import\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                // target=\"_blank\"\r\n                // to=\"/warehouse-new-add-inventory\"\r\n            >\r\n                <Button\r\n                    block\r\n                    size=\"sm\"\r\n                    style={{ backgroundColor: 'gray', color: 'white' }}\r\n                    icon={<BiRefresh />}\r\n                >\r\n                    Sync\r\n                </Button>\r\n            </Link>\r\n            {/* <Link\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                to=\"/warehouse-new-add-inventory\" > */}\r\n            <Button\r\n                // block\r\n                variant=\"solid\"\r\n                onClick={() =>\r\n                    navigate(`/warehouse-new-add-inventory`, {\r\n                        state: { data: warehouseData },\r\n                    })\r\n                }\r\n                // style={{\r\n                //     color: \"white\",fontFamily: 'Roboto',\r\n                //     fontStyle: 'normal',\r\n                //     fontSize: '18px',\r\n                // }}\r\n                // className='flex justify-center pt-[6px] gap-1'\r\n                size=\"sm\"\r\n                icon={<HiPlusCircle />}\r\n            >\r\n                {/* <p className='pt-[2px]'><HiPlusCircle /></p> */}\r\n                Add Item\r\n            </Button>\r\n            {/* </Link> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryTableTools\r\n","import { Card } from 'components/ui'\r\nimport React from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport InventoryTable from './Inventory/InventoryTable'\r\nimport InventoryTableTools from './Inventory/InventoryTableTools'\r\nimport { injectReducer } from 'store'\r\nimport reducer from '../store'\r\nimport { useSelector } from 'react-redux'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\nimport { MdModeEdit } from 'react-icons/md'\r\ninjectReducer('wareHouse', reducer)\r\nfunction WarehousePreview() {\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const warehouseData = location.state.data || {}\r\n    const {\r\n        id,\r\n        wh_unq_id,\r\n        wh_title,\r\n        wh_location,\r\n        wh_address_line1,\r\n        wh_address_line2,\r\n        wh_city,\r\n        wh_state,\r\n        wh_country,\r\n        wh_zip_code,\r\n        wh_contact_person,\r\n        wh_email_id,\r\n        wh_phone_number,\r\n        wh_alternate_phone_number,\r\n        wh_total_capacity,\r\n        wh_allotted_capacity,\r\n        wh_description,\r\n        wh_status,\r\n        acc_id,\r\n        wh_latitude,\r\n        wh_longitude,\r\n        preferred,\r\n    } = warehouseData\r\n\r\n    const breadCrumbList = [\r\n        {\r\n            name: 'Home',\r\n            link: '/home',\r\n        },\r\n        {\r\n            name: 'WareHouse',\r\n            link: '/wareHouse-menu-item-view-2',\r\n        },\r\n        {\r\n            name: wh_title,\r\n        },\r\n    ]\r\n    return (\r\n        <>\r\n            <CustomBreadcrumbs list={breadCrumbList} />\r\n            <br />\r\n            <Card className=\"mx-3 mb-4 mt-1\">\r\n                <div className=\"md:grid grid-cols-2\">\r\n                    <h6 className=\"mx-2 mb-4 mt-1 font-bold text-cyan-500\">\r\n                        WAREHOUSE DETAILS{' '}\r\n                    </h6>\r\n                    <div className=\" text-xs text-black font-bold flex justify-end cursor-pointer\">\r\n                        <MdModeEdit className=\"mt-1\" />\r\n                        <p\r\n                            onClick={() =>\r\n                                navigate(`/warehouse-new-warehouse`, {\r\n                                    state: {\r\n                                        data: warehouseData,\r\n                                        mode: 'EDIT',\r\n                                    },\r\n                                })\r\n                            }\r\n                        >\r\n                            EDIT\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"md:grid grid-cols-3\">\r\n                    <div className=\" md:gird mx-2\">\r\n                        <div className=\"text-base text-black font-bold underline  decoration-2 mb-2\">\r\n                            Warehouse Info\r\n                        </div>\r\n                        <div className=\"col-span-6 md:grid gap-2\">\r\n                            <p className=\"mt-2 text-base\">Title : {wh_title}</p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Description : {wh_description}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Contact Person: {wh_contact_person}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Total Capacity: {wh_total_capacity}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Allocated Capacity: {wh_allotted_capacity}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold underline  decoration-2 mb-2\">\r\n                            Contract Info\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">\r\n                                Location : {wh_location}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Email: {wh_email_id}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Phn No: {wh_phone_number}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Alt Phn No: {wh_alternate_phone_number}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold underline  decoration-2 mb-2\">\r\n                            Address\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">\r\n                                Addr1: {wh_address_line1}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Addr2: {wh_address_line2}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">City: {wh_city}</p>\r\n                            <p className=\"mt-2 text-base\">State: {wh_state}</p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Country: {wh_country}\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">\r\n                                Zipcode: {wh_zip_code}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            <Card className=\"mx-3 mb-4 mt-1\">\r\n                {/* <div className=\"md:grid grid-cols-2\">\r\n                    <h6 className=\"mx-2 mb-4 mt-1 font-bold text-cyan-500\">\r\n                        INVENTORY LIST{' '}\r\n                    </h6>\r\n                </div> */}\r\n                <div className=\"mx-4 my-4\">\r\n                    <div className=\"lg:flex items-center justify-between mb-4\">\r\n                    <h3 className=\"mb-4 lg:mb-0 pr-2\">Inventory</h3>\r\n                    <InventoryTableTools warehouseData={warehouseData} />\r\n                    </div>\r\n                    <div>\r\n                        <InventoryTable warehouseData={warehouseData} />\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WarehousePreview\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","warehouseData","warehouseId","id","useState","tableRef","useRef","exportValue","setExportValue","dispatch","useDispatch","useSelector","wareHouse","inventoryTableData","pageIndex","pageSize","sort","query","total","loading","inventoryList","fetchData","useCallback","getInventoryDetails","page","size","whId","useEffect","tableData","useMemo","ActionColumn","row","textTheme","useThemeClass","navigate","useNavigate","onEdit","mode","className","title","onClick","columns","header","cell","props","original","accessorKey","ref","pagingData","onPaginationChange","newTableData","cloneDeep","setInventoryTableData","onSelectChange","value","Number","onSort","isOpen","onClose","variant","searchInput","placeholder","prefix","icon","target","download","block","backgroundColor","injectReducer","reducer","location","useLocation","wh_title","wh_unq_id","wh_location","wh_address_line1","wh_address_line2","wh_city","wh_state","wh_country","wh_zip_code","wh_contact_person","wh_email_id","wh_phone_number","wh_alternate_phone_number","wh_total_capacity","wh_allotted_capacity","wh_description","breadCrumbList","wh_status","acc_id","wh_latitude","wh_longitude","preferred","trimmedEndIndex","require","reTrimStart","module","exports","string","slice","replace","reWhitespace","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}