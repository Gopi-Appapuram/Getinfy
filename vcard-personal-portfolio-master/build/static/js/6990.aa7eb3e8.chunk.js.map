{"version":3,"file":"static/js/6990.aa7eb3e8.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","services/ItemsService.js","views/accounts/PendingApproval/store/stateSlice.js","views/accounts/PendingApproval/store/index.js","views/accounts/PendingApproval/components/PendingAppTableSearch.js","views/accounts/PendingApproval/components/PendingAppFilter.js","views/accounts/PendingApproval/components/PendingApprovalsTableTools.js","views/accounts/PendingApproval/components/PendindApprovalsTable.js","views/accounts/PendingApproval/index.js","views/accounts/PendingApproval/store/dataSlice.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-cat-items-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariants(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/items/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariantsByItemId(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/item/variant/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n\r\nexport async function apiDeleteSalesItems(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/catalogs/dgl-cat-items-info',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetTemplates(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-tp-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiProductCategoryItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-items-info/items',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategory(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats?page_no=1&page_size=4`,\r\n        method: 'get',\r\n        data\r\n    })\r\n}\r\n\r\nexport async function apiUpdateItemAccStatus(params,status) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/dgl-cat-items-info/${params}/${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTableData(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-pageable`,\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${params.unq_id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetTemplatesInItems(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/templates/${params.unq_id}/${params.category}/${params.type}?tpStatus=ACTIVE`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTemplateComponents(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-tax/${params}`,\r\n        method: 'get',\r\n    })\r\n}","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'CustomerCategoryList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n\r\nconst PendingAppTableSearch = () => {\r\n    return (\r\n        <Input\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default PendingAppTableSearch\r\n\r\n","\r\nimport React from 'react'\r\nimport { HiOutlineFilter } from 'react-icons/hi'\r\nimport {\r\n\r\n    Button,\r\n\r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst PendingAppFilter = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => { }}\r\n            >\r\n                Filter\r\n            </Button>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PendingAppFilter\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Button,\r\n   \r\n} from 'components/ui'\r\nimport PendingAppTableSearch from './PendingAppTableSearch'\r\nimport PendingAppFilter from './PendingAppFilter'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\n\r\n\r\n\r\nconst PendingApprovalsTableTools = () => {\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n           <PendingAppTableSearch />\r\n             <PendingAppFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PendingApprovalsTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems, setTableData } from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\n/* const ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n} */\r\n\r\nconst ActionColumn = ({ row }) => {\r\n    const dispatch = useDispatch()\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onDelete = () => {\r\n        dispatch(setDeleteMode('single'))\r\n        dispatch(setSelectedRow([row.id]))\r\n    }\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <div className=\"text-lg\">\r\n    \r\n            <Tooltip title=\"View\">\r\n                <span\r\n                    className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                    onClick={onView}\r\n                >\r\n                    <HiOutlineEye />\r\n                </span>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PendindApprovalsTable = () => {\r\n\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.PendingArrovalsList.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state?.PendingArrovalsList?.data?.loading)\r\n\r\n    const data = useSelector((state) => state?.PendingArrovalsList?.data?.ItemList)\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [data])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Task ID',\r\n                accessorKey: 'itemId',\r\n            },\r\n            {\r\n                header: 'Task Title',\r\n                accessorKey: 'itemTitle',\r\n            },\r\n            {\r\n                header: 'Description',\r\n                accessorKey: 'description',\r\n            },\r\n            {\r\n                header: 'Date & Time',\r\n                accessorKey: 'dateAndTime',\r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'solItemType',\r\n\r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            />\r\n                            <span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {ItemStatusColor[0].label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n\r\n\r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowItem([row.id]))\r\n        } else {\r\n            dispatch(removeRowItem(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            loading={loading}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n            onCheckBoxChange={onRowSelect}\r\n            onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            selectable\r\n        />\r\n    )\r\n}\r\n\r\nexport default PendindApprovalsTable\r\n","import React from 'react'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store/index'\r\nimport PendingApprovalsTableTools from './components/PendingApprovalsTableTools'\r\nimport PendindApprovalsTable from './components/PendindApprovalsTable'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\n\r\n\r\ninjectReducer('PendingArrovalsList', reducer)\r\nconst PendingApprovals = () => {\r\n  let  breadCrumbList=[{\r\n    name:'Accounts',\r\n    // link:\"/home\"\r\n},{\r\n    name:'Pending Approvals',\r\n    link:\"/account-menu-item-view-7\"\r\n}]\r\n  return (\r\n    <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n      <CustomBreadcrumbs  list={breadCrumbList} />\r\n    <div className=\"lg:flex items-center justify-between mb-4 mt-3\">\r\n        <h3 className=\"mb-4 lg:mb-0\">Pending Approvals</h3>\r\n        <PendingApprovalsTableTools />\r\n    </div>\r\n    <PendindApprovalsTable />\r\n    \r\n</AdaptableCard>\r\n  )\r\n}\r\n\r\nexport default PendingApprovals","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesItems, apiDeleteSalesItems } from 'services/ItemsService'\r\n\r\nexport const getItems = createAsyncThunk(\r\n    'PendingArrovalsList/data/getItems',\r\n    async (data) => {\r\n        const response = []\r\n        return response\r\n    }\r\n)\r\n\r\nexport const deleteItems = async (data) => {\r\n    const response = await apiDeleteSalesItems(data)\r\n    return response.data\r\n}\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        Item: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'PendingArrovalsList/data',\r\n    initialState: {\r\n        loading: false,\r\n        ItemList: [],\r\n        tableData: initialTableData,\r\n    },\r\n    reducers: {\r\n        setItemList: (state, action) => {\r\n            state.ItemList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getItems.fulfilled]: (state, action) => {\r\n            state.ItemList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getItems.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setItemList, setTableData } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","apiGetSalesItems","params","ApiService","url","method","apiGetSalesItemVariants","id","apiGetSalesItemVariantsByItemId","apiDeleteSalesItems","apiCreateItem","resp","status","message","response","toString","apiGetTemplates","apiUpdateItemAccStatus","apiGetItemsTableData","apiGetProductCategoryData","unq_id","apiGetTemplatesInItems","category","type","apiGetItemsTemplateComponents","stateSlice","createSlice","initialState","selectedRows","selectedRow","deleteMode","reducers","setSelectedRows","action","payload","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","setDeleteMode","actions","toggleDeleteConfirmation","combineReducers","className","size","placeholder","prefix","icon","onClick","target","download","block","ItemStatusColor","label","dotClass","textClass","ActionColumn","row","textTheme","useDispatch","useThemeClass","navigate","useNavigate","onView","useCallback","title","tableRef","useRef","dispatch","useSelector","PendingArrovalsList","tableData","pageIndex","pageSize","sort","query","total","loading","ItemList","fetchData","getItems","useEffect","resetSelected","useMemo","columns","header","cell","props","original","accessorKey","onAllRowSelect","checked","rows","originalRows","selectedIds","forEach","push","ref","pagingData","onPaginationChange","page","newTableData","cloneDeep","setTableData","onSelectChange","value","Number","onSort","onCheckBoxChange","onIndeterminateCheckBoxChange","selectable","injectReducer","reducer","bodyClass","createAsyncThunk","dataSlice","Item","key","setItemList","extraReducers","fulfilled","pending"],"sourceRoot":""}