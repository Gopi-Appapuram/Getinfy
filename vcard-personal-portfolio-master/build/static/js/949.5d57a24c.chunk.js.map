{"version":3,"file":"static/js/949.5d57a24c.chunk.js","mappings":"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","sources":["views/orders/components/MasterPermissionBox.js","views/orders/components/StepControlled.js","views/orders/components/NewOrders.js","views/orders/components/OrderAddressInfo.js","views/orders/components/OrderDetails.js"],"sourcesContent":["import { Card, Checkbox } from 'components/ui'\r\nimport React from 'react'\r\n\r\nvar randomColor = Math.floor(Math.random() * 16777215).toString(16)\r\n\r\nfunction MasterPermissionBox() {\r\n    return (\r\n        <>\r\n            <div className=\"bg-gray-50 p-5\">\r\n                <div className=\"md:grid grid-cols-3 \">\r\n                    <Card\r\n                        className=\"rounded-none border-t-4 border-indigo-500 border-r-0 border-b-0 border-l-0\"\r\n                        \r\n                    >\r\n                        <div className=\"flex justify-between\">\r\n                            <p className=\"text-base text-black font-bold\">\r\n                                Account Management\r\n                            </p>\r\n                            <div className=\"flex\">\r\n                                <Checkbox className=\"\" />\r\n                                <p className='text-base font-medium'>Select All</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row-reverse gap-4 mt-6 \" >\r\n                            <p className='text-base font-medium'>Approve</p>\r\n                            <p className='text-base font-medium'>Deactivate</p>\r\n                            <p className='text-base font-medium'>Edit</p>\r\n                            <p className='text-base font-medium'>Add</p>\r\n                            <p className='text-base font-medium'>View</p>\r\n                        </div>\r\n                        <div className='flex mt-5'>\r\n                            <p className='mr-6'>Operaters</p>\r\n                            <Checkbox className=\"mx-3\"/>\r\n                            <Checkbox className=\"mx-4\"/>\r\n                            <Checkbox className=\"mx-4\"/>\r\n                            <Checkbox className=\"mx-6 mr-8\"/>\r\n                            <Checkbox className=\"mx-6 ml-8\"/>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MasterPermissionBox\r\n","import React, { useState } from 'react'\r\nimport { Steps, Button } from 'components/ui'\r\nimport NewOperators from './NewOrders'\r\nimport OrderDetails from './OrderDetails'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport MasterPermissionBox from './MasterPermissionBox'\r\n\r\nconst Controlled = () => {\r\n    const [step, setStep] = useState(0)\r\n\r\n    const onChange = (nextStep) => {\r\n        if (nextStep < 0) {\r\n            setStep(0)\r\n        } else if (nextStep > 3) {\r\n            setStep(3)\r\n        } else {\r\n            setStep(nextStep)\r\n        }\r\n    }\r\n\r\n    const onNext = () => onChange(step + 1)\r\n\r\n    const onPrevious = () => onChange(step - 1)\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n            <Steps current={step}>\r\n                <Steps.Item title=\"ORDER DETAILS\" />\r\n                <Steps.Item title=\"MASTER PERMISSIONS\" />\r\n                <Steps.Item title=\"MASTER USERS\" />\r\n                <Steps.Item title=\"PREVIEW\" />\r\n            </Steps>\r\n\r\n            <div className=\"mt-6  bg-gray-50 dark:bg-gray-700 rounded \">\r\n                {/* <h6>Step {`${step + 1}`}\r\n                    content\r\n   </h6> */}\r\n                \r\n                {step==0 && \r\n                \r\n               <OrderDetails />\r\n               }\r\n               {step==1&& \r\n                <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n                    <MasterPermissionBox />\r\n               </AdaptableCard> }\r\n                \r\n            </div>\r\n            <div className=\"mt-4 text-right\">\r\n                <Button\r\n                    className=\"mx-2\"\r\n                    onClick={onPrevious}\r\n                    disabled={step === 0}\r\n                >\r\n                    Previous\r\n                </Button>\r\n                {step < 3 && <Button onClick={onNext} disabled={step === 3} variant=\"solid\">\r\n                    {step === 3 ? 'Completed' : 'Next'}\r\n                </Button>}\r\n                {step === 3 && <Button onClick={onNext}  variant=\"solid\">\r\n                 {'Submit'}\r\n                </Button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controlled\r\n","import React from 'react'\r\nimport StepControlled from './StepControlled'\r\nimport { AdaptableCard, RichTextEditor } from 'components/shared'\r\nimport { Input, FormItem } from 'components/ui'\r\nimport { Field } from 'formik'\r\nexport default function NewOrders() {\r\n   \r\n  return (\r\n    <>\r\n    <div>Orders/Create Order</div>\r\n    <div className='mt-5'>\r\n    <StepControlled />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport {\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport get from 'lodash/get'\r\nimport { countryList } from 'constants/countries.constant'\r\nimport * as Yup from 'yup'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    country: Yup.string().required('Please select country'),\r\n    addressLine1: Yup.string().required('Please enter your address'),\r\n    addressLine2: Yup.string(),\r\n    city: Yup.string().required('Please enter your city'),\r\n    state: Yup.string().required('Please enter your state'),\r\n    zipCode: Yup.string().required('Please enter zip code'),\r\n    sameCorrespondenceAddress: Yup.bool(),\r\n    correspondenceAddress: Yup.object().when('sameCorrespondenceAddress', {\r\n        is: false,\r\n        then: Yup.object().shape({\r\n            country: Yup.string().required('Please select country'),\r\n            addressLine1: Yup.string().required('Please enter your address'),\r\n            addressLine2: Yup.string(),\r\n            city: Yup.string().required('Please enter your city'),\r\n            state: Yup.string().required('Please enter your state'),\r\n            zipCode: Yup.string().required('Please enter zip code'),\r\n        }),\r\n        otherwise: (schema) => schema,\r\n    }),\r\n})\r\n\r\nconst AddressForm = (props) => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        countryName,\r\n        addressLine1Name,\r\n        addressLine2Name,\r\n        cityName,\r\n        stateName,\r\n        zipCodeName,\r\n    } = props\r\n\r\n    const getError = useCallback(\r\n        (name) => {\r\n            return get(errors, name)\r\n        },\r\n        [errors]\r\n    )\r\n\r\n    const getTouched = useCallback(\r\n        (name) => {\r\n            return get(touched, name)\r\n        },\r\n        [touched]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"md:grid grid-cols-2 gap-4 mx-4\">\r\n               \r\n                <FormItem\r\n                    label=\"Address Line 1\"\r\n                    invalid={\r\n                        getError(addressLine1Name) &&\r\n                        getTouched(addressLine1Name)\r\n                    }\r\n                    errorMessage={getError(addressLine1Name)}\r\n                >\r\n                    <Field\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name={addressLine1Name}\r\n                        placeholder=\"Address Line 1\"\r\n                        component={Input}\r\n                    />\r\n                </FormItem>\r\n\r\n                <FormItem\r\n                    label=\"Address Line 2\"\r\n                    invalid={\r\n                        getError(addressLine2Name) &&\r\n                        getTouched(addressLine2Name)\r\n                    }\r\n                    errorMessage={getError(addressLine2Name)}\r\n                >\r\n                    <Field\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name={addressLine2Name}\r\n                        placeholder=\"Address Line 2\"\r\n                        component={Input}\r\n                    />\r\n                </FormItem>\r\n            </div>\r\n            <div className=\"md:grid grid-cols-4 gap-4 mx-4\">\r\n              \r\n                <FormItem\r\n                    label=\"City\"\r\n                    invalid={getError(cityName) && getTouched(cityName)}\r\n                    errorMessage={getError(cityName)}\r\n                >\r\n                    <Field\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name={cityName}\r\n                        placeholder=\"City\"\r\n                        component={Input}\r\n                    />\r\n                </FormItem>\r\n                <FormItem\r\n                    label=\"State\"\r\n                    invalid={getError(stateName) && getTouched(stateName)}\r\n                    errorMessage={getError(stateName)}\r\n                >\r\n                    <Field\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name={stateName}\r\n                        placeholder=\"State\"\r\n                        component={Input}\r\n                    />\r\n                </FormItem>\r\n                <FormItem\r\n                    label=\"Country\"\r\n                    invalid={getError(countryName) && getTouched(countryName)}\r\n                    errorMessage={getError(countryName)}\r\n                >\r\n                    <Field name={countryName}>\r\n                        {({ field, form }) => (\r\n                            <Select\r\n                                placeholder=\"Country\"\r\n                                field={field}\r\n                                form={form}\r\n                                options={countryList}\r\n                                value={countryList.filter(\r\n                                    (c) => c.value === get(values, countryName)\r\n                                )}\r\n                                onChange={(c) =>\r\n                                    form.setFieldValue(field.name, c.value)\r\n                                }\r\n                            />\r\n                        )}\r\n                    </Field>\r\n                </FormItem>\r\n                <FormItem\r\n                    label=\"Zip Code\"\r\n                    invalid={getError(zipCodeName) && getTouched(zipCodeName)}\r\n                    errorMessage={getError(zipCodeName)}\r\n                >\r\n                    <Field\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name={zipCodeName}\r\n                        placeholder=\"Zip Code\"\r\n                        component={Input}\r\n                    />\r\n                </FormItem>\r\n            </div>\r\n           \r\n              \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst OrderAddressInfo = ({\r\n    data = {\r\n        country: '',\r\n        addressLine1: '',\r\n        addressLine2: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        sameCorrespondenceAddress: true,\r\n        correspondenceAddress: {\r\n            country: '',\r\n            addressLine1: '',\r\n            addressLine2: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: '',\r\n        },\r\n    },\r\n    onNextChange,\r\n    onBackChange,\r\n    currentStepStatus,\r\n}) => {\r\n    const onNext = (values, setSubmitting) => {\r\n        onNextChange?.(values, 'addressInformation', setSubmitting)\r\n    }\r\n\r\n    const onCheck = (value, field, form) => {\r\n        form.setFieldValue(field.name, value)\r\n    }\r\n\r\n    const onBack = () => {\r\n        onBackChange?.()\r\n    }\r\n\r\n    return (\r\n        <>\r\n             <h3 className=\"mx-4 mb-4 mt-2\">ADDRESS</h3>\r\n            <Formik\r\n                initialValues={data}\r\n                enableReinitialize\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setSubmitting(true)\r\n                    setTimeout(() => {\r\n                        onNext(values, setSubmitting)\r\n                    }, 1000)\r\n                }}\r\n            >\r\n                {({ values, touched, errors, setFieldValue, isSubmitting }) => {\r\n                    const formProps = { values, touched, errors }\r\n                    return (\r\n                        <Form>\r\n                            <FormContainer>\r\n                               \r\n                                <AddressForm\r\n                                    countryName=\"country\"\r\n                                    addressLine1Name=\"addressLine1\"\r\n                                    addressLine2Name=\"addressLine2\"\r\n                                    cityName=\"city\"\r\n                                    stateName=\"state\"\r\n                                    zipCodeName=\"zipCode\"\r\n                                    {...formProps}\r\n                                />\r\n                              \r\n                            </FormContainer>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderAddressInfo\r\n","import React, { useState } from 'react'\r\nimport OrderAccountInfo from './OrderAccountInfo'\r\nimport OrderContactInfo from './OrderContactInfo'\r\nimport OrderAddressInfo from './OrderAddressInfo'\r\nimport OrderUploadFiles from './OrderUploadFiles'\r\nimport OrderBillingInfo from './OrderBillingInfo'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport { Card } from 'components/ui'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nconst OrderDetails = (props) => {\r\n    const location = useLocation()\r\n\r\n    const data = location?.state?.rowData;\r\n    // console.log(\"navya\",location?.state?.rowData)\r\n    return (\r\n        <>\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider >\r\n        <Card className=\"mb-4\">\r\n                <div className=\"md:grid grid-cols-2 mb-4\">\r\n                    <h5 className=\"mb-4 mt-1 font-bold\">\r\n                        ORDER DETAILS{' '}\r\n                    </h5>\r\n                </div>\r\n                <div className=\"md:grid grid-cols-6\">\r\n                    <div >\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Order ID:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.id}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Order Value\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.ord_value}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Date of Order\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.ord_dt_of_ord}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Customer ID:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.rel_ord_cust_id}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Customer Name:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.rel_ord_cust_id}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Preferred Payment Mode:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.dgl_ord_payments?.length > 0 ? data.dgl_ord_payments[0]?.pay_mode : \"\"}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2 mt-2\">\r\n                            Payment Status:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.dgl_ord_payments?.length > 0 ? data.dgl_ord_payments[0]?.pay_status : \"\"}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2 mt-2\">\r\n                            Delivery Address:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.ord_delivery_add}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2 mt-2\">\r\n                            Solutions Details:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">Amazon Echo Show with Fire...</p>\r\n                        </div>\r\n                    </div> */}\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2 mt-2\">\r\n                            Quantity of Order:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.ord_tot_qty}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2 mt-2\">\r\n                            Order Status:\r\n                        </div>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">{data.ord_status}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2 mt-2\">\r\n                            Proof of Delivery: \r\n                        </div>\r\n                            <a className='text-blue-500' href='javascript:void(0)'>{data.ord_proof_of_del_url}</a>\r\n                        {/* <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base\">Customer 1</p>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n          </AdaptableCard>\r\n          {/* <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider >\r\n          <div className=\"md:grid grid-cols-2 mb-4\">\r\n          <h3 className=\"mx-4 mb-4 mt-2\">SOLUTIONS DETAILS</h3>\r\n          </div>\r\n          </AdaptableCard>\r\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider >\r\n          <OrderAddressInfo/>\r\n          </AdaptableCard>\r\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider >\r\n          <OrderBillingInfo/>\r\n          </AdaptableCard>\r\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" >\r\n          <OrderUploadFiles/>\r\n          </AdaptableCard> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n"],"names":["Math","floor","random","toString","className","useState","step","setStep","onChange","nextStep","onNext","current","title","OrderDetails","bodyClass","onClick","disabled","variant","NewOrders","StepControlled","Yup","shape","country","required","addressLine1","addressLine2","city","state","zipCode","sameCorrespondenceAddress","correspondenceAddress","when","is","then","otherwise","schema","props","location","useLocation","data","rowData","divider","id","ord_value","ord_dt_of_ord","rel_ord_cust_id","dgl_ord_payments","length","pay_mode","pay_status","ord_delivery_add","ord_tot_qty","ord_status","href","ord_proof_of_del_url"],"sourceRoot":""}