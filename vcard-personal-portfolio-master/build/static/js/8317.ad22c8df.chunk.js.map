{"version":3,"file":"static/js/8317.ad22c8df.chunk.js","mappings":"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","sources":["services/RetailService.js","views/accounts/ReatailCustomers/components/RetailAccountInfo.js","views/accounts/ReatailCustomers/components/RetailContactInfo.js","views/accounts/ReatailCustomers/components/RetailAddressInfo.js","views/accounts/ReatailCustomers/components/RetailUploadFiles.js","views/accounts/ReatailCustomers/components/RetailDetails.js","views/accounts/ReatailCustomers/components/RetailPreview.js","views/accounts/ReatailCustomers/components/StepControlled.js","views/accounts/ReatailCustomers/components/NewRetail.js","views/accounts/ReatailCustomers/components/RetailUserInfo.js","views/accounts/ReatailCustomers/components/RetailMasterInfo.js","views/accounts/ReatailCustomers/store/dataSlice.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport async function apiUpdateRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: '/account/acc-operators',\r\n        method: 'put',\r\n        data,\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// export async function apiGetSalesOrders(params) {\r\n//     return ApiService.fetchData({\r\n//         url: '/retails/sales/orders',\r\n//         method: 'get',\r\n//         params,\r\n//     })\r\n// }\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n\r\n    return ApiService.fetchData({\r\n        //url: `/account/retail-customers?page_no=${params.pageIndex}&page_size=${params.pageSize}&sort_field=${params.sort.key}`,\r\n\r\n        url: `/account/retail-customers`,\r\n\r\n        method: 'get',\r\n        params\r\n\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateRetailAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/retail-customers?id=${id}&cust_status=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetCustomerCatRetail(data) {\r\n\r\n    return ApiService.fetchData({\r\n\r\n        url: `/account/cust-cats/unq-id-acc-type/drop-down/${data.enterAccount}/RetailCustomer`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import {\r\n    Input,\r\n\r\n    DatePicker,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n    Dialog,\r\n    Tooltip,\r\n    Button,\r\n} from 'components/ui'\r\nimport { Field, FieldArray, Form, Formik } from 'formik'\r\nimport { useSelector } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { timeZone } from '../../../../mock/data/timezones'\r\nimport { useState } from 'react'\r\nimport { RiCloseCircleFill } from 'react-icons/ri'\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs'\r\n\r\nexport const statusOptions = [\r\n    { label: 'Married', value: 'M' },\r\n    { label: 'Widowed', value: 'W' },\r\n    { label: 'Separated', value: 'S' },\r\n    { label: 'Divorced', value: 'D' },\r\n    { label: 'Single ', value: 'S' },\r\n]\r\nconst genderOptions = [\r\n    { label: 'Airtel Inc.', value: '5' },\r\n    { label: 'Airtel Inc.', value: '6' },\r\n    { label: 'Airtel India', value: '7' },\r\n]\r\nconst orientationtype = [\r\n    { label: 'Right to Left', value: \"RTL\" },\r\n    { label: 'Left to Right', value: \"LTR\" },\r\n]\r\n\r\nconst language = [\r\n    { label: 'English', value: 1 },\r\n    { label: 'Spanish', value: 2 },\r\n    { label: 'Arabic', value: 3 },\r\n    { label: 'Portugese', value: 4 },\r\n\r\n]\r\n\r\n\r\nconst currency = [\r\n    { label: 'USD', value: 1 },\r\n    { label: 'EUR', value: 2 },\r\n    { label: 'CAD', value: 3 },\r\n    { label: 'KWD', value: 4 },\r\n    { label: 'INR', value: 5 },\r\n]\r\n\r\nconst timeZonea = [\r\n    { label: 'India (GMT+5:30)', value: 1 },\r\n    { label: 'USA (GMT-4)', value: 2 },\r\n    { label: 'Chicago (GMT-5)', value: 3 },\r\n    { label: 'Phoenix (GMT-7)', value: 4 },\r\n    { label: 'Los Angeles (GMT-7)', value: 5 },\r\n]\r\n\r\nconst parentAccount = [\r\n    { label: 'Global MNO', value: 1 },\r\n\r\n]\r\n\r\nconst custCat = [\r\n    { label: 'Premium', value: 1 },\r\n    { label: 'Platinum', value: 2 },\r\n    { label: 'Gold', value: 3 },\r\n    { label: 'Silver', value: 4 },\r\n\r\n]\r\n\r\nconst custOperator = [\r\n    { label: 'Airtel Telangana', value: 1 },\r\n    { label: 'Airtel Mumbai', value: 2 },\r\n    { label: 'Airtel Rajasthan ', value: 3 },\r\n\r\n]\r\n\r\nconst retailAccInitValues = {\r\n    retailId: '', // not in api\r\n    // accMnoParentId: '',\r\n    custName: '',\r\n    customerType: '',\r\n    custCompName: '',\r\n    custIncorpDt: '',\r\n    custTaxId: '',\r\n    custTimeZone: '',\r\n    custCurrency: '',\r\n    custLang: '',\r\n    custOrient: '',\r\n\r\n}\r\n\r\n\r\nconst retailValidationSchema = Yup.object().shape({\r\n    //providerId : Yup.string().required('Please Enter Provider Id'),\r\n    //accMnoParentId: Yup.string().required('Please Enter Parent Account'),\r\n    custName: Yup.string().required('Please enter retail customer title').nullable(),\r\n    customerType: Yup.string().required('Please select type operator').nullable(),\r\n    custCompName: Yup.string().required('Please enter company name').nullable(),\r\n    custIncorpDt: Yup.string().required('Please select corporate date').nullable(),\r\n    custTaxId: Yup.string().required('Please enter tax id').nullable(),\r\n    custTimeZone: Yup.string().required('Please select time zone').nullable(),\r\n    custCurrency: Yup.string().required('Please select currency').nullable(),\r\n    custLang: Yup.string().required('Please select language').nullable(),\r\n    custOrient: Yup.string().required('Please enter display orientation').nullable()\r\n})\r\nconst RetailAccountInfo = ({ formik, onChange, refId, ...props }) => {\r\n\r\n    const currencyList = useSelector((state) => state.retailsList?.data?.currencyList)\r\n    const parentAccountList = useSelector((state) => state.retailsList?.data?.parentAccountList)\r\n    const productCategoryList = useSelector((state) => state.retailsList?.data?.productCatList)\r\n    const custmoerCategoryList = useSelector((state) => state.retailsList?.data?.custmoerCatList)\r\n    const dateFormat = useSelector((state) => state.locale.dateFormat)\r\n\r\n\r\n    const timeZoneList = timeZone?.map((timezone) => ({\r\n        value: timezone.id,\r\n        label: timezone.value,\r\n    }))\r\n\r\n\r\n    const [dialogIsOpen, setIsOpen] = useState(false)\r\n    const [newLabel, setNewLabel] = useState('')\r\n    const openDialog = () => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const onDialogClose = (e) => {\r\n        setIsOpen(false)\r\n    }\r\n    const onDialogOk = (push, values) => {\r\n        if (newLabel !== '') {\r\n            push({ field_title: newLabel, field_value: '' })\r\n            setNewLabel('')\r\n            setIsOpen(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"mx-4 mb-4 mt-2\">ACCOUNT INFO</h3>\r\n\r\n            <Formik\r\n                innerRef={refId}\r\n                initialValues={props.retailIntialValues.retailAccInitValues}\r\n                validationSchema={retailValidationSchema}\r\n\r\n\r\n                onSubmit={(values, { setSubmitting }) => {\r\n\r\n\r\n                    setSubmitting(true)\r\n                    let updatedPayload = { ...props.retailState, ...values }\r\n\r\n                    props.setRetailState(updatedPayload)\r\n                    let dataToStore = props.retailIntialValues\r\n                    dataToStore.retailAccInitValues = values\r\n                    props.setRetailIntialValues(dataToStore)\r\n\r\n                }}\r\n            >\r\n                {({ values, touched, errors, isSubmitting }) => {\r\n                    return (\r\n                        <Form>\r\n                            <FormContainer>\r\n                                <div className=\"md:grid grid-cols-4 gap-4 mx-4\">\r\n\r\n\r\n                                    <FormItem\r\n                                        label={<p>Retail Customer Title<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custName &&\r\n                                            touched.custName\r\n                                        }\r\n                                        errorMessage={errors.custName}\r\n                                    >\r\n                                        <Field\r\n\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custName\"\r\n                                            placeholder=\"Enter Retail Customer Title \"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label={<p>Operator<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.customerType && touched.customerType\r\n                                        }\r\n                                        errorMessage={errors.customerType}\r\n                                    >\r\n                                        <Field name=\"customerType\">\r\n                                            {({ field, form }) => (\r\n                                                <Select\r\n                                                    placeholder=\"Airtel Inc.\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    options={parentAccountList}\r\n                                                    value={parentAccountList?.filter(\r\n                                                        (gender) =>\r\n                                                            gender.value ===\r\n                                                            values.customerType\r\n                                                    )}\r\n                                                    onChange={(gender) =>\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            gender.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n\r\n\r\n                                    <FormItem\r\n                                        label={<p>Company Name<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custCompName &&\r\n                                            touched.custCompName\r\n                                        }\r\n                                        errorMessage={errors.custCompName}\r\n                                    >\r\n                                        <Field\r\n\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custCompName\"\r\n                                            placeholder=\"Enter Company Name\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label={<p>Incorporation Date<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custIncorpDt &&\r\n                                            touched.custIncorpDt\r\n                                        }\r\n                                        errorMessage={errors.custIncorpDt}\r\n\r\n                                    >\r\n                                        <Field name=\"custIncorpDt\" placeholder=\"Incorporation Date\">\r\n                                            {({ field, form }) => (\r\n                                                <DatePicker\r\n                                                placeholder=\"Select incorporation date\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    value={field.value}\r\n                                                    onChange={(custIncorpDt) => {\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            custIncorpDt\r\n                                                        )\r\n                                                    }}\r\n                                                    maxDate={new Date()}\r\n                                                    inputFormat= {dateFormat}\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label={<p>Tax ID<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custTaxId && touched.custTaxId}\r\n                                        errorMessage={errors.custTaxId}\r\n\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custTaxId\"\r\n                                            placeholder=\"Enter Tax ID\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Customer Category</p>}\r\n\r\n                                    >\r\n                                        <Field name=\"custCat\">\r\n                                            {({ field, form }) => (\r\n                                                <Select\r\n\r\n                                                    placeholder=\"Select Customer category\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    options={custmoerCategoryList}\r\n                                                    value={custmoerCategoryList?.filter(\r\n                                                        (gender) =>\r\n                                                            gender.value ===\r\n                                                            values.custCat\r\n                                                    )}\r\n                                                    onChange={(gender) =>\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            gender.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Time zone<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custTimeZone && touched.custTimeZone\r\n                                        }\r\n                                        errorMessage={errors.custTimeZone}\r\n\r\n                                    >\r\n                                        <Field name=\"custTimeZone\">\r\n                                            {({ field, form }) => (\r\n                                                <Select\r\n                                                    value={timeZoneList?.filter(\r\n                                                        (gender) =>\r\n                                                            gender.value ===\r\n                                                            values.custTimeZone\r\n                                                    )}\r\n                                                    placeholder=\"Select Type\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    options={timeZoneList}\r\n                                                    onChange={(gender) =>\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            gender.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Currency<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custCurrency && touched.custCurrency\r\n                                        }\r\n                                        errorMessage={errors.custCurrency}\r\n\r\n                                    >\r\n                                        <Field name=\"custCurrency\">\r\n                                            {({ field, form }) => (\r\n                                                <Select\r\n                                                    value={currencyList?.filter(\r\n                                                        (gender) =>\r\n                                                            gender.value ===\r\n                                                            values.custCurrency\r\n                                                    )}\r\n                                                    placeholder=\"Select Type\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    options={currencyList}\r\n                                                    onChange={(gender) =>\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            gender.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Language<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custLang && touched.custLang\r\n                                        }\r\n                                        errorMessage={errors.custLang}\r\n                                    >\r\n                                        <Field name=\"custLang\">\r\n                                            {({ field, form }) => (\r\n                                                <Select\r\n                                                    value={language.filter(\r\n                                                        (gender) =>\r\n                                                            gender.value ===\r\n                                                            values.custLang\r\n                                                    )}\r\n                                                    placeholder=\"Select Type\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    options={language}\r\n                                                    onChange={(gender) =>\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            gender.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p> Orientation<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.custOrient &&\r\n                                            touched.custOrient\r\n                                        }\r\n                                        errorMessage={errors.custOrient}\r\n\r\n                                    >\r\n                                        <Field name=\"custOrient\">\r\n                                            {({ field, form }) => (\r\n                                                <Select\r\n                                                    value={orientationtype.filter(\r\n                                                        (gender) =>\r\n                                                            gender.value ===\r\n                                                            values.custOrient\r\n                                                    )}\r\n                                                    placeholder=\"Select Type\"\r\n                                                    field={field}\r\n                                                    form={form}\r\n                                                    options={orientationtype}\r\n                                                    onChange={(gender) =>\r\n                                                        form.setFieldValue(\r\n                                                            field.name,\r\n                                                            gender.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </Field>\r\n                                    </FormItem>\r\n                                    <FieldArray name=\"fields\">\r\n                                        {({ push, remove }) => (\r\n                                            <>\r\n\r\n                                                {values.fields.map((item, index) => {\r\n                                                    return (\r\n\r\n\r\n                                                        <FormItem\r\n                                                            label={\r\n                                                                <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                                                                    <p style={{ marginRight: '20px' }}>{item.field_title}</p>\r\n                                                                    <Tooltip title={`Remove`}>\r\n                                                                        <span\r\n                                                                            className={`cursor-pointer  text-${'rose'}-800 hover:text-${'rose'}-800`}\r\n                                                                            onClick={() => remove(index)}\r\n                                                                            style={{ marginLeft: 'auto' }}\r\n                                                                        >\r\n                                                                            <RiCloseCircleFill />\r\n                                                                        </span>\r\n                                                                    </Tooltip>\r\n                                                                </div>\r\n\r\n                                                            }\r\n                                                        >\r\n\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                placeholder=\"\"\r\n                                                                component={Input}\r\n                                                                name={`fields[${index}].field_value`}\r\n                                                            />\r\n\r\n                                                        </FormItem>\r\n\r\n                                                    )\r\n                                                })}\r\n\r\n\r\n\r\n                                                <Dialog\r\n                                                    isOpen={dialogIsOpen}\r\n                                                    onClose={onDialogClose}\r\n                                                    onRequestClose={onDialogClose}\r\n                                                    shouldCloseOnOverlayClick={false}\r\n                                                    shouldCloseOnEsc={false}\r\n                                                >\r\n                                                    <FormItem\r\n                                                        label=\"Field Title\"\r\n                                                    >\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            name=\"title\"\r\n                                                            placeholder=\"Please enter Custom Field Title\"\r\n                                                            component={Input}\r\n                                                            value={newLabel}\r\n                                                            onChange={(e) => setNewLabel(e.target.value)}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <div className=\"text-right mt-6\">\r\n                                                        <Button\r\n                                                            className=\"ltr:mr-2 rtl:ml-2\"\r\n                                                            variant=\"plain\"\r\n                                                            onClick={onDialogClose}\r\n                                                        >\r\n                                                            Cancel\r\n                                                        </Button>\r\n                                                        <Button variant=\"solid\" onClick={() => onDialogOk(push, values,)}>\r\n                                                            Okay\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Dialog>\r\n\r\n                                            </>\r\n                                        )}\r\n                                    </FieldArray>\r\n\r\n\r\n                                </div>\r\n\r\n                            </FormContainer>\r\n                            <div className=\"mt-2\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"plain\"\r\n                                    className=\"font-bold\"\r\n                                    style={{ color: '#004D99' }}\r\n                                    onClick={() => openDialog()}\r\n                                    icon={<BsFillPlusCircleFill fill=\"#004D99\" className='' />}\r\n                                    disabled={values.fields[values.fields.length - 1]?.field_value == '' ? true : false}\r\n                                >\r\n                                    ADD CUSTOM FIELD\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RetailAccountInfo\r\n","import {\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n    DatePicker,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n    Dialog,\r\n    Tooltip,\r\n} from 'components/ui'\r\nimport { Field, FieldArray, Form, Formik } from 'formik'\r\nimport * as Yup from \"yup\";\r\nimport { validateURL } from 'views/Servicefile';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport { useState } from 'react';\r\nimport { RiCloseCircleFill } from 'react-icons/ri';\r\n\r\nconst retailContactInitValues = {\r\n\r\n    custFirstName: \"\",\r\n    custLastName: \"\",\r\n    custMiddleName: \"\",\r\n    custEmailId: \"\",\r\n    custAltCont: \"\",\r\n    custFax: \"\",\r\n    custWebUrl: \"\",\r\n}\r\n\r\nconst retailContactValidationSchema = Yup.object().shape({\r\n    custFirstName: Yup\r\n        .string()\r\n        .required(\"Please enter first name\").nullable(),\r\n    custLastName: Yup\r\n        .string()\r\n        .required(\"Please enter last name\").nullable(),\r\n    // .matches(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/, \"Invalid mobile number\"),\r\n\r\n    custEmailId: Yup.string().required('Please enter email id').email(\"Please enter valid email id\").nullable(),\r\n    // custAltCont: Yup\r\n    // .string()\r\n    // .required(\"Please enter phone number\")\r\n    // .matches(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/, \"Please enter valid number\").nullable(),\r\n\r\n    custPhone: Yup.string().min(2, \"Number must be atleast 2 characters\").max(20, \"Max 20 characters are allowed\")\r\n        .required(\"Please enter phone number\").nullable(),\r\n    //custPrimCont: Yup.string().required('Please Enter  Phone Number'),\r\n    // custFax: Yup.string().required('Please Enter Fax'),\r\n    //custWebUrl: Yup.string().required('Please Enter Web Url'),\r\n})\r\nconst RetailContactInfo = ({ onChange, refId, ...props }) => {\r\n\r\n    const [dialogIsOpen, setIsOpen] = useState(false)\r\n    const [newLabel, setNewLabel] = useState('')\r\n\r\n    const openDialog = () => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const onDialogClose = (e) => {\r\n        setIsOpen(false)\r\n    }\r\n    const onDialogOk = (push, values) => {\r\n        if (newLabel !== '') {\r\n            push({ field_title: newLabel, field_value: '' })\r\n            setNewLabel('')\r\n            setIsOpen(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"mx-4 mb-4 mt-2\">CONTACT INFO</h3>\r\n\r\n            <Formik\r\n                innerRef={refId}\r\n                initialValues={props.retailIntialValues.retailContactInitValues}\r\n                validationSchema={retailContactValidationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n\r\n\r\n                    setSubmitting(true)\r\n                    let updatedPayload = { ...props.retailState, ...values }\r\n\r\n                    props.setRetailState(updatedPayload)\r\n\r\n                    let dataToStore = props.retailIntialValues\r\n                    dataToStore.retailContactInitValues = values\r\n                    props.setRetailIntialValues(dataToStore)\r\n\r\n                }}\r\n            >\r\n                {({ values, touched, errors, isSubmitting }) => {\r\n                    return (\r\n                        <Form>\r\n                            <FormContainer>\r\n                                <div className=\"md:grid grid-cols-4 gap-4 mx-4\">\r\n                                    <FormItem\r\n                                        label={<p>First Name<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custFirstName && touched.custFirstName}\r\n                                        errorMessage={errors.custFirstName}\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custFirstName}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custFirstName\"\r\n                                            placeholder=\"Enter First Name \"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label=\"Middle Name\"\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custMiddleName}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custMiddleName\"\r\n                                            placeholder=\"Enter Middle Name \"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Last Name<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custLastName && touched.custLastName}\r\n                                        errorMessage={errors.custLastName}\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custLastName}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custLastName\"\r\n                                            placeholder=\"Enter Last Name \"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Email ID<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custEmailId && touched.custEmailId}\r\n                                        errorMessage={errors.custEmailId}\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custEmailId}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custEmailId\"\r\n                                            placeholder=\"Enter Email ID\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Phone Number<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custPhone && touched.custPhone}\r\n                                        errorMessage={errors.custPhone}\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custPhone}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custPhone\"\r\n                                            placeholder=\"Enter Phone Number\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label=\"Alternate Phone Number\"\r\n                                    // invalid={errors.custAltCont && touched.custAltCont}\r\n                                    // errorMessage={errors.custAltCont}\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custAltCont}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custAltCont\"\r\n                                            placeholder=\"Enter Alternate Phone Number\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label=\"Fax Number\"\r\n                                        invalid={errors.custFax && touched.custFax}\r\n                                        errorMessage={errors.custFax}\r\n                                    >\r\n                                        <Field\r\n                                            values={values.custFax}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custFax\"\r\n                                            placeholder=\"Enter Fax Number\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label=\"Website URL\"\r\n                                        invalid={errors.custWebUrl && touched.custWebUrl}\r\n                                        errorMessage={errors.custWebUrl}\r\n                                    >\r\n                                        <Field\r\n                                            // values={values.custWebUrl}\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"custWebUrl\"\r\n                                            placeholder=\"Enter Website URL\"\r\n                                            component={Input}\r\n                                            validate={validateURL}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FieldArray name=\"fields\">\r\n                                        {({ push, remove }) => (\r\n                                            <>\r\n\r\n                                                {values.fields.map((item, index) => {\r\n                                                    return (\r\n                                                        <FormItem\r\n                                                            label={\r\n                                                                <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                                                                    <p style={{ marginRight: '20px' }}>{item.field_title}</p>\r\n                                                                    <Tooltip title={`Remove`}>\r\n                                                                        <span\r\n                                                                            className={`cursor-pointer  text-${'rose'}-800 hover:text-${'rose'}-800`}\r\n                                                                            onClick={() => remove(index)}\r\n                                                                            style={{ marginLeft: 'auto' }}\r\n                                                                        >\r\n                                                                            <RiCloseCircleFill />\r\n                                                                        </span>\r\n                                                                    </Tooltip>\r\n                                                                </div>\r\n\r\n                                                            }\r\n                                                        >\r\n\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                placeholder=\"\"\r\n                                                                component={Input}\r\n                                                                name={`fields[${index}].field_value`}\r\n                                                            />\r\n\r\n                                                        </FormItem>\r\n\r\n                                                    )\r\n                                                })}\r\n\r\n                                                <Dialog\r\n                                                    isOpen={dialogIsOpen}\r\n                                                    onClose={onDialogClose}\r\n                                                    onRequestClose={onDialogClose}\r\n                                                    shouldCloseOnOverlayClick={false}\r\n                                                    shouldCloseOnEsc={false}\r\n                                                >\r\n                                                    <FormItem\r\n                                                        label=\"Field Title\"\r\n                                                    >\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            name=\"title\"\r\n                                                            placeholder=\"Please enter Custom Field Title\"\r\n                                                            component={Input}\r\n                                                            value={newLabel}\r\n                                                            onChange={(e) => setNewLabel(e.target.value)}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <div className=\"text-right mt-6\">\r\n                                                        <Button\r\n                                                            className=\"ltr:mr-2 rtl:ml-2\"\r\n                                                            variant=\"plain\"\r\n                                                            onClick={onDialogClose}\r\n                                                        >\r\n                                                            Cancel\r\n                                                        </Button>\r\n                                                        <Button variant=\"solid\" onClick={() => onDialogOk(push, values,)}>\r\n                                                            Okay\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Dialog>\r\n\r\n                                            </>\r\n                                        )}\r\n                                    </FieldArray>\r\n\r\n                                </div>\r\n\r\n                            </FormContainer>\r\n                            <div className=\"mt-2\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"plain\"\r\n                                    className=\"font-bold\"\r\n                                    style={{ color: '#004D99' }}\r\n                                    onClick={() => openDialog()}\r\n                                    icon={<BsFillPlusCircleFill fill=\"#004D99\" className='' />}\r\n                                    disabled={values.fields[values.fields.length - 1]?.field_value === '' ? true : false}\r\n                                >\r\n                                    ADD CUSTOM FIELD\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RetailContactInfo\r\n","import React, { useCallback } from 'react'\r\nimport {\r\n    Input,\r\n\r\n    FormItem,\r\n    FormContainer,\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst addressFields = {\r\n    custCountry: '',\r\n    custAddL1: '',\r\n    custAddL2: '',\r\n    custCity: '',\r\n    custState: '',\r\n    custZipcode: '',\r\n    // sameCorrespondenceAddress: true,\r\n    // correspondenceAddress: {\r\n    //     accCountry: '',\r\n    //     accAddL1: '',\r\n    //     accAddL2: '',\r\n    //     accCity: '',\r\n    //     accState: '',\r\n    //     accZipcode: '',\r\n    // },\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    custCountry: Yup.string().required('Please enter country').nullable(),\r\n    custAddL1: Yup.string().min(6,\"Enter address minimum of 6 characters\").required('Please enter address').nullable(),\r\n    // accAddL2: Yup.string(),\r\n    custCity: Yup.string().required('Please enter city').nullable(),\r\n    custState: Yup.string().required('Please enter state').nullable(),\r\n    //accZipcode: Yup.string().required('Please enter zip code'),\r\n    // sameCorrespondenceAddress: Yup.bool(),\r\n    // correspondenceAddress: Yup.object().when('sameCorrespondenceAddress', {\r\n    //     is: false,\r\n    //     then: Yup.object().shape({\r\n    //         accCountry: Yup.string().required('Please select accCountry'),\r\n    //         accAddL1: Yup.string().required('Please enter your address'),\r\n    //         accAddL2: Yup.string(),\r\n    //         accCity: Yup.string().required('Please enter your accCity'),\r\n    //         accState: Yup.string().required('Please enter your accState'),\r\n    //         accZipcode: Yup.string().required('Please enter zip code'),\r\n    //     }),\r\n    //     otherwise: (schema) => schema,\r\n    // }),\r\n})\r\n\r\nconst genderOptions = [\r\n    { label: 'Airtel Inc.', value: 'M' },\r\n    { label: 'Airtel Inc.', value: 'F' },\r\n    { label: 'Airtel India', value: 'O' },\r\n]\r\n\r\n\r\nconst RetailAddressInfo = ({ onChange, refId, ...props }) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"mx-4 mb-4 mt-2\">ADDRESS</h3>\r\n            <Formik innerRef={refId}\r\n                initialValues={props.retailIntialValues.addressFields}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setSubmitting(true)\r\n                    let updatedPayload = { ...props.retailState, ...values }\r\n                    props.setRetailState(updatedPayload)\r\n                    let dataToStore =  props.retailIntialValues\r\n                    dataToStore.addressFields = values\r\n                    props.setRetailIntialValues(dataToStore)\r\n                }}\r\n            >\r\n                {({ values, touched, errors, setFieldValue, isSubmitting }) => {\r\n                    return (\r\n                        <Form>\r\n                            <FormContainer>\r\n                                <div className=\"md:grid grid-cols-2 gap-4 mx-4\">\r\n                                    <FormItem\r\n                                        label={<p>Address Line 1<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custAddL1 && touched.custAddL1}\r\n                                        errorMessage={errors.custAddL1}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name='custAddL1'\r\n                                            placeholder=\"Address Line 1\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label=\"Address Line 2\"\r\n                                    // invalid={errors.custAddL2 && touched.custAddL2}\r\n                                    // errorMessage={errors.custAddL2}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name={'custAddL2'}\r\n                                            placeholder=\"Address Line 2\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                </div>\r\n                                <div className=\"md:grid grid-cols-4 gap-4 mx-4\">\r\n                                    <FormItem\r\n                                        label={<p>City<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custCity && touched.custCity}\r\n                                        errorMessage={errors.custCity}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name={'custCity'}\r\n                                            placeholder=\"City\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>State<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custState && touched.custState}\r\n                                        errorMessage={errors.custState}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name={'custState'}\r\n                                            placeholder=\"State\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label={<p>Country<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={errors.custCountry && touched.custCountry}\r\n                                        errorMessage={errors.custCountry}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name={'custCountry'}\r\n                                            placeholder=\"State\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label=\"Zip Code\"\r\n                                    //invalid={errors.accZipcode && touched.accZipcode}\r\n                                    //errorMessage={errors.accZipcode}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name={'custZipcode'}\r\n                                            placeholder=\"Zip Code\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                </div>\r\n\r\n                                {/* <AddressForm\r\n                                    countryName=\"accCountry\"\r\n                                    addressLine1Name=\"accAddL1\"\r\n                                    addressLine2Name=\"accAddL2\"\r\n                                    cityName=\"accCity\"\r\n                                    stateName=\"accState\"\r\n                                    zipCodeName=\"accZipcode\"\r\n                                    {...formProps}\r\n                                />\r\n                               */}\r\n                            </FormContainer>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RetailAddressInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    AdaptableCard,\r\n} from 'components/shared'\r\nimport {\r\n\r\n    FormItem,\r\n    FormContainer,\r\n    Input,\r\n    Upload,\r\n    Button,\r\n    Dialog\r\n} from 'components/ui'\r\nimport { Field, FieldArray, Form, Formik } from 'formik'\r\nimport { BsFillDashCircleFill, BsFillPlusCircleFill } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUploadFileType } from 'views/accounts/Operators/store/dataSlice'\r\nimport { apiUploadFiles } from 'services/OperatorsService'\r\nimport appConfig from 'configs/app.config'\r\nimport CloseButton from 'components/ui/CloseButton'\r\nimport { OpenNotification } from 'views/Servicefile'\r\n\r\n\r\nconst saveFilesInAccounts = 1\r\nconst RetailUploadFiles = (props) => {\r\n\r\n    const { errors, touched, values, setFieldValue } = props\r\n    const { enterAccount, acc_user_id } = useSelector((state) => state.auth.user)\r\n    const beforeUpload = async (newFiles, files) => {\r\n        const ress = await apiUploadFiles(newFiles[0], acc_user_id, saveFilesInAccounts)\r\n        return ress\r\n    }\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [content, setContent] = useState(null)\r\n    const onClickView = (fileInfo) => {\r\n        setShowContent(true)\r\n        setContent(fileInfo)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='py-5' style={{ backgroundColor: \"#f5f5f5\" }}>\r\n                <div className=\"md:grid grid-cols-2 gap-4\">\r\n                    <AdaptableCard>\r\n                        <h3 className=\" mb-4 mt-4 mx-4\">UPLOAD FILES</h3>\r\n                        <Formik\r\n                            innerRef={props.refId}\r\n                            initialValues={props.retailIntialValues}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                setSubmitting(true)\r\n                                let updatedPayload = { ...props.retailState, uploadFiles: values.uploadFiles }\r\n                                props.setRetailState(updatedPayload)\r\n                                let dataToStore = props.retailIntialValues\r\n                                dataToStore.uploadFiles = values.uploadFiles\r\n                                props.setRetailIntialValues(dataToStore)\r\n                            }}\r\n                        >\r\n                            {({ values, touched, errors, isSubmitting, setFieldValue }) => {\r\n                                return (\r\n                                    <Form>\r\n                                        <FormContainer>\r\n                                            <div className=\"md:grid grid-cols-2 gap-4 mx-4\">\r\n                                                {values?.uploadFiles?.map((fil, i) => {\r\n                                                    let doc_type;\r\n                                                    try {\r\n                                                        doc_type = fil?.doc_type\r\n                                                    } catch (error) {\r\n                                                        console.error('Invalid JSON:', fil.doc_type);\r\n                                                    }\r\n                                                    return <FormItem\r\n                                                        label={<p>{fil?.doc_name} <span style={{ color: \"red\" }}>{doc_type?.is_mandatory ? '*' : ''}</span></p>}\r\n                                                        key={i}\r\n                                                    >\r\n                                                        <div className=\"md:grid grid-cols-1 gap-3\">\r\n                                                            <AdaptableCard>\r\n                                                                <div>\r\n                                                                    <Upload\r\n                                                                        draggable\r\n                                                                        beforeUpload={beforeUpload}\r\n                                                                        onChange={(updatedFiles, files, uploadRes, filesDetails) => {\r\n                                                                            setFieldValue(`uploadFiles[${i}].file_url`, uploadRes?.data.fileUnqId);\r\n                                                                            setFieldValue(`uploadFiles[${i}].file_name`, uploadRes?.data.fileName);\r\n                                                                            setFieldValue(`uploadFiles[${i}].file_type`, \"upload\");\r\n                                                                            setFieldValue(`uploadFiles[${i}].doc_name`, fil?.doc_name);\r\n                                                                        }\r\n                                                                        }\r\n\r\n                                                                        className='border-gray-200 w-[500] h-[0]' style={{ minHeight: '3rem' }} name={`uploadFiles[${i}].file_url`}>\r\n                                                                        <div className=\"my-10 text-center\">\r\n                                                                            <p className=\"font-semibold\">\r\n                                                                                <span className=\"text-gray-400 dark:text-white\">\r\n                                                                                    {values.uploadFiles[i].file_url && 'File Uploaded' || \"No Files Uploaded\"} ,{' '}\r\n                                                                                </span>\r\n                                                                                <span className=\"text-blue-700\">\r\n                                                                                    Browse\r\n                                                                                </span>\r\n                                                                            </p>\r\n                                                                        </div>\r\n                                                                    </Upload>\r\n                                                                    {values.uploadFiles[i].file_url &&\r\n                                                                        <div className=\"upload-file  cursor-pointer truncate\" >\r\n                                                                            <div className=\"upload-file-info\" onClick={() => onClickView(values.uploadFiles[i])}>\r\n                                                                                <h6 className=\"upload-file-name\">{values.uploadFiles[i].file_name.substring(0, 15)}</h6>\r\n                                                                            </div>\r\n\r\n                                                                            <CloseButton\r\n                                                                                className=\"upload-file-remove \"\r\n                                                                                onClick={() => {\r\n                                                                                    setFieldValue(`uploadFiles[${i}].file_url`, '');\r\n                                                                                    setFieldValue(`uploadFiles[${i}].file_name`, '');\r\n                                                                                    setFieldValue(`uploadFiles[${i}].file_type`, \"upload\");\r\n                                                                                    setFieldValue(`uploadFiles[${i}].doc_name`, fil?.doc_name);\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        </div>}\r\n                                                                </div>\r\n                                                            </AdaptableCard>\r\n                                                        </div>\r\n                                                    </FormItem>\r\n                                                })}\r\n                                            </div>\r\n\r\n                                        </FormContainer>\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                    </AdaptableCard>\r\n                    <AdaptableCard>\r\n                        <h3 className=\"mb-4 mt-4 mx-4\">ADDITIONAL FILES</h3>\r\n                        <Formik innerRef={props.refIdAdd}\r\n                            initialValues={props?.retailIntialValues}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                setSubmitting(true)\r\n                                let isUploaded = props.retailIntialValues.uploadFiles?.filter(e => e.doc_type.is_mandatory === true).every(e => e.file_name !== \"\")\r\n                                if (isUploaded) {\r\n                                    let updatedPayload = { ...props.retailState, additionalFiles : values.additionalFiles }\r\n                                    props.setRetailState(updatedPayload)\r\n                                    let dataToStore = props.retailIntialValues\r\n                                    dataToStore.additionalFiles = values.additionalFiles\r\n                                    props.setRetailIntialValues(dataToStore)\r\n                                    if (props.mode == \"ADD\") {\r\n                                        props.setStep(props.step + 1)\r\n                                    } else {\r\n                                        props.setStep(props.step + 2)\r\n                                    }\r\n                                }else{\r\n                                    OpenNotification('warning', 'Please upload the required documents')\r\n                                }\r\n                                }\r\n                            }\r\n                        >\r\n                            {({ values, touched, errors, isSubmitting, setFieldValue }) => {\r\n                                return (\r\n                                    <Form>\r\n                                        <FieldArray name=\"additionalFiles\">\r\n                                            {({ push, remove }) => (\r\n                                                <>\r\n                                                    {values?.additionalFiles && values?.additionalFiles.map((file, index) => (\r\n                                                        <>\r\n                                                            <div className=\"md:grid grid-cols-2 gap-2 mx-4 my-1\" key={index}>\r\n                                                                <div>\r\n                                                                    <Field\r\n                                                                        type=\"text\"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        name={`additionalFiles[${index}].doc_name`}\r\n                                                                        placeholder=\"Enter Title\"\r\n                                                                        component={Input}\r\n                                                                        // className=\"w-64\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <Upload\r\n                                                                        draggable\r\n                                                                        className=\"border-gray-200 w-[500] h-[0] px-6\"\r\n                                                                        style={{ minHeight: \"3rem\" }}\r\n                                                                        beforeUpload={beforeUpload}\r\n                                                                        onChange={(updatedFiles, files, uploadRes, filesDetails) => {\r\n                                                                            setFieldValue(`additionalFiles[${index}].file_url`, uploadRes?.data.fileUnqId);\r\n                                                                            setFieldValue(`additionalFiles[${index}].file_name`, uploadRes?.data.fileName);\r\n                                                                            setFieldValue(`additionalFiles[${index}].file_type`, \"additional\");\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div className=\"my-10 text-center\">\r\n                                                                            <p className=\"font-semibold\">\r\n                                                                                <span className=\"text-gray-400 dark:text-white\">\r\n                                                                                    {values?.additionalFiles[index]?.file_url && 'File Uploaded' || \"No Files Uploaded\"} ,{' '}\r\n                                                                                </span>\r\n                                                                                <span className=\"text-blue-700\">Browse</span>\r\n                                                                            </p>\r\n                                                                        </div>\r\n                                                                    </Upload>\r\n                                                                    {values?.additionalFiles[index]?.file_url &&\r\n                                                                        <div className=\"upload-file truncate\" >\r\n                                                                            <div className=\"upload-file-info\" onClick={() => onClickView(values.additionalFiles[index])}>\r\n                                                                                <h6 className=\"upload-file-name\">{values.additionalFiles[index].file_name.substring(0, 15)}</h6>\r\n                                                                            </div>\r\n                                                                            <CloseButton\r\n                                                                                className=\"upload-file-remove \"\r\n                                                                                onClick={() => {\r\n                                                                                    setFieldValue(`additionalFiles[${index}].file_url`, '');\r\n                                                                                    setFieldValue(`additionalFiles[${index}].file_name`, '');\r\n                                                                                    setFieldValue(`additionalFiles[${index}].file_type`, \"\");\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        </div>}\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"grid grid-cols-2\">\r\n                                                                <Button\r\n                                                                    variant=\"plain\"\r\n                                                                    type=\"button\"\r\n                                                                    className=\"font-bold m-2\"\r\n                                                                    style={{ color: \"#004D99\" }}\r\n                                                                    icon={<BsFillPlusCircleFill fill=\"#004D99\" />}\r\n                                                                    onClick={() => push({ file_name: \"\", file_url: \"\", file_type: \"\", })}\r\n                                                                >\r\n                                                                    ADD FILE\r\n                                                                </Button>\r\n                                                                \r\n                                                                    <Button\r\n                                                                        variant=\"plain\"\r\n                                                                        type=\"button\"\r\n                                                                        className=\"font-bold m-2\"\r\n                                                                        style={{ color: \"#FF0000\" }}\r\n                                                                         disabled={index === 0 ? true : false}\r\n\r\n                                                                        icon={<BsFillDashCircleFill fill=\"#FF0000\" />}\r\n                                                                        onClick={() => remove(index)}\r\n                                                                    >\r\n                                                                        DELETE FILE\r\n                                                                    </Button>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    ))}\r\n                                                    <Dialog isOpen={showContent}\r\n                                                        onClose={() => setShowContent(false)}>\r\n                                                        <div className='p-5'>\r\n                                                            <img src={`${appConfig.apiPrefix}/media/uniqid/${content?.file_url}`} alt=\"Content\" />\r\n                                                            <Button onClick={() => window.open(`${appConfig.apiPrefix}/media/uniqid/${content?.file_url}`, '_blank')} className='mt-2' variant='solid'>Download</Button>\r\n                                                        </div>\r\n\r\n                                                    </Dialog>\r\n                                                </>\r\n                                            )}\r\n                                        </FieldArray>\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                    </AdaptableCard>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default RetailUploadFiles\r\n","import React, { forwardRef, useImperativeHandle, useState } from 'react'\r\n\r\nimport { AdaptableCard } from 'components/shared'\r\nimport RetailAccountInfo from './RetailAccountInfo'\r\nimport RetailContactInfo from './RetailContactInfo'\r\nimport RetailAddressInfo from './RetailAddressInfo'\r\nimport RetailUploadFiles from './RetailUploadFiles'\r\nimport { useFormikContext } from 'formik'\r\n\r\n\r\n\r\nconst RetailDetails = forwardRef((props, ref) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    RetailAccountInfo: { values: null, validated: false },\r\n    RetailContactInfo: { values: null, validated: false },\r\n    RetailAddressInfo: { values: null, validated: false },\r\n    RetailUploladFileInfo : { values: null, validated: false },\r\n    RetailAdditionalFileInfo : { values: null, validated: false },\r\n  })\r\n\r\n  const retailAccountInforef = React.useRef()\r\n  const retailContactInforef = React.useRef()\r\n  const retailAddressInforef = React.useRef()\r\n  const retailUploladFileInforef = React.useRef()\r\n  const retailAdditionalFileInforef = React.useRef()\r\n\r\n\r\n  // React.useEffect(() => {\r\n  //   if (\r\n  //     formData.RetailAccountInfo.validated\r\n  //     //&& formData.EnterpriseContactInfo.validated\r\n  //   ) {\r\n  //     alert('Ready to save')\r\n  //   }\r\n  // }, [formData])\r\n\r\n  async function handleSubmit() {\r\n    let validationErrors = false;\r\n\r\n    await retailAccountInforef.current?.validateForm().then(errors => {\r\n      if (errors && Object.keys(errors).length > 0) {\r\n        retailAccountInforef.current.setTouched(errors, true);\r\n        validationErrors = true;\r\n      }\r\n    });\r\n    await retailContactInforef.current?.validateForm().then(errors => {\r\n\r\n      if (errors && Object.keys(errors).length > 0) {\r\n        retailContactInforef.current.setTouched(errors, true);\r\n        validationErrors = true;\r\n      }\r\n\r\n    });\r\n    await retailAddressInforef.current?.validateForm().then(errors => {\r\n\r\n      if (errors && Object.keys(errors).length > 0) {\r\n        retailAddressInforef.current.setTouched(errors, true);\r\n        validationErrors = true;\r\n      }\r\n\r\n     \r\n    });\r\n\r\n    await retailUploladFileInforef.current?.validateForm().then(errors => {\r\n\r\n      if (errors && Object.keys(errors).length > 0) {\r\n        retailUploladFileInforef.current.setTouched(errors, true);\r\n        validationErrors = true;\r\n      }\r\n\r\n     \r\n    });\r\n    await retailAdditionalFileInforef.current?.validateForm().then(errors => {\r\n\r\n      if (errors && Object.keys(errors).length > 0) {\r\n        retailAdditionalFileInforef.current.setTouched(errors, true);\r\n        validationErrors = true;\r\n      }\r\n\r\n     \r\n    });\r\n\r\n    if (!validationErrors) {\r\n      await retailAccountInforef.current?.submitForm()\r\n      await retailContactInforef.current?.submitForm()\r\n      await retailAddressInforef.current?.submitForm()\r\n      await retailUploladFileInforef.current?.submitForm()\r\n      await retailAdditionalFileInforef.current?.submitForm()\r\n    \r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  function handleChangeRetailAccountInfo(data) {\r\n    setFormData({ ...formData, RetailAccountInfo: data })\r\n  }\r\n\r\n  function handleChangeRetailContactInfo(data) {\r\n    setFormData({ ...formData, RetailContactInfo: data })\r\n  }\r\n\r\n  function handleChangeRetailAddressInfo(data) {\r\n    setFormData({ ...formData, RetailAddressInfo: data })\r\n  }\r\n\r\n  function handleChangeRetailUploladFileInfo(data) {\r\n    setFormData({ ...formData, RetailUploladFileInfo: data })\r\n  }\r\n\r\n  function handleChangeRetailAdditionalFileInfo(data) {\r\n    setFormData({ ...formData, RetailAdditionalFileInfo: data })\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      handleSubmitFromParent() {\r\n        handleSubmit()\r\n      },\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-5\" style={{backgroundColor:\"#F5F5F5\"}}>\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider>\r\n          <div className='border-b pb-6 mx-4'>\r\n            <RetailAccountInfo handleSubmit={handleSubmit}\r\n              onChange={handleChangeRetailAccountInfo}\r\n              refId={retailAccountInforef}\r\n              retailState={props.retailState}\r\n              setRetailState={props.setRetailState}\r\n              retailIntialValues={props.retailIntialValues}\r\n              setRetailIntialValues={props.setRetailIntialValues}\r\n            />\r\n          </div>\r\n          <div className='border-b pb-6 mx-4'>\r\n            <RetailContactInfo handleSubmit={handleSubmit}\r\n              onChange={handleChangeRetailContactInfo}\r\n              refId={retailContactInforef}\r\n              retailState={props.retailState}\r\n              setRetailState={props.setRetailState}\r\n              retailIntialValues={props.retailIntialValues}\r\n              setRetailIntialValues={props.setRetailIntialValues}\r\n            />\r\n          </div>\r\n\r\n          <RetailAddressInfo handleSubmit={handleSubmit}\r\n            onChange={handleChangeRetailAddressInfo}\r\n            refId={retailAddressInforef}\r\n            retailState={props.retailState}\r\n            setRetailState={props.setRetailState}\r\n            setStep={props.setStep}\r\n            step={props.step}\r\n            retailIntialValues={props.retailIntialValues}\r\n            setRetailIntialValues={props.setRetailIntialValues}\r\n          />\r\n        </AdaptableCard>\r\n\r\n    \r\n      <AdaptableCard className=\"h-full\" bodyClass=\"h-full\"  >\r\n        < RetailUploadFiles \r\n          handleSubmit={handleSubmit}\r\n          onChange={handleChangeRetailUploladFileInfo}\r\n          onChangeAdd={handleChangeRetailAdditionalFileInfo}\r\n          refId={retailUploladFileInforef}\r\n          refIdAdd={retailAdditionalFileInforef}\r\n          retailState={props.retailState}\r\n          setRetailState={props.setRetailState}\r\n          setStep={props.setStep}\r\n          step={props.step}\r\n          retailIntialValues={props.retailIntialValues}\r\n          setRetailIntialValues={props.setRetailIntialValues}\r\n          mode={props.mode}\r\n        />\r\n      </AdaptableCard>\r\n        </div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default RetailDetails\r\n","import { Alert, Button, Card, Dialog } from 'components/ui'\r\nimport React, { useState } from 'react'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport GetDropdownLabel from 'views/Servicefile';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { timeZone } from '../../../../mock/data/timezones'\r\nimport appConfig from 'configs/app.config';\r\nimport dayjs from 'dayjs';\r\n\r\nconst custOperator = [\r\n    { label: 'Airtel Telangana', value: '1' },\r\n    { label: 'Airtel Mumbai', value: '2' },\r\n    { label: 'Airtel Rajasthan ', value: '3' },\r\n\r\n]\r\n\r\nconst genderOptions = [\r\n    { label: 'Airtel Inc.', value: '5' },\r\n    { label: 'Airtel Inc.', value: '6' },\r\n    { label: 'Airtel India', value: '7' },\r\n]\r\nconst orientationtype = [\r\n    { label: 'Right to Left', value: \"RTL\" },\r\n    { label: 'Left to Right', value: \"LTR\" },\r\n]\r\n\r\nconst language = [\r\n    { label: 'English', value: 1 },\r\n    { label: 'Spanish', value: 2 },\r\n    { label: 'Arabic', value: 3 },\r\n    { label: 'Portugese', value: 4 },\r\n\r\n]\r\n\r\n// const currency = [\r\n//     { label: 'USD', value: '1' },\r\n//     { label: 'EUR', value: '2' },\r\n//     { label: 'CAD', value: '3' },\r\n//     { label: 'KWD', value: '4' },\r\n//     { label: 'INR', value: '5' },\r\n// ]\r\n\r\n// const timeZone = [\r\n//     { label: 'India (GMT+5:30)', value: '1' },\r\n//     { label: 'USA (GMT-4)', value: '2' },\r\n//     { label: 'Chicago (GMT-5)', value: '3' },\r\n//     { label: 'Phoenix (GMT-7)', value: '4' },\r\n//     { label: 'Los Angeles (GMT-7)', value: '5' },\r\n// ]\r\n\r\n// const parentAccount = [\r\n//     { label: 'Global MNO', value: '1' },\r\n\r\n// ]\r\n\r\nconst custCat = [\r\n    { label: 'Premium', value: '1' },\r\n    { label: 'Platinum', value: '2' },\r\n    { label: 'Gold', value: '3' },\r\n    { label: 'Silver', value: '3' },\r\n\r\n]\r\n\r\nfunction RetailPreview({ retailState, step, setStep, message , mode}) {\r\n\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [content, setContent] = useState(null)\r\n\r\n    const currencyList = useSelector((state) => state.retailsList?.data?.currencyList)\r\n    const parentAccountList = useSelector((state) => state.retailsList?.data?.parentAccountList)\r\n    const custmoerCategoryList = useSelector((state) => state.retailsList?.data?.custmoerCatList)\r\n    const dateFormat = useSelector((state) => state.locale.dateFormat)\r\n    \r\n    const timeZoneList = timeZone?.map((timezone) => ({\r\n        value: timezone.id,\r\n        label: timezone.value,\r\n    }))\r\n\r\n    function convert(str) {\r\n        var date = new Date(str),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [day, mnth, date.getFullYear()].join(\"/\");\r\n    }\r\n    console.log(retailState, \"retailState\")\r\n    const onClickFile = (fileInfo) => {\r\n        setShowContent(true)\r\n        setContent(fileInfo)\r\n    }\r\n    return (\r\n        <>\r\n         {message && (\r\n                <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                    {Array.isArray(message) ? message.join(\", \") : message}\r\n                </Alert>\r\n            )}\r\n            <Card className=\"mx-3 mb-4 mt-1\">\r\n                <div className=\"md:grid grid-cols-2\">\r\n                    {/* to=\"/account-new-retail\" */}\r\n                    <h6 className=\"mx-2 mb-4 mt-1 font-bold text-cyan-500\">\r\n                        RETAIL CUSTOMER DETAILS{' '}\r\n                    </h6>\r\n                 <div className=\" text-base  font-bold flex justify-end\">\r\n                        <button onClick={() => { setStep(0) }} >\r\n                            <div className='flex'>\r\n                                <MdModeEdit className=\"mt-1\" />\r\n                                <p className='ml-2'>EDIT</p>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"md:grid grid-cols-6\">\r\n                    <div className=\"col-span-2 md:gird mx-2\">\r\n                        <div className=\"text-base  font-bold underline  decoration-2 mb-2\">\r\n                            Accounts Info\r\n                        </div>\r\n                        <div className=\"col-span-6 md:grid grid-cols-2 gap-2\">\r\n                            \r\n                            {/* <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.customerType, custOperator)}</p> */}\r\n                            <p className=\"mt-2 text-base\">{retailState?.custName}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custCompName}</p>\r\n                            {/* <p className=\"mt-2 text-base\">{enterpriseState?.customerType}</p> */}\r\n                           \r\n                            <p className=\"mt-2 text-base\">\r\n                                {/* {convert(retailState?.custIncorpDt)} */}\r\n                                <p>\r\n                                    {dayjs(\r\n                                       retailState?.custIncorpDtt,\r\n                                        dateFormat\r\n                                    )?.format(dateFormat)}\r\n                                </p>\r\n                            </p>\r\n                            <p className=\"mt-2 text-base\">Tax: {retailState?.custTaxId}</p>        \r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.customerType, parentAccountList)}</p>\r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.custTimeZone, timeZoneList)}</p>\r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.custCurrency, currencyList)}</p>\r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.custLang, language)}</p>\r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.custOrient, orientationtype)}</p>\r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.custCat, custCat)}</p>\r\n                            <p className=\"mt-2 text-base\">{GetDropdownLabel(retailState?.custCat, custmoerCategoryList)}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base  font-bold underline  decoration-2 mb-2\">\r\n                            Contact Info\r\n                        </div>\r\n                        <div className='md:grid grid-cols-1 gap-2'>\r\n                            <p className=\"mt-2 text-base\">CXO :{retailState?.custFirstName}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custEmailId}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custWebUrl}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custPhone}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custMiddleName}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custLastName}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base  font-bold underline  decoration-2 mb-2\">\r\n                            Address\r\n                        </div>\r\n                        <div className='md:grid grid-cols-1 gap-2'>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custAddL1}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custAddL2}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custCity}</p>\r\n\r\n                            <p className=\"mt-2 text-base\">{retailState?.custState}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custCountry}</p>\r\n                            <p className=\"mt-2 text-base\">{retailState?.custZipcode}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"text-base  font-bold underline  decoration-2 mb-2\">Files</div>\r\n                        {retailState?.uploadFiles.map(e => {\r\n                             if(e.file_name !== \"\"){                            \r\n                                return(\r\n                                    <>\r\n                                        <div className='md:grid grid-cols-1 gap-2' onClick={() => onClickFile(e)}>\r\n                                            <p className='mt-2 text-base underline text-sky-500 cursor-pointer'>{e.doc_name}</p>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        })}\r\n                        {retailState?.additionalFiles.map(e => {\r\n                           if(e.file_name !== \"\"){   \r\n                            return(\r\n                                <>\r\n                                    <div className='md:grid grid-cols-1 gap-2' onClick={() => onClickFile(e)}>\r\n                                        <p className='mt-2 text-base underline text-sky-500 cursor-pointer'>{e.doc_name}</p>\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                        }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            { mode == \"ADD\" &&    <Card className=\"mx-3 mb-4 mt-1\">\r\n                <div className=\"md:grid grid-cols-2\">\r\n                    <h6 className=\"mx-2 mb-4 mt-1 font-bold text-cyan-500\">\r\n                        USER INFO{' '}\r\n                    </h6>\r\n                    {mode == \"ADD\" &&    <div className=\" text-base  font-bold flex justify-end\">\r\n                        <Link onClick={() => { setStep(0) }} >\r\n                            <div className='flex'>\r\n                                <MdModeEdit className=\"mt-1\" />\r\n                                <p className='ml-2'>EDIT</p>\r\n                            </div>\r\n                        </Link>\r\n                    </div>}\r\n                </div>\r\n                <div className=\"md:grid grid-cols-12\">\r\n\r\n\r\n\r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base underline font-bold mb-2'>FirstName</p>\r\n                        <p className='text-base'>{retailState?.retailUserInitValues?.firstName}</p>\r\n                    </div>\r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base underline font-bold mb-2'>LastName</p>\r\n                        <p className='text-base'>{retailState?.retailUserInitValues?.lastName}</p>\r\n                    </div>\r\n\r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base underline font-bold mb-2'>Email ID:</p>\r\n                        <p className='text-base'>{retailState?.retailUserInitValues?.emailId}</p>\r\n                    </div>\r\n\r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base underline font-bold mb-2'>Order Approver EmailID:</p>\r\n                        <p className='text-base'>{retailState?.retailUserInitValues?.ordemailId}</p>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base underline font-bold mb-2'>Phone Number</p>\r\n                        <p className='text-base'>{retailState?.retailUserInitValues?.phoneNumber}</p>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </Card>}\r\n            <Dialog isOpen={showContent}\r\n                onClose={() => setShowContent(false)}>\r\n                <div className='p-5'>\r\n                    <img src={`${appConfig.apiPrefix}/media/uniqid/${content?.file_url}`} alt=\"Content\" />\r\n                    <Button onClick={() => window.open(`${appConfig.apiPrefix}/media/uniqid/${content?.file_url}`, '_blank')} className='mt-2' variant='solid'>Download</Button>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RetailPreview\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Steps, Button } from 'components/ui'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport RetailDetails from './RetailDetails'\r\nimport RetailMasterInfo from './RetailMasterInfo'\r\nimport RetailPreview from './RetailPreview'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { apiSubmitRetail, apiUpdateRetail } from 'services/RetailService'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { BiArrowBack } from 'react-icons/bi'\r\nimport campareandCopy from 'utils/campareandCopy'\r\nimport { RetailEditandCopy } from 'utils/campareandCopy'\r\nimport { getCurrency, getParentAccount, getCustomerCategory, getUploadFileType } from '../store/dataSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { GetErrorMsg, OpenNotification } from 'views/Servicefile'\r\nimport { concat } from 'lodash'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\n\r\nconst Controlled = () => {\r\n    const dispatch = useDispatch()\r\n    const { enterAccount, password, rememberMe, usernameOrEmail, acc_mno_id\r\n    } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n\r\n    const location = useLocation();\r\n    const rowForEdit = location.state?.data;\r\n    const mode = location.state?.mode ? location.state.mode : \"ADD\";\r\n    const navigate = useNavigate()\r\n\r\n\r\n\r\n    const [step, setStep] = useState(0)\r\n\r\n    const childRef = useRef()\r\n    const childRefUserInfo = useRef()\r\n\r\n    let intailValues = {\r\n        retailAccInitValues: {\r\n            retailId: '',\r\n            custName: '',\r\n            customerType: '',\r\n            custCompName: '',\r\n            custIncorpDt: '',\r\n            custTaxId: '',\r\n            custTimeZone: '',\r\n            custCurrency: '',\r\n            custLang: '',\r\n            custOrient: '',\r\n            custCat: '',\r\n            fields: []\r\n        },\r\n        retailContactInitValues: {\r\n            custFirstName: \"\",\r\n            custMiddleName: \"\",\r\n            custLastName: \"\",\r\n            custEmailId: \"\",\r\n            custAltCont: \"\",\r\n            custFax: \"\",\r\n            custWebUrl: \"\",\r\n            fields: [],\r\n        },\r\n        addressFields: {\r\n            custCountry: '',\r\n            custAddL1: '',\r\n            custAddL2: '',\r\n            custCity: '',\r\n            custState: '',\r\n            custZipcode: '',\r\n        },\r\n        retailUserInitValues: {\r\n            roleId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: \"\",\r\n            emailId: '',\r\n            phoneNumber: '',\r\n            ordemailId: ''\r\n        },\r\n        uploadFiles: [\r\n        ],\r\n        additionalFiles: [\r\n            {\r\n                file_name: \"\",\r\n                file_url: \"\",\r\n                file_type: \"\",\r\n                dgl_acc_mno_id: null\r\n            }\r\n        ]\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getUploadFileType(enterAccount))\r\n    }, [])\r\n    const operatorFileTypes = useSelector(state => state.retailsList?.data?.fileList)\r\n    useEffect(() => {\r\n        if (operatorFileTypes?.res?.length) {\r\n            let uploadArray = []\r\n            for (let i = 0; i < operatorFileTypes?.res.length; i++) {\r\n                if (operatorFileTypes?.res[i].acc_type === 'Retail Customer') {\r\n                    const docType = JSON.parse(operatorFileTypes?.res[i].doc_type);\r\n                    docType.map((item, index) => {\r\n                        uploadArray.push({\r\n                            \"doc_type\": docType[index],\r\n                            \"doc_name\": docType[index].doc_type_name,\r\n                            \"file_name\": \"\",\r\n                            \"file_url\": \"\",\r\n                            \"file_type\": \"upload\"\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n            intailValues.uploadFiles = uploadArray\r\n            setRetailIntialValues(intailValues)\r\n        } else {\r\n            setRetailIntialValues(intailValues)\r\n        }\r\n    }, [operatorFileTypes])\r\n    const [retailIntialValues, setRetailIntialValues] = useState(intailValues)\r\n    const [retailState, setRetailState] = useState({})\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n    const onChange = (nextStep) => {\r\n        if (nextStep < 0) {\r\n            setStep(0)\r\n        } else if (nextStep > 3) {\r\n            setStep(3)\r\n        } else {\r\n            setStep(nextStep)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const onNext = () => {\r\n        if (step === 0) {\r\n            childRef.current?.handleSubmitFromParent()\r\n        }\r\n\r\n        if (step === 1) {\r\n            childRefUserInfo.current?.handleSubmitFromParent()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onPrevious = () => {\r\n        if (mode == 'EDIT') {\r\n            onChange(step - 2)\r\n        } else {\r\n            onChange(step - 1)\r\n        }\r\n    }\r\n    const submitApi = async () => {\r\n        let uploadEdDocument = concat(retailState?.uploadFiles, retailState?.additionalFiles)\r\n\r\n        if (mode === \"ADD\") {\r\n            uploadEdDocument = uploadEdDocument.map((file) => {\r\n                if (file?.file_url != '') {\r\n                    return {\r\n                        \"doc_name\": file?.doc_name,\r\n                        \"file_name\": file?.file_name,\r\n                        \"file_url\": file?.file_url,\r\n                        \"file_type\": file?.file_type,\r\n                    }\r\n                }\r\n            })\r\n            uploadEdDocument = uploadEdDocument.filter(item => item !== undefined && item !== null);\r\n            let createbody = {\r\n                \"dgl_acc_mno_id\": retailState.customerType,\r\n                \"cust_name\": retailState.custName,\r\n                // \"cust_parent\": retailState.customerType,\r\n                \"cust_parent\": retailState.customerType,\r\n                \"cust_comp_name\": retailState.custCompName,\r\n                \"cust_incorp_dt\": retailState.custIncorpDt,\r\n                \"cust_tax_id\": retailState.custTaxId,\r\n                \"cust_time_zone\": retailState.custTimeZone,\r\n                \"cust_currency\": retailState.custCurrency,\r\n                \"cust_lang\": retailState.custLang,\r\n                \"cust_orient\": retailState.custOrient,\r\n                \"dgl_md_cust_cat_id\": retailState.custCat,\r\n                \"dgl_cust_custom_fields\": retailState.fields,\r\n\r\n                \"cust_first_name\": retailState.custFirstName,\r\n                \"cust_middle_name\": retailState.custMiddleName,\r\n                \"cust_last_name\": retailState.custLastName,\r\n                // \"cust_prim_cont\": retailState.custPrimCont,\r\n                \"cust_email_id\": retailState.custEmailId,\r\n                \"cust_phone_number\": retailState.custPhone,\r\n                \"cust_alt_cont\": retailState.custAltCont,\r\n                \"cust_fax\": retailState.custFax,\r\n                \"cust_web_url\": retailState.custWebUrl,\r\n                \"cust_order_approver_email_id\": retailState?.retailUserInitValues?.ordemailId,\r\n                \"cust_add_l1\": retailState.custAddL1,\r\n                \"cust_add_l2\": retailState.custAddL2,\r\n                \"cust_city\": retailState.custCity,\r\n                \"cust_state\": retailState.custState,\r\n                \"cust_country\": retailState.custCountry,\r\n                \"cust_zipcode\": retailState.custZipcode,\r\n                \"cust_is_business_unit\": true,\r\n                \"cust_pref_pg\": 1,\r\n                \"bill_cycle\": \"MONTHLY\",\r\n                // \"bill_date\": \"2023-05-12T12:52:19.120Z\",\r\n                \"bill_due_tenor\": \"2\",\r\n                \"credit_limit\": 5.3451,\r\n                \"cust_status\": \"ACTIVE\",\r\n                \"dgl_cust_files\": uploadEdDocument,\r\n                \"dgl_cust_roles\": [\r\n                    {\r\n                        \"role_name\": \"actor\" + Math.floor(10000 + Math.random() * 90000),\r\n                        \"role_desc\": \"Action\",\r\n                        \"permissions\": \"json string\",\r\n                        \"status\": 1\r\n                    }\r\n                ],\r\n                \"dgl_cust_users\": [\r\n                    {\r\n                        \"first_name\": retailState.retailUserInitValues.firstName,\r\n                        // \"middle_name\": \"meg\",\r\n                        \"last_name\": retailState.retailUserInitValues.lastName,\r\n                        \"middle_name\": retailState.retailUserInitValues.middleName,\r\n                        \"email\": retailState.retailUserInitValues.emailId,\r\n                        \"phone\": retailState.retailUserInitValues.phoneNumber,\r\n                        \"status\": 1,\r\n                        \"cust_type\": \"RetailCustomer\",\r\n                        \"add_line1\": \"hyderabad\",\r\n                        \"add_line2\": \"Banglore\",\r\n                        \"profile_img\": \"profile_img\",\r\n                        \"cust_password\": \"12345\"\r\n                    }\r\n                ]\r\n            }\r\n\r\n            const resp = await apiSubmitRetail(createbody)\r\n            if (resp.status === 'success') {\r\n                OpenNotification('success', 'Created successfully ')\r\n                navigate('/account-menu-item-view-6')\r\n\r\n\r\n\r\n            }\r\n            if (resp.status === 'failed') {\r\n                setMessage(GetErrorMsg(resp));\r\n            }\r\n\r\n        } else if (mode === \"EDIT\") {\r\n            uploadEdDocument = uploadEdDocument.map((file) => {\r\n                if (file?.file_url !== '') {\r\n                    return {\r\n                        \"id\": file.id,\r\n                        \"doc_name\": file?.doc_name,\r\n                        \"file_name\": file?.file_name,\r\n                        \"file_url\": file?.file_url,\r\n                        \"file_type\": file?.file_type,\r\n                    }\r\n                }\r\n            })\r\n            uploadEdDocument = uploadEdDocument.filter(item => item !== undefined && item !== null);\r\n            let updatebody = {\r\n                \"dgl_acc_mno_id\": retailState.customerType,\r\n                \"cust_name\": retailState.custName,\r\n                \"cust_parent\": retailState.customerType,\r\n                \"cust_comp_name\": retailState.custCompName,\r\n                \"cust_incorp_dt\": retailState.custIncorpDt,\r\n                \"cust_tax_id\": retailState.custTaxId,\r\n                \"cust_time_zone\": retailState.custTimeZone,\r\n                \"cust_currency\": retailState.custCurrency,\r\n                \"cust_lang\": retailState.custLang,\r\n                \"cust_orient\": retailState.custOrient,\r\n                \"dgl_md_cust_cat_id\": retailState.custCat,\r\n                \"dgl_cust_custom_fields\": retailState.fields,\r\n                \"cust_first_name\": retailState.custFirstName,\r\n                \"cust_middle_name\": retailState.custMiddleName,\r\n                \"cust_last_name\": retailState.custLastName,\r\n                // \"cust_prim_cont\": retailState.custPrimCont,\r\n                \"cust_email_id\": retailState.custEmailId,\r\n                \"cust_phone_number\": retailState.custPhone,\r\n                \"cust_alt_cont\": retailState.custAltCont,\r\n                \"cust_fax\": retailState.custFax,\r\n                \"cust_web_url\": retailState.custWebUrl,\r\n                \"cust_order_approver_email_id\": retailState?.retailUserInitValues?.ordemailId,\r\n                \"cust_add_l1\": retailState.custAddL1,\r\n                \"cust_add_l2\": retailState.custAddL2,\r\n                \"cust_city\": retailState.custCity,\r\n                \"cust_state\": retailState.custState,\r\n                \"cust_country\": retailState.custCountry,\r\n                \"cust_zipcode\": retailState.custZipcode,\r\n                \"cust_is_business_unit\": true,\r\n                \"cust_pref_pg\": 1,\r\n                \"bill_cycle\": \"MONTHLY\",\r\n                // \"bill_date\": \"2023-05-12T12:52:19.120Z\",\r\n                \"bill_due_tenor\": \"2\",\r\n                \"credit_limit\": 5.3451,\r\n                \"cust_status\": \"ACTIVE\",\r\n                \"dgl_cust_files\": uploadEdDocument,\r\n                \"dgl_cust_roles\": [\r\n                    {\r\n                        \"id\": rowForEdit?.dgl_cust_roles[0]?.id,\r\n                        \"role_name\": \"actor\" + Math.floor(10000 + Math.random() * 90000),\r\n                        \"role_desc\": \"Action\",\r\n                        \"permissions\": \"json string\",\r\n                        \"status\": 1,\r\n                        \"dgl_customer_id\": null,\r\n                        \"role_unq_id\": rowForEdit?.dgl_cust_roles[0]?.role_unq_id,\r\n\r\n                    }\r\n                ],\r\n                \"dgl_cust_users\": rowForEdit?.dgl_cust_users,\r\n                \"id\": rowForEdit?.id,\r\n            }\r\n            console.log(updatebody)\r\n            const resp = await apiUpdateRetail(updatebody)\r\n            if (resp.status === 'success') {\r\n                OpenNotification('success', 'Updated successfully')\r\n                navigate('/account-menu-item-view-6')\r\n\r\n\r\n\r\n            }\r\n            if (resp.status === 'failed') {\r\n                setMessage(GetErrorMsg(resp));\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (rowForEdit) {\r\n            const retailValues = RetailEditandCopy(retailIntialValues, rowForEdit)\r\n            retailValues?.uploadFiles.map(e => {\r\n                const matcheDobj = rowForEdit?.dgl_cust_files.find(f => f.doc_name === e.doc_name)\r\n                if (matcheDobj) {\r\n                    e.file_name = matcheDobj.file_name\r\n                    e.file_url = matcheDobj.file_url\r\n                    e.file_type = matcheDobj.file_type\r\n                    e.doc_name = matcheDobj.doc_name\r\n                    e.id = matcheDobj.id\r\n                }\r\n            })\r\n            setRetailState(retailValues);\r\n        }\r\n\r\n    }, [retailIntialValues,rowForEdit])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getCurrency({ enterAccount }))\r\n        dispatch(getParentAccount({ enterAccount }))\r\n        dispatch(getCustomerCategory({ enterAccount }))\r\n\r\n\r\n    }, [dispatch, enterAccount])\r\n    let breadCrumbList = [{\r\n        name: 'Accounts',\r\n        // link: \"/home\"\r\n    }, {\r\n        name: 'Reatil Customers',\r\n        link: \"/account-menu-item-view-6\"\r\n    }, {\r\n        name: `Create  Reatil Customers`,\r\n    }]\r\n\r\n    if (mode === \"EDIT\") {\r\n        breadCrumbList = [\r\n            {\r\n                name: 'Accounts',\r\n                // link: '/home',\r\n            },\r\n            {\r\n                name: 'Reatil Customers',\r\n                link: '/account-menu-item-view-6',\r\n            },\r\n            {\r\n                name: rowForEdit?.cust_name,\r\n                link: '/account-menu-item-view-6',\r\n                state: rowForEdit\r\n            },\r\n            {\r\n                name: \"Edit Reatil Customers\"\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        retailIntialValues && <div>\r\n            {/* <div className='mb-5'>Accounts/Reatil Customers/{mode === \"EDIT\" ? \"Edit\" : \"Create\"} Reatil Customers</div> */}\r\n            <CustomBreadcrumbs list={breadCrumbList} />\r\n\r\n\r\n            {mode == \"ADD\" ? <Steps current={step}>\r\n                <Steps.Item title=\"RETAIL CUSTMOER DETAILS\" />\r\n                <Steps.Item title=\"MASTER USER\" />\r\n                <Steps.Item title=\"PREVIEW\" />\r\n            </Steps> : <Steps current={step}>\r\n                <Steps.Item title=\"RETAIL CUSTMOER DETAILS\" />\r\n                <Steps.Item title=\"PREVIEW\" />\r\n            </Steps>}\r\n\r\n            <div className=\"mt-6  bg-gray-50 dark:bg-gray-700 rounded \">\r\n\r\n\r\n                {step === 0 &&\r\n                    <RetailDetails ref={childRef}\r\n                        retailState={retailState} setStep={setStep}\r\n                        step={step} setRetailState={setRetailState}\r\n                        retailIntialValues={retailIntialValues}\r\n                        setRetailIntialValues={setRetailIntialValues}\r\n                        mode={mode}\r\n                    />\r\n                }\r\n                {step === 1 &&\r\n                    <RetailMasterInfo ref={childRefUserInfo} retailState={retailState} setStep={setStep}\r\n                        step={step} setRetailState={setRetailState}\r\n                        retailIntialValues={retailIntialValues}\r\n                        setRetailIntialValues={setRetailIntialValues}\r\n                    />\r\n                }\r\n                {step === 2 &&\r\n                    <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n                        <RetailPreview retailState={retailState} step={step} setStep={setStep} message={message} mode={mode} />\r\n                    </AdaptableCard>\r\n                }\r\n\r\n            </div>\r\n            <div className=\"flex justify-between mt-4\">\r\n\r\n                <div>\r\n                    {step > 0 &&\r\n                        <Button\r\n                            className=\"mx-2   \"\r\n                            style={{\r\n                                backgroundColor: \"#4D4D4D\", \r\n                                fontStyle: 'normal',\r\n                                fontSize: '18px',\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={onPrevious}\r\n                            type=\"button\"\r\n\r\n                        >\r\n                            Previous\r\n                        </Button>\r\n                    }\r\n                </div>\r\n\r\n                <div className='flex'>\r\n                    {step >= 0 &&\r\n                        <Link\r\n                            className=\"block lg:inline-block md:mb-0 \"\r\n                            to=\"/account-menu-item-view-6\"\r\n                        >\r\n                            <Button\r\n                                className=\"mx-2\"\r\n                                onClick={onPrevious}\r\n                                variant=\"solid\"\r\n                                style={{\r\n                                    color: \"white\", \r\n                                    fontStyle: 'normal',\r\n                                    fontSize: '18px', backgroundColor: \"#4D4D4D\"\r\n                                }}\r\n\r\n\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                    {step < 2 && <Button onClick={onNext} disabled={step === 2} variant='solid' style={{\r\n                        \r\n                        fontStyle: 'normal',\r\n                        fontSize: '18px',\r\n                        color: \"white\"\r\n                    }}>\r\n                        {step === 2 ? 'Completed' : 'Next'}\r\n                    </Button>}\r\n\r\n                    {step === 2 &&\r\n                        <>\r\n                            <Button onClick={submitApi} variant='solid' style={{\r\n                                \r\n                                fontStyle: 'normal',\r\n                                fontSize: '18px',\r\n                                color: \"white\"\r\n                            }}>\r\n                                {'Submit for Approval'}\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Controlled\r\n","import React from 'react'\r\nimport StepControlled from './StepControlled'\r\nimport { AdaptableCard, RichTextEditor } from 'components/shared'\r\nimport { Input, FormItem } from 'components/ui'\r\nimport { Field } from 'formik'\r\nexport default function NewOperators() {\r\n\r\n  return (\r\n    <>\r\n      {/* <div>Accounts/Reatil Customers/Create Reatil Customers</div> */}\r\n      <div>\r\n        <StepControlled />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n    DatePicker,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport * as Yup from \"yup\";\r\n\r\nexport const statusOptions = [\r\n    { label: 'Married', value: 'M' },\r\n    { label: 'Widowed', value: 'W' },\r\n    { label: 'Separated', value: 'S' },\r\n    { label: 'Divorced', value: 'D' },\r\n    { label: 'Single ', value: 'S' },\r\n]\r\nconst genderOptions = [\r\n    { label: 'Super Admin', value: 'M' },\r\n    { label: 'User.', value: 'F' },\r\n    { label: 'Admin', value: 'O' },\r\n]\r\n\r\nconst retailUserInitValues = {\r\n    roleId: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    middleName:'',\r\n    emailId: '',\r\n    phoneNumber: '',\r\n    ordemailId: ''\r\n}\r\n\r\n\r\nconst retailValidationSchema = Yup.object().shape({\r\n\r\n    //roleId: Yup.string().required('Please Enter RoleId'),\r\n    firstName: Yup.string().required('Please enter fisrt name').nullable(),\r\n    lastName: Yup.string().required('Please enter last name').nullable(),\r\n    emailId: Yup.string().email('Please enter valid email id').required('Please enter email id').nullable(),\r\n    phoneNumber: Yup.string().min(5,\"Number must be atleast 5 characters\").max(20,\"Max 20 characters are allowed\")\r\n    .required(\"Please enter phone number\").nullable(),\r\n\r\n    ordemailId: Yup.string().email('Please enter valid email id').required('Please enter email id').nullable()\r\n\r\n\r\n})\r\nconst RetailMasterAccountInfo = ({ onChange, refId, ...props }) => {\r\n    // console.log(props.retailIntialValues,\"retailUserInitValues\")\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"mx-2 mb-4 mt-2\">MASTER USER</h3>\r\n             <Formik\r\n                innerRef={refId}\r\n                initialValues={props.retailIntialValues.retailUserInitValues}\r\n                validationSchema={retailValidationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setSubmitting(true)\r\n                    let updatedPayload = { ...props.retailState, retailUserInitValues: values }\r\n                    props.setRetailState(updatedPayload)\r\n                    let dataToStore = props.retailIntialValues\r\n                    dataToStore.retailUserInitValues = values\r\n                    props.setRetailIntialValues(dataToStore)\r\n                    props.setStep(props.step + 1)\r\n                }}\r\n            >\r\n                {({ values, touched, errors, isSubmitting }) => {\r\n                    return (\r\n                        <Form>\r\n                            <FormContainer>\r\n                               \r\n                                <div className=\"md:grid grid-cols-4 gap-4 mx-4\">\r\n                                    <FormItem\r\n                                        label={<p>First Name<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.firstName && touched.firstName\r\n                                        }\r\n                                        errorMessage={errors.firstName}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"firstName\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                    <FormItem\r\n                                        label=\"middleName\"\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"middleName\"\r\n                                            placeholder=\"Enter Middle  Name\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label={<p>Last Name<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.lastName && touched.lastName\r\n                                        }\r\n                                        errorMessage={errors.lastName}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"lastName\"\r\n                                            placeholder=\"Enter Last  Name\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n\r\n                                    <FormItem\r\n                                        label={<p>Email ID<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.emailId && touched.emailId\r\n                                        }\r\n                                        errorMessage={errors.emailId}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"emailId\"\r\n                                            placeholder=\"Enter Email ID\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label={<p>Order Approver Email ID<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.ordemailId && touched.ordemailId\r\n                                        }\r\n                                        errorMessage={errors.ordemailId}\r\n                                    >\r\n\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"ordemailId\"\r\n                                            placeholder=\"Enter Order Approver Email ID\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n\r\n\r\n                                    <FormItem\r\n                                        label={<p>Phone Number<span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                        invalid={\r\n                                            errors.phoneNumber && touched.phoneNumber\r\n                                        }\r\n                                        errorMessage={errors.phoneNumber}\r\n                                    >\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            autoComplete=\"off\"\r\n                                            name=\"phoneNumber\"\r\n                                            placeholder=\"Enter Phone Number\"\r\n                                            component={Input}\r\n                                        />\r\n                                    </FormItem>\r\n                                </div>\r\n\r\n                            </FormContainer>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RetailMasterAccountInfo\r\n","import React, { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport RetailUserInfo from './RetailUserInfo'\r\n\r\n\r\n\r\nimport { AdaptableCard } from 'components/shared'\r\n\r\n\r\nconst RetailMasterInfo = forwardRef((props, ref) => {\r\n  const [formData, setFormData] = useState({\r\n    RetailUserInfo: { values: null, validated: false },\r\n\r\n\r\n  })\r\n\r\n  const retailUserInforef = React.useRef()\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      formData.RetailUserInfo.validated\r\n      //&& formData.EnterpriseContactInfo.validated\r\n    ) {\r\n      alert('Ready to save')\r\n    }\r\n  }, [formData])\r\n\r\n  async function handleSubmit() {\r\n    await retailUserInforef.current.submitForm()\r\n\r\n\r\n  }\r\n\r\n  function handleChangeRetailUserInfo(data) {\r\n    setFormData({ ...formData, RetailUserInfo: data })\r\n  }\r\n\r\n\r\n\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      handleSubmitFromParent() {\r\n        handleSubmit()\r\n      },\r\n    }\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div style={{backgroundColor:\"#F5F5F5\"}} className=\" p-5\">\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\"  >\r\n          <div className='border-b pb-6 '>\r\n        <RetailUserInfo handleSubmit={handleSubmit}\r\n          onChange={handleChangeRetailUserInfo}\r\n          refId={retailUserInforef}\r\n          retailState={props.retailState}\r\n          setRetailState={props.setRetailState}\r\n          setStep={props.setStep}\r\n          step={props.step}\r\n          retailIntialValues={props.retailIntialValues}\r\n          setRetailIntialValues={props.setRetailIntialValues}\r\n        />\r\n        </div>\r\n      </AdaptableCard>\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n})\r\n\r\nexport default RetailMasterInfo\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders, apiGetCurrency, apiGetParentAccount, apiGetCustomerCatRetail, apiGetUploadFileTypes } from 'services/RetailService'\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'retailsList/data/getOrders',\r\n    async (data) => {\r\n\r\n        const response = await apiGetSalesOrders(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getCurrency = createAsyncThunk(\r\n    'salesProductList/data/getCurrency',\r\n    async (data) => {\r\n        const response = await apiGetCurrency(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getParentAccount = createAsyncThunk(\r\n    'salesProductList/data/getParentAccount',\r\n    async (data) => {\r\n        const response = await apiGetParentAccount(data)\r\n\r\n        return response.data\r\n    }\r\n)\r\nexport const getCustomerCategory = createAsyncThunk(\r\n    'salesProductList/data/getCustCategory',\r\n    async (data) => {\r\n        const response = await apiGetCustomerCatRetail(data)\r\n\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\nexport const getUploadFileType = createAsyncThunk(\r\n    'retailsList/data/getUploadFileType',\r\n    async (data) => {\r\n        const response = await apiGetUploadFileTypes(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'retailsList/data',\r\n    initialState: {\r\n        loading: false,\r\n        orderList: [],\r\n        tableData: initialTableData,\r\n        currencyList: [],\r\n        custmoerCatList: [],\r\n        parentAccountList: []\r\n    },\r\n    reducers: {\r\n        setOrderList: (state, action) => {\r\n            state.orderList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setCurrencyData: (state, action) => {\r\n            state.currencyList = action.payload\r\n        },\r\n        setParentAccountData: (state, action) => {\r\n            state.parentAccountList = action.payload\r\n        },\r\n        setCustmoerCattData: (state, action) => {\r\n            state.custmoerCatList = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.orderList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCurrency.fulfilled]: (state, action) => {\r\n\r\n\r\n            state.currencyList = action.payload.response?.map((currency) => ({\r\n                value: currency.id,\r\n                label: currency.cur_title,\r\n            }));\r\n\r\n            state.loading = false\r\n        },\r\n        [getCurrency.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getParentAccount.fulfilled]: (state, action) => {\r\n            state.parentAccountList = action.payload?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.acc_name,\r\n            }))\r\n\r\n            state.loading = false\r\n        },\r\n        [getParentAccount.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCustomerCategory.fulfilled]: (state, action) => {\r\n\r\n\r\n\r\n            state.custmoerCatList = action.payload.response?.map((customer) => ({\r\n                value: customer.id,\r\n                label: customer.cust_cat_title,\r\n            }));\r\n\r\n            state.loading = false\r\n        },\r\n        [getCustomerCategory.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getUploadFileType.fulfilled]: (state, action) => {\r\n            state.fileList = action.payload\r\n          \r\n            state.loading = false\r\n        },\r\n        [getUploadFileType.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData, setCurrencyData, setParentAccountData, setCustmoerCattData } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["apiSubmitRetail","data","ApiService","url","method","resp","status","message","response","toString","apiUpdateRetail","apiGetSalesOrders","params","apiUpdateRetailAccStatus","id","apiGetCurrency","enterAccount","apiGetParentAccount","apiGetCustomerCatRetail","apiGetUploadFileTypes","orientationtype","label","value","language","retailValidationSchema","Yup","shape","custName","required","nullable","customerType","custCompName","custIncorpDt","custTaxId","custTimeZone","custCurrency","custLang","custOrient","formik","onChange","refId","props","currencyList","useSelector","state","retailsList","parentAccountList","custmoerCategoryList","productCatList","custmoerCatList","dateFormat","locale","timeZoneList","timeZone","timezone","useState","dialogIsOpen","setIsOpen","newLabel","setNewLabel","onDialogClose","e","className","innerRef","initialValues","retailIntialValues","retailAccInitValues","validationSchema","onSubmit","values","setSubmitting","updatedPayload","retailState","setRetailState","dataToStore","setRetailIntialValues","touched","errors","isSubmitting","style","color","invalid","errorMessage","type","autoComplete","name","placeholder","component","Input","field","form","options","filter","gender","setFieldValue","maxDate","Date","inputFormat","custCat","push","remove","fields","map","item","index","display","alignItems","flexWrap","marginRight","field_title","title","onClick","marginLeft","isOpen","onClose","onRequestClose","shouldCloseOnOverlayClick","shouldCloseOnEsc","target","variant","field_value","onDialogOk","icon","fill","disabled","length","retailContactValidationSchema","custFirstName","custLastName","custEmailId","email","custPhone","min","max","retailContactInitValues","custMiddleName","custAltCont","custFax","custWebUrl","validate","validateURL","custCountry","custAddL1","custCity","custState","addressFields","auth","user","acc_user_id","beforeUpload","newFiles","files","apiUploadFiles","ress","showContent","setShowContent","content","setContent","onClickView","fileInfo","backgroundColor","uploadFiles","fil","i","doc_type","error","console","doc_name","is_mandatory","draggable","updatedFiles","uploadRes","filesDetails","fileUnqId","fileName","minHeight","file_url","file_name","substring","CloseButton","refIdAdd","every","additionalFiles","mode","setStep","step","OpenNotification","file","file_type","src","appConfig","alt","window","open","RetailDetails","forwardRef","ref","RetailAccountInfo","validated","RetailContactInfo","RetailAddressInfo","RetailUploladFileInfo","RetailAdditionalFileInfo","formData","setFormData","retailAccountInforef","React","retailContactInforef","retailAddressInforef","retailUploladFileInforef","retailAdditionalFileInforef","handleSubmit","validationErrors","current","validateForm","then","Object","keys","setTouched","submitForm","useImperativeHandle","handleSubmitFromParent","bodyClass","divider","onChangeAdd","log","onClickFile","showIcon","Array","isArray","join","dayjs","custIncorpDtt","format","GetDropdownLabel","custAddL2","custZipcode","retailUserInitValues","firstName","lastName","emailId","ordemailId","phoneNumber","dispatch","useDispatch","location","password","rememberMe","usernameOrEmail","acc_mno_id","useLocation","rowForEdit","navigate","useNavigate","childRef","useRef","childRefUserInfo","intailValues","retailId","roleId","middleName","dgl_acc_mno_id","useEffect","getUploadFileType","operatorFileTypes","fileList","res","uploadArray","acc_type","docType","JSON","parse","doc_type_name","useTimeOutMessage","setMessage","nextStep","onPrevious","submitApi","uploadEdDocument","concat","undefined","createbody","Math","floor","random","GetErrorMsg","updatebody","dgl_cust_roles","role_unq_id","dgl_cust_users","retailValues","RetailEditandCopy","matcheDobj","dgl_cust_files","find","f","getCurrency","getParentAccount","getCustomerCategory","breadCrumbList","link","cust_name","list","RetailMasterInfo","fontStyle","fontSize","to","NewOperators","StepControlled","RetailUserInfo","retailUserInforef","alert","getOrders","createAsyncThunk","dataSlice","createSlice","initialState","loading","orderList","tableData","total","pageIndex","pageSize","query","sort","order","key","reducers","setOrderList","action","payload","setTableData","setCurrencyData","setParentAccountData","setCustmoerCattData","extraReducers","fulfilled","pending","currency","cur_title","parent","acc_name","customer","cust_cat_title","actions"],"sourceRoot":""}