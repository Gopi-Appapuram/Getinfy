{"version":3,"file":"static/js/7304.ac80a2a0.chunk.js","mappings":"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","sources":["services/RetailService.js","utils/hooks/useTimeOutMessage.js","services/ManageWebsiteServicefile.js","views/settings/manageWebSite/store/dataSlice.js","views/settings/manageWebSite/store/stateSlice.js","views/settings/manageWebSite/store/index.js","views/settings/manageWebSite/components/ManageWebsite.js","views/settings/manageWebSite/index.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport async function apiUpdateRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: '/account/acc-operators',\r\n        method: 'put',\r\n        data,\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// export async function apiGetSalesOrders(params) {\r\n//     return ApiService.fetchData({\r\n//         url: '/retails/sales/orders',\r\n//         method: 'get',\r\n//         params,\r\n//     })\r\n// }\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n\r\n    return ApiService.fetchData({\r\n        //url: `/account/retail-customers?page_no=${params.pageIndex}&page_size=${params.pageSize}&sort_field=${params.sort.key}`,\r\n\r\n        url: `/account/retail-customers`,\r\n\r\n        method: 'get',\r\n        params\r\n\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateRetailAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/retail-customers?id=${id}&cust_status=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetCustomerCatRetail(data) {\r\n\r\n    return ApiService.fetchData({\r\n\r\n        url: `/account/cust-cats/unq-id-acc-type/drop-down/${data.enterAccount}/RetailCustomer`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n\r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage\r\n","import ApiService from \"./ApiService\";\r\n\r\nexport async function apiGetProductCatProvider(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport async function apiManagewebSite(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/web-set/${data.id}`,\r\n            method: 'put',\r\n            data\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetManageWebSiteData(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/web-set/unq-id/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetManageWebSiteData, apiGetProductCatProvider } from 'services/ManageWebsiteServicefile'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders } from 'services/RetailService'\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'manageWebsite/data/getOrders',\r\n    async (data) => {\r\n        \r\n        const response = await apiGetSalesOrders()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\n\r\n\r\nexport const getProductCategory = createAsyncThunk(\r\n    'manageWebsite/data/getProductCategory',\r\n    async (data) => {\r\n        const response = await apiGetProductCatProvider(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getManageWebSite = createAsyncThunk(\r\n    'manageWebsite/data/getManageWebSite',\r\n    async (data) => {\r\n        const response = await apiGetManageWebSiteData(data)\r\n        return response.data.response\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'manageWebsite/data',\r\n    initialState: {\r\n        loading: false,\r\n        accountList: [],\r\n        tableData: initialTableData,\r\n        productCatList:[],\r\n        getManageWebSiteData : []\r\n    },\r\n    reducers: {\r\n        setOrderList: (state, action) => {\r\n            state.accountList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setProductCattData: (state, action) => {\r\n            state.productCatList = action.payload\r\n        },\r\n        setManageWebsiteData: (state,action) => {\r\n            state.getManageWebSiteData = action.payload\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.accountList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getProductCategory.fulfilled]: (state, action) => {            \r\n            state.productCatList=action.payload.response?.map((product) => ({\r\n                value: product.id,\r\n                label: product.prod_cat_title,\r\n            }));\r\n            state.loading = false\r\n        },\r\n        [getProductCategory.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getManageWebSite.fulfilled]: (state, action) => {   \r\n            state.getManageWebSiteData=action.payload\r\n            state.loading = false\r\n        },\r\n        [getManageWebSite.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData ,setManageWebsiteData} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'myaccountList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","\r\nimport React, { useEffect } from 'react'\r\nimport RichTextEditor from 'components/shared/RichTextEditor'\r\nimport {\r\n    Input,\r\n    Button,\r\n    FormItem,\r\n    FormContainer,\r\n    Select,\r\n    DatePicker,\r\n    Dialog,\r\n    Alert,\r\n} from 'components/ui'\r\n\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Upload } from 'components/ui'\r\nimport { HiMinus, HiOutlineCloudUpload, HiPlus } from 'react-icons/hi'\r\nimport { useState } from 'react'\r\n// import { date } from 'yup'\r\nimport * as Yup from 'yup'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getManageWebSite, getProductCategory } from '../store/dataSlice'\r\nimport { injectReducer } from 'store'\r\nimport reducer from '../store'\r\nimport { apiManagewebSite, apiUploadFiles } from 'services/ManageWebsiteServicefile'\r\nimport { GetErrorMsg, OpenNotification } from 'views/Servicefile'\r\nimport CloseButton from 'components/ui/CloseButton'\r\nimport appConfig from 'configs/app.config'\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport { cloneDeep, values } from 'lodash'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { defaultBaseSortFn } from 'match-sorter'\r\nimport dayjs from 'dayjs'\r\nimport { AdaptableCard } from 'components/shared'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // slider_img_id:Yup.string().trim().required(\"Please upload slider image\").nullable(),\r\n    resolution:Yup.string().trim().required(\"Please enter resolution\").nullable(),\r\n    // description:Yup.string().trim().required(\"Please enter description\").nullable(),\r\n    // category:Yup.string().trim().required(\"Please select category\").nullable(),\r\n    // best_seller:Yup.string().trim().required(\"Please select best seller\").nullable(),\r\n    // recommended_solution:Yup.string().trim().required(\"Please select recommend solution\").nullable(),\r\n    // recently_added_solutions:Yup.string().trim().required(\"Please select recently added solution\").nullable(),\r\n    // commercial_iot_products: Yup.string().trim().required(\"Please select commercial solutions\").nullable(),\r\n    sponsored_solutions:Yup.string().trim().required(\"Start date required\").nullable(),\r\n    // select_sponsored_solutions:Yup.string().trim().required(\"Please select sponsored solutions\").nullable(),\r\n    // top_offers:Yup.string().trim().required(\"Please select top offers\").nullable(),\r\n})\r\n\r\nconst initValues = {\r\n    slider_img_id:\"\",\r\n    resolution:\"\",\r\n    description:\"\",\r\n    category:[],\r\n    best_seller:[],\r\n    recommended_solution:[],\r\n    recently_added_solutions:[],\r\n    commercial_iot_products: [],\r\n    sponsored_solutions:\"\",\r\n    select_sponsored_solutions:[],\r\n    top_offers:[],\r\n    unq_id:\"\",\r\n    id : \"\"\r\n}\r\n\r\nconst formFieldsType = [\r\n    { label: 'Text Field', value: 'TF' },\r\n    { label: 'Text Area', value: 'TA' },\r\n    { label: 'Drop Down', value: 'DD' },\r\n    { label: 'Radio Button', value: 'RB' },\r\n    { label: 'Check Boxes', value: 'CB' },\r\n    { label: 'CK Editor', value: 'CK' },\r\n]\r\nconst onCheck = (value, field, form) => {\r\n    form.setFieldValue(field.name, value)\r\n}\r\n\r\nconst optionList = [\r\n    { value: \"Tag1\", label: \"Tag1\" },\r\n    { value: \"Tag2\", label: \"Tag2\" },\r\n    { value: \"tag3\", label: \"tag3\" },\r\n    { value: \"Tag4\", label: \"Tag4\" },\r\n    { value: \"Tag5\", label: \"Tag5\" }\r\n];\r\ninjectReducer('manageWebsite',reducer)\r\nconst saveFilesInManageWebSite = 1\r\nfunction ManageWebsite() {\r\n    const [multiDropDown, setMultiDropDown] = useState()\r\n    const [initialValues, setInitialValues] = useState(initValues)\r\n\r\n    function handleSelect(data) {\r\n        setMultiDropDown(data);\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n\r\n    const { enterAccount,acc_user_id,acc_unq_id} = useSelector((state) => state.auth.user)\r\n    const productCategoryList = useSelector((state) => state.manageWebsite?.data?.productCatList)\r\n    const getManageWebSiteData = useSelector((state) => state.manageWebsite?.data?.getManageWebSiteData)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getProductCategory({ enterAccount }))\r\n    },[dispatch])\r\n\r\n    const beforeUpload = async (newFiles, files) => {\r\n        const file = newFiles[0];\r\n        const allowedTypes = ['image/jpeg', 'image/png'];\r\n\r\n        if (!allowedTypes.includes(file.type)) {\r\n            OpenNotification('warning', 'JPG/PNG files are allowed only!')\r\n            return false;\r\n        }\r\n        try {\r\n            const ress = await apiUploadFiles(newFiles[0], acc_user_id, saveFilesInManageWebSite)\r\n            return ress\r\n        } catch (error) {\r\n            console.error('Error during file upload:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [content, setContent] = useState(null)\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n    const onClickView = (fileInfo) => {\r\n        setShowContent(true)\r\n        setContent(fileInfo)\r\n    }\r\n\r\n    const onSaveValues = async(values) => {\r\n        let payload = cloneDeep(values)\r\n        payload.category = values.category?.map(e => e.value).join(\",\")\r\n        payload.best_seller = values.best_seller?.map(e =>  e.value).join(\",\")\r\n        payload.recommended_solution = values.recommended_solution?.map(e => e.value).join(\",\")\r\n        payload.recently_added_solutions = values.recently_added_solutions?.map(e => e.value).join(\",\")\r\n        payload.commercial_iot_products = values.commercial_iot_products?.map(e => e.value).join(\",\")\r\n        payload.select_sponsored_solutions = values.select_sponsored_solutions?.map(e => e.value).join(\",\")\r\n        payload.top_offers = values.top_offers?.map(e => e.value).join(\",\")\r\n        payload.id = getManageWebSiteData[0].id\r\n        payload.unq_id = enterAccount\r\n        let isValid  = true\r\n        if(payload.slider_img_id === \"\"){\r\n            isValid = false\r\n        }\r\n        if(isValid){\r\n            const resp = await apiManagewebSite(payload)\r\n            if (resp.status=== 'success') {\r\n            OpenNotification(\"success\", 'Updated  successfully')\r\n                setInitialValues(values)\r\n            }else if (resp.status === 'failed') {\r\n            setMessage(GetErrorMsg(resp));\r\n              setInitialValues(values)\r\n            }\r\n        }else{\r\n            OpenNotification(\"warning\",\"Please upload image\")\r\n            setInitialValues(values)\r\n        }\r\n    }\r\n\r\n    const fetchingByfilter = (a,b) => {\r\n        let filterArr = a.filter(e => {\r\n            return b.find(f => {\r\n                return e.value === f\r\n            })\r\n        })\r\n        return filterArr\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(getManageWebSite({enterAccount:enterAccount}))\r\n    },[dispatch,enterAccount])\r\n\r\n    useEffect(()=>{\r\n        if(getManageWebSiteData){\r\n            let obj = {...getManageWebSiteData[0]}\r\n            let bsNumArr = getManageWebSiteData[0]?.best_seller?.split(\",\").map(Number)\r\n            obj.best_seller = fetchingByfilter(productCategoryList,bsNumArr)\r\n\r\n            let categoryNumArr = getManageWebSiteData[0]?.category?.split(\",\").map(Number)\r\n            obj.category = fetchingByfilter(productCategoryList,categoryNumArr)\r\n\r\n            let crsNumArr = getManageWebSiteData[0]?.recommended_solution?.split(\",\").map(Number)\r\n            obj.recommended_solution = fetchingByfilter(productCategoryList,crsNumArr)\r\n\r\n            let rasNumArr = getManageWebSiteData[0]?.recently_added_solutions?.split(\",\").map(Number)\r\n            obj.recently_added_solutions = fetchingByfilter(productCategoryList,rasNumArr)\r\n\r\n            let ccsNumArr = getManageWebSiteData[0]?.commercial_iot_products?.split(\",\").map(Number)\r\n            obj.commercial_iot_products = fetchingByfilter(productCategoryList,ccsNumArr)\r\n\r\n            let sssNumArr = getManageWebSiteData[0]?.select_sponsored_solutions?.split(\",\").map(Number)\r\n            obj.select_sponsored_solutions = fetchingByfilter(productCategoryList,sssNumArr)\r\n\r\n            let offerNumArr = getManageWebSiteData[0]?.top_offers?.split(\",\").map(Number)\r\n            obj.top_offers = fetchingByfilter(productCategoryList,offerNumArr)\r\n\r\n            obj.sponsored_solutions = dayjs(getManageWebSiteData[0]?.sponsored_solutions, 'YYYY-MM-DD')?.toDate()\r\n\r\n            setInitialValues(obj)\r\n        }\r\n    },[getManageWebSiteData])\r\n\r\n    return (\r\n        <>\r\n        {message && \r\n                <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                {message}\r\n                </Alert>}\r\n            <div className='mt-5'>\r\n                <h3>Manage Website</h3> {/* form table start here  */}\r\n                <div>\r\n               {initialValues?.best_seller?.length  &&\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setSubmitting(true)\r\n                        onSaveValues(values)\r\n                    }}\r\n                >\r\n                    {({ values, touched, errors, isSubmitting, handleSubmit }) => {\r\n                    return (\r\n                        <>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                    <div style={{ backgroundColor: \"#F5F5F5\", padding: \"15px \", marginTop: \"10px\" }}>\r\n                                <FormContainer>\r\n                                <AdaptableCard className=\"h-full p-4\" bodyClass=\"h-full\">\r\n                                        {/* <div style={{ backgroundColor: \"white\", padding: \"15px 15px\" }} className=\" gap-4 mx-4\"> */}\r\n                                        <h5>CHOOSE SLIDER IMAGE</h5>\r\n                                        <div style={{ widows: \"auto\", display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                                            <div className='h-20 w-24 border-2 '></div>\r\n                                            <div className='h-20 w-24 border-2 '></div>\r\n                                            <div className='h-20 w-24 border-2 '></div>\r\n                                            <div className='h-20 w-24 border-2 '></div>\r\n                                            <div className='h-20 w-24 border-2 '></div>\r\n                                        </div>\r\n                                        <div className='mt-4'>\r\n                                            <Button className=\" bg-gray-100\" type='button'>Set As Slider</Button>\r\n                                        </div>\r\n                                        <h6 className='mt-6'>OR</h6>\r\n                                        <div className='mt-4'>\r\n                                            <FormItem label={<p>UPLOAD IMAGE <span style={{ color: \"red\" }}>{'*'}</span></p>}>\r\n                                                <Field name='slider_img_id'>\r\n                                                    {({field,form}) => (\r\n                                                    <div className='w-96 h-40  '>\r\n                                                    <Upload className=\"h-28 \" draggable\r\n                                                        beforeUpload={beforeUpload}\r\n                                                        onChange={(updatedFiles, files, uploadRes, filesDetails) => {\r\n                                                            form.setFieldValue(field.name, uploadRes?.data?.fileUnqId);\r\n                                                        }}>\r\n                                                    <div className=\" text-center p-4\">\r\n                                                        <div className=\"text-6xl mt-4 flex justify-center \">\r\n                                                            <HiOutlineCloudUpload />\r\n                                                        </div>\r\n                                                        <p className=\"font-semibold\">\r\n                                                            <span className=\"text-gray-800 dark:text-inherit\">\r\n                                                                Drop your image here, or{' '}\r\n                                                            </span>\r\n                                                            <span className=\"text-blue-500\">browse</span>\r\n                                                        </p>\r\n                                                        <p className=\"pb-6\">\r\n                                                            Support: jpeg, png, gif\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    </Upload>\r\n                                                    {values.slider_img_id &&\r\n                                                    <div className=\"upload-file cursor-pointer h-12 w-120\" >\r\n                                                        <div className=\"upload-file-info\" onClick={() => onClickView(values.slider_img_id)}>\r\n                                                            <h6 className=\"upload-file-name\">{values.slider_img_id.substring(0, 15)}</h6>\r\n                                                        </div>\r\n                                                        <CloseButton className=\"upload-file-remove \" onClick={() => { form.setFieldValue(field.name, ''); }} />\r\n                                                    </div>}\r\n                                                    </div>\r\n                                                    )}\r\n                                                </Field>\r\n                                            </FormItem>\r\n                                            {/* <div className=\"mb-4 \"><h6>UPLOAD IMAGE</h6></div>\r\n                                            <div className='w-96 h-28  '>\r\n                                                \r\n                                            </div>*/}\r\n                                        </div> \r\n                                        <div className='mt-6 card md:grid grid-cols-2 gap-4  mt-6 '>\r\n                                            <FormItem label={<p>Resolution <span style={{ color: \"red\" }}>{'*'}</span></p>}>\r\n                                                <Field type=\"text\" autoComplete=\"off\" placeholder=\"Enter resolution\" component={Input}\r\n                                                    name=\"resolution\"/>\r\n                                                <ErrorMessage name={'resolution'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                        </div>\r\n                                        <div style={{ width: \"70%\" }}>\r\n                                            <FormItem label={<p>Description</p>}>\r\n                                                <Field name=\"description\"  >\r\n                                                    {({ field, form }) => (\r\n                                                        <RichTextEditor\r\n                                                            value={field.value} \r\n                                                            onChange={(val) =>form.setFieldValue(field.name, val)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'description'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                        </div>\r\n                                        <div className='mt-6 card md:grid grid-cols-2 grid-rows-4 mt-6 '>\r\n                                            <FormItem label={<p>Choose Category<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"category\" validate={async (v) => {\r\n                                                    if (values.category.length < 1) {\r\n                                                        try{await Yup.string().required('Please select category').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message}\r\n                                                    }}}\r\n                                                    >\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Category\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'category'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                            <FormItem label={<p>Choose Best Seller<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"best_seller\" validate={async (v) => {\r\n                                                    if (values.best_seller.length < 1) {\r\n                                                        try{await Yup.string().required('Please select best seller').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message;}\r\n                                                    }}}>\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Best Seller\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'best_seller'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                            <FormItem label={<p>Choose Recommended Solutions<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"recommended_solution\" validate={async (v) => {\r\n                                                    if (values.recommended_solution.length < 1) {\r\n                                                        try{await Yup.string().required('Please select recommended solution').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message;}\r\n                                                    }}}>\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Recommended Solutions\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'recommended_solution'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                            <FormItem label={<p>Recently Added Solutions<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"recently_added_solutions\" validate={async (v) => {\r\n                                                    if (values.recently_added_solutions.length < 1) {\r\n                                                        try{await Yup.string().required('Please select added solution').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message;}\r\n                                                    }}}>\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Recently Added Solutions\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'recently_added_solutions'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                            <FormItem label={<p>Choose Commercial Solutions<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"commercial_iot_products\" validate={async (v) => {\r\n                                                    if (values.commercial_iot_products.length < 1) {\r\n                                                        try{await Yup.string().required('Please select Commercial solution').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message;}\r\n                                                    }}}>\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Commercial Solutions\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'commercial_iot_products'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                            \r\n                                            <div className='md:grid grid-cols-3'>\r\n                                                <FormItem label={<p>Sponsored Solution<span style={{ color: \"red\" }}>{'*'}</span></p>}>\r\n                                                    <Field name=\"sponsored_solutions\" >\r\n                                                        {({ field, form }) => (\r\n                                                            <DatePicker  className=\"w-40\"\r\n                                                                value={values.sponsored_solutions} placeholder=\"Start Date\" field={field}form={form}\r\n                                                                onChange={(date) => {form.setFieldValue(field.name,date)}}\r\n                                                            />\r\n                                                        )}\r\n                                                    </Field>\r\n                                                    <ErrorMessage name={'sponsored_solutions'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                                </FormItem>\r\n                                                <FormItem style={{marginTop:\"30px\"}}>\r\n                                                    <Field name=\"\">\r\n                                                        {({ field, form }) => (\r\n                                                            <DatePicker className=\"w-40 ml-4\" \r\n                                                                value={''} placeholder=\"End Date\" field={field}form={form}\r\n                                                                // onChange={(date) => {form.setFieldValue(field.name,date)}}\r\n                                                            />\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FormItem>\r\n                                            </div>\r\n                                            <FormItem label={<p>Select Sponsered Solution<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"select_sponsored_solutions\" validate={async (v) => {\r\n                                                    if (values.select_sponsored_solutions.length < 1) {\r\n                                                        try{await Yup.string().required('Please select sponsered solution').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message;}\r\n                                                    }}}>\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Sponsored Solution\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'select_sponsored_solutions'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                            <FormItem label={<p>Top Offers<span style={{ color: 'red' }}>{'*'}</span></p>}>\r\n                                                <Field name=\"top_offers\" validate={async (v) => {\r\n                                                    if (values.top_offers.length < 1) {\r\n                                                        try{await Yup.string().required('Please select offers').validate(v[0]?.label)}\r\n                                                        catch (error) {return error.message;}\r\n                                                    }}}>\r\n                                                    {({ field, form }) => (\r\n                                                        <Select className=\"w-2/3\" placeholder=\"Select Offers\" field={field} form={form}\r\n                                                            options={productCategoryList} componentAs={CreatableSelect} isMulti\r\n                                                            onChange={(operator) => form.setFieldValue(field.name,operator)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                                <ErrorMessage name={'top_offers'}>{e => <div style={{color:\"red\"}}>{e}</div>}</ErrorMessage>\r\n                                            </FormItem>\r\n                                        </div>\r\n                                    {/* </div> */}\r\n                                    </AdaptableCard>\r\n                                </FormContainer>\r\n                                    </div>\r\n                            <div className=\"mt-4 text-right\">\r\n                            <>\r\n                                <Link className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                    //  to=\"/settings-menu-manage-web-site\"\r\n                                    to='/home'\r\n                                >\r\n                                    <Button className=\"mx-2\" type='button' style={{backgroundColor: \"#4D4D4D\",  fontStyle: 'normal',fontSize: '18px'}} variant=\"solid\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Link>\r\n                                <Button variant=\"solid\" type=\"submit\" style={{color: \"white\",  fontStyle: 'normal',fontSize: '18px'}}>\r\n                                    Save\r\n                                </Button>\r\n                                {/* <Button\r\n                                    className=\"mx-2\"\r\n                                    style={{ background: \"linear-gradient(90deg, #725CF8 0%, #1ED4D4 100%)\", color:\"white\" }}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Save\r\n                                </Button> */}\r\n                            </>\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </>\r\n                )}}\r\n            </Formik>}\r\n            <Dialog isOpen={showContent}\r\n                onClose={() => setShowContent(false)}>\r\n                <div className='p-5'>\r\n                    <img src={`${appConfig.apiPrefix}/media/uniqid/${content?.file_url}`} alt=\"Content\" />\r\n                    <Button onClick={() => window.open(`${appConfig.apiPrefix}/media/uniqid/${content?.file_url}`, '_blank')} className='mt-2' variant='solid'>Download</Button>\r\n                </div>\r\n            </Dialog>\r\n            </div>\r\n        </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageWebsite","import React from 'react'\r\nimport ManageWebsite from './components/ManageWebsite'\r\n\r\nfunction ManageWebSites() {\r\n  return (\r\n    <>\r\n    <div>Settings / Manage WebSite</div>\r\n    <div><ManageWebsite/></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageWebSites"],"names":["apiSubmitRetail","data","ApiService","url","method","resp","status","message","response","toString","apiUpdateRetail","apiGetSalesOrders","params","apiUpdateRetailAccStatus","id","apiGetCurrency","enterAccount","apiGetParentAccount","apiGetCustomerCatRetail","apiGetUploadFileTypes","interval","useState","setMessage","useEffect","timeout","setTimeout","clearTimeout","apiGetProductCatProvider","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","apiManagewebSite","apiGetManageWebSiteData","getOrders","createAsyncThunk","getProductCategory","getManageWebSite","dataSlice","createSlice","name","initialState","loading","accountList","tableData","total","pageIndex","pageSize","query","sort","order","key","productCatList","getManageWebSiteData","reducers","setOrderList","state","action","payload","setTableData","setProductCattData","setManageWebsiteData","extraReducers","fulfilled","pending","map","product","value","label","prod_cat_title","actions","stateSlice","selectedRows","selectedRow","deleteMode","setSelectedRows","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","setDeleteMode","toggleDeleteConfirmation","combineReducers","validationSchema","Yup","shape","resolution","trim","required","nullable","sponsored_solutions","initValues","slider_img_id","description","category","best_seller","recommended_solution","recently_added_solutions","commercial_iot_products","select_sponsored_solutions","top_offers","unq_id","injectReducer","reducer","initialValues","setInitialValues","useNavigate","dispatch","useDispatch","useSelector","auth","user","acc_user_id","productCategoryList","acc_unq_id","manageWebsite","beforeUpload","newFiles","files","type","OpenNotification","ress","console","error","showContent","setShowContent","content","setContent","useTimeOutMessage","onSaveValues","values","cloneDeep","e","join","isValid","GetErrorMsg","fetchingByfilter","a","b","find","f","obj","bsNumArr","split","Number","categoryNumArr","crsNumArr","rasNumArr","ccsNumArr","sssNumArr","offerNumArr","dayjs","toDate","className","showIcon","length","onSubmit","setSubmitting","handleSubmit","touched","errors","isSubmitting","style","backgroundColor","padding","marginTop","bodyClass","widows","display","gap","color","field","form","draggable","onChange","updatedFiles","uploadRes","filesDetails","setFieldValue","fileUnqId","onClick","fileInfo","substring","CloseButton","autoComplete","placeholder","component","Input","width","RichTextEditor","val","validate","v","options","componentAs","CreatableSelect","isMulti","operator","date","to","fontStyle","fontSize","variant","isOpen","onClose","src","appConfig","file_url","alt","window","open"],"sourceRoot":""}