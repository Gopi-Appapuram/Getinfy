{"version":3,"file":"static/js/6807.cbb38190.chunk.js","mappings":"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","sources":["services/ItemsService.js","views/masterData/events/store/stateSlice.js","views/masterData/events/store/dataSlice.js","views/masterData/events/store/index.js","views/masterData/events/components/EventsTableSearch.js","views/masterData/events/components/EventsFilter.js","views/masterData/events/components/EventsTableTools.js","views/masterData/events/components/EventsTable.js","views/masterData/events/index.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-cat-items-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariants(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/items/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariantsByItemId(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/item/variant/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n\r\nexport async function apiDeleteSalesItems(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/catalogs/dgl-cat-items-info',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetTemplates(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-tp-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiProductCategoryItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-items-info/items',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategory(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats?page_no=1&page_size=4`,\r\n        method: 'get',\r\n        data\r\n    })\r\n}\r\n\r\nexport async function apiUpdateItemAccStatus(params,status) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/dgl-cat-items-info/${params}/${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTableData(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-pageable`,\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${params.unq_id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetTemplatesInItems(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/templates/${params.unq_id}/${params.category}/${params.type}?tpStatus=ACTIVE`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTemplateComponents(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-tax/${params}`,\r\n        method: 'get',\r\n    })\r\n}","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'CustomerCategoryList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesItems, apiDeleteSalesItems } from 'services/ItemsService'\r\n\r\nexport const getItems = createAsyncThunk(\r\n    'CustomerCategoryList/data/getItems',\r\n    async (data) => {\r\n        const response = await apiGetSalesItems()\r\n        return response.data.response\r\n    }\r\n)\r\n\r\nexport const deleteItems = async (data) => {\r\n    const response = await apiDeleteSalesItems(data)\r\n    return response.data\r\n}\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        Item: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'CustomerCategoryList/data',\r\n    initialState: {\r\n        loading: false,\r\n        ItemList: [],\r\n        tableData: initialTableData,\r\n    },\r\n    reducers: {\r\n        setItemList: (state, action) => {\r\n            state.ItemList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getItems.fulfilled]: (state, action) => {\r\n            state.ItemList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getItems.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setItemList, setTableData } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n\r\nconst EventsTableSearch = () => {\r\n  return (\r\n    <Input\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n        />\r\n  )\r\n}\r\n\r\nexport default EventsTableSearch\r\n","\r\nimport React from 'react'\r\nimport { HiOutlineFilter } from 'react-icons/hi'\r\nimport {\r\n\r\n    Button,\r\n\r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst EventsFilter = () => {\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => { }}\r\n            >\r\n                Filter\r\n            </Button>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default EventsFilter\r\n\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'components/ui'\r\nimport EventsTableSearch from './EventsTableSearch'\r\nimport EventsFilter from './EventsFilter'\r\nconst EventsTableTools = ({ actionPermissions }) => {\r\n    const { canAdd } = actionPermissions\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <EventsTableSearch />\r\n            <EventsFilter />\r\n\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                to=\"/add-event\"\r\n            >\r\n                <Button block variant=\"solid\"\r\n                    disabled={!canAdd}\r\n                    style={{\r\n                        fontStyle: 'normal',\r\n                    }}\r\n                    className='flex justify-center pt-[6px] gap-1'\r\n                    size=\"sm\" >\r\n                    <p className='pt-[2px]'><HiPlusCircle /></p>\r\n                    Add Event\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventsTableTools","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Badge, Button, Dialog, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems, setTableData } from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-black-500',\r\n        textClass: 'text-black-500',\r\n        backgroundColor: 'bg-[#F5F5F5]'\r\n    },\r\n    2: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-black-500',\r\n        backgroundColor: 'bg-[#F0F7FF]'\r\n    },\r\n    1: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500', backgroundColor: 'bg- #F5F5F5' },\r\n}\r\n\r\n\r\n/* const ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n} */\r\n\r\n\r\nconst EventsTable = ({actionPermissions}) => {\r\n\r\n    const [isDeactivate, setIsDeactivate] = useState(false)\r\n\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const ActionColumn = ({ row }) => {\r\n        const dispatch = useDispatch()\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n\r\n        const onDelete = () => {\r\n            dispatch(setDeleteMode('single'))\r\n            dispatch(setSelectedRow([row.id]))\r\n        }\r\n\r\n        const onView = useCallback(() => {\r\n            navigate(`/app/sales/Item-details/${row.id}`)\r\n        }, [navigate, row])\r\n\r\n        const onEdit = useCallback(() => {\r\n            navigate(`/add-event`)\r\n        }, [navigate, row])\r\n\r\n        const disableIconStyle = { color: 'grey', pointerEvents: 'none' }\r\n        const { canAdd, canEdit, canView, canActivate, canClone, canApprove } =\r\n            actionPermissions\r\n\r\n        return (\r\n            <div className=\"text-lg\">\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onEdit} style={canEdit ? null : disableIconStyle}    \r\n                    >\r\n                        <MdModeEdit />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"Activate\">\r\n                    <span\r\n                        className=\"cursor-pointer p-1 text-green-800 hover:text-green-800\"\r\n                        onClick={onDelete} style={canActivate ? null : disableIconStyle}    \r\n                    >\r\n                        <RiCheckboxCircleFill onClick={() => setIsDeactivate(true)} />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"View\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onView} style={canView ? null : disableIconStyle} \r\n                    >\r\n                        <HiOutlineEye />\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.EventsList.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state?.EventsList?.data?.loading)\r\n\r\n    //const data = useSelector((state) => state?.EventsList?.data?.ItemList)\r\n    const data = [\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '1'\r\n        },\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '2'\r\n        },\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '3'\r\n        },\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '4'\r\n        },\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '5'\r\n        },\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '6'\r\n        },\r\n        {\r\n            event: \"Event ABC\",\r\n            // description : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed lorem sed sapien ultrices ultrices sed s\",\r\n            status: \"Active\",\r\n            id: '7'\r\n        },\r\n    ]\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [data])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                flex: 1,\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Event',\r\n                accessorKey: 'event',\r\n            },\r\n            // {\r\n            //     header: 'Description',\r\n            //     accessorKey: 'description',\r\n            //     flex: 1,\r\n            // },\r\n            {\r\n                header: 'Status',\r\n                accessorKey: 'prefSettleType',\r\n                flex: 1,\r\n                cell: (props) => {\r\n\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n\r\n                            <span\r\n                                className={`flex ml-2 rtl:mr-2 capitalize font-semibold rounded-full border bg-gray-50 mt-4 px-2 py-1 ${ItemStatusColor[0].backgroundColor}`}\r\n                            >\r\n                                {ItemStatusColor[0].label === \"Active\" &&\r\n                                    <RiCheckboxCircleFill className='mt-1 mr-2 text-[#3B8C59]' />\r\n                                }\r\n\r\n                                {/* {ItemStatusColor[1].label === \"Inactive\" &&\r\n                                        <RiCloseCircleFill className='mt-1 mr-2 text-[#FF0000]' />}\r\n\r\n                                    {ItemStatusColor[2].label === \"Submitted\" &&\r\n                                        <BsPatchCheckFill className='mt-1 mr-2 text-blue-500'/>}  */}\r\n\r\n\r\n                                {ItemStatusColor[0].label}\r\n\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n\r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowItem([row.id]))\r\n        } else {\r\n            dispatch(removeRowItem(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <DataTable\r\n                ref={tableRef}\r\n                columns={columns}\r\n                data={data}\r\n                // loading={loading}\r\n                pagingData={tableData}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n                onCheckBoxChange={onRowSelect}\r\n                onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            selectable\r\n            />\r\n            <Dialog\r\n                isOpen={isDeactivate}\r\n                onClose={() => setIsDeactivate(false)}\r\n            >\r\n                <div>\r\n                    <h6 style={{\r\n                        fontStyle: 'normal',\r\n                        fontSize: '18px', \r\n                    }}>Deactivate</h6>\r\n                    <hr className='text-gray mt-4 mb-4' />\r\n                    <p style={{\r\n                        fontStyle: 'normal',\r\n                         fontSize: '15px',\r\n                    }}>Are you sure you want to deactivate this events ?</p>\r\n                    <div className='text-end mt-5'>\r\n                        <Button className='mr-3' onClick={() => setIsDeactivate(false)} style={{ backgroundColor: \"#4D4D4D\", color: \"white\" }}\r\n                        >No</Button>\r\n                        <Button variant=\"solid\" onClick={() => setIsDeactivate(false)} >Yes</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventsTable\r\n\r\n","import React, { useState } from 'react'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store/index'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport EventsTableTools from './components/EventsTableTools'\r\nimport EventsTable from './components/EventsTable'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\ninjectReducer('EventsList', reducer)\r\n\r\nconst TaxComponent = () => {\r\n    const { permissionsList } = useSelector((state) => state.auth.user)\r\n    const [canAdd, setCanAdd] = useState(permissionsList.includes('MSDEVNTSADD'))\r\n    const [canEdit, setCanEdit] = useState(\r\n        permissionsList.includes('MSDEVNTSEDI')\r\n    )\r\n    const [canView, setCanView] = useState(permissionsList.includes('MSDEVNTSVIE'))\r\n    const [canActivate, setCanActivate] = useState(permissionsList.includes('MSDEVNTSDEA'))\r\n    const [canClone, setCanClone] = useState(permissionsList.includes('MSDEVNTSCLO'))\r\n    const [canApprove, setCanApprove] = useState(permissionsList.includes('MSDEVNTSAPP'))\r\n\r\n\r\n    const actionPermissions = {\r\n        canAdd,\r\n        canEdit,\r\n        canClone,\r\n        canView,\r\n        canActivate,\r\n        canApprove,\r\n    }\r\n    return (\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n            <div className=\"lg:flex items-center justify-between mb-4\">\r\n                <h3 className=\"mb-4 lg:mb-0\">Events</h3>\r\n                <EventsTableTools actionPermissions={actionPermissions}/>\r\n            </div>\r\n            <EventsTable actionPermissions={actionPermissions}/>\r\n            {/* <ItemDeleteConfirmation /> */}\r\n        </AdaptableCard>\r\n    )\r\n}\r\n\r\nexport default TaxComponent"],"names":["apiGetSalesItems","params","ApiService","url","method","apiGetSalesItemVariants","id","apiGetSalesItemVariantsByItemId","apiDeleteSalesItems","data","apiCreateItem","resp","status","message","response","toString","apiGetTemplates","apiUpdateItemAccStatus","apiGetItemsTableData","apiGetProductCategoryData","unq_id","apiGetTemplatesInItems","category","type","apiGetItemsTemplateComponents","stateSlice","createSlice","name","initialState","selectedRows","selectedRow","deleteMode","reducers","setSelectedRows","state","action","payload","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","setDeleteMode","actions","toggleDeleteConfirmation","getItems","createAsyncThunk","dataSlice","loading","ItemList","tableData","total","pageIndex","pageSize","query","sort","Item","key","setItemList","setTableData","extraReducers","fulfilled","pending","combineReducers","className","size","placeholder","prefix","icon","onClick","canAdd","actionPermissions","target","download","block","to","variant","disabled","style","fontStyle","ItemStatusColor","label","dotClass","textClass","backgroundColor","useState","isDeactivate","setIsDeactivate","tableRef","useRef","dispatch","useDispatch","ActionColumn","row","textTheme","useThemeClass","navigate","useNavigate","onView","useCallback","onEdit","disableIconStyle","color","pointerEvents","canEdit","canView","canActivate","canClone","canApprove","title","useSelector","EventsList","event","fetchData","useEffect","resetSelected","useMemo","columns","header","flex","cell","props","original","accessorKey","onAllRowSelect","checked","rows","originalRows","map","selectedIds","forEach","push","ref","pagingData","onPaginationChange","page","newTableData","cloneDeep","onSelectChange","value","Number","onSort","onCheckBoxChange","onIndeterminateCheckBoxChange","selectable","isOpen","onClose","fontSize","injectReducer","reducer","permissionsList","auth","user","bodyClass"],"sourceRoot":""}