{"version":3,"file":"static/js/1469.cd7f8538.chunk.js","mappings":"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","sources":["services/ItemsService.js","services/NotificationService.js","views/settings/notifications/store/dataSlice.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-cat-items-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariants(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/items/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariantsByItemId(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/item/variant/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n\r\nexport async function apiDeleteSalesItems(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/catalogs/dgl-cat-items-info',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetTemplates(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-tp-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiProductCategoryItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-items-info/items',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategory(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats?page_no=1&page_size=4`,\r\n        method: 'get',\r\n        data\r\n    })\r\n}\r\n\r\nexport async function apiUpdateItemAccStatus(params,status) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/dgl-cat-items-info/${params}/${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTableData(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-pageable`,\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${params.unq_id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetTemplatesInItems(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/templates/${params.unq_id}/${params.category}/${params.type}?tpStatus=ACTIVE`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTemplateComponents(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-tax/${params}`,\r\n        method: 'get',\r\n    })\r\n}","\r\n\r\nimport ApiService from './ApiService'\r\n\r\n// export async function getNotificationsTableData(data) {\r\n//     return ApiService.fetchData({\r\n//         url: `account/notifications?page_no=${data.page_no}&page_size=${data.page_size}&sort_field=${data.sort_field}`,\r\n//         method: 'get',\r\n//     })\r\n// }\r\n\r\nexport async function apiGetNotification(params) {\r\n\r\n    return ApiService.fetchData({\r\n        url: '/account/notifications',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateNotificationStatus(id, status) {\r\n    return ApiService.fetchData({\r\n        url: `/account/notifications?id=${id}&ntf_status=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\n\r\nexport async function apiCreateNotification(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/notifications',\r\n            method: 'post',\r\n            data,\r\n        });\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport async function apiUpdateNotification(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/notifications/${data.id}`,\r\n            method: 'put',\r\n            data,\r\n        });\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\n\r\nexport async function apiGetNotificationAccount(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesItems, apiDeleteSalesItems } from 'services/ItemsService'\r\nimport { apiGetNotification, apiGetNotificationAccount } from 'services/NotificationService'\r\n\r\n\r\n\r\nexport const getItems = createAsyncThunk(\r\n    'notificationList/data/getItems',\r\n    async (data) => {\r\n        const response = await apiGetSalesItems()\r\n        return response.data.response\r\n    }\r\n)\r\n\r\nexport const deleteItems = async (data) => {\r\n    const response = await apiDeleteSalesItems(data)\r\n    return response.data\r\n}\r\n\r\nexport const getNotificationList = createAsyncThunk(\r\n    'notificationList/data/getNotificationList',\r\n    async (data) => {\r\n        const response = await apiGetNotification(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getNotificationAccount = createAsyncThunk(\r\n    'notificationList/data/getNotificationAccount',\r\n    async (data) => {\r\n        const response = await apiGetNotificationAccount(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: 'id',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'notificationsList/data',\r\n    initialState: {\r\n        loading: false,\r\n        // ItemList: [],\r\n        tableData: initialTableData,\r\n        notificationList: [],\r\n        notificationAccList: []\r\n\r\n    },\r\n    reducers: {\r\n        setItemList: (state, action) => {\r\n            state.ItemList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setNotificationList: (state, action) => {\r\n            state.notificationList = action.payload\r\n        },\r\n        setNotificationAccountData: (state, action) => {\r\n            state.notificationAccList = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getItems.fulfilled]: (state, action) => {\r\n            state.ItemList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getItems.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getNotificationList.fulfilled]: (state, action) => {\r\n            state.notificationList = action.payload.res\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getNotificationList.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n        [getNotificationAccount.fulfilled]: (state, action) => {\r\n            \r\n            state.notificationAccList = action.payload?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.acc_name,\r\n                acc_unq_id:parent.acc_unq_id\r\n            }))\r\n           \r\n            state.loading = false\r\n        },\r\n        [getNotificationAccount.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData, setNotificationList, setNotificationAccountData } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["apiGetSalesItems","params","ApiService","url","method","apiGetSalesItemVariants","id","apiGetSalesItemVariantsByItemId","apiDeleteSalesItems","data","apiCreateItem","resp","status","message","response","toString","apiGetTemplates","apiUpdateItemAccStatus","apiGetItemsTableData","apiGetProductCategoryData","unq_id","apiGetTemplatesInItems","category","type","apiGetItemsTemplateComponents","apiGetNotification","apiUpdateNotificationStatus","apiCreateNotification","apiUpdateNotification","apiGetNotificationAccount","enterAccount","getItems","createAsyncThunk","getNotificationList","getNotificationAccount","dataSlice","createSlice","name","initialState","loading","tableData","total","pageIndex","pageSize","query","sort","order","key","notificationList","notificationAccList","reducers","setItemList","state","action","ItemList","payload","setTableData","setNotificationList","setNotificationAccountData","extraReducers","fulfilled","pending","res","map","parent","value","label","acc_name","acc_unq_id","actions","setOrderList"],"sourceRoot":""}