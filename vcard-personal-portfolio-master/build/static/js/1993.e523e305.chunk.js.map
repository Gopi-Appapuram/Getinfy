{"version":3,"file":"static/js/1993.e523e305.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","services/RetailService.js","utils/hooks/useTimeOutMessage.js","services/ThemeConfigService.js","views/settings/themeConfiguration/store/dataSlice.js","views/settings/themeConfiguration/components/ThemeConfigurationDetails.js","views/settings/themeConfiguration/store/stateSlice.js","views/settings/themeConfiguration/store/index.js","views/settings/themeConfiguration/index.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport async function apiUpdateRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: '/account/acc-operators',\r\n        method: 'put',\r\n        data,\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// export async function apiGetSalesOrders(params) {\r\n//     return ApiService.fetchData({\r\n//         url: '/retails/sales/orders',\r\n//         method: 'get',\r\n//         params,\r\n//     })\r\n// }\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n\r\n    return ApiService.fetchData({\r\n        //url: `/account/retail-customers?page_no=${params.pageIndex}&page_size=${params.pageSize}&sort_field=${params.sort.key}`,\r\n\r\n        url: `/account/retail-customers`,\r\n\r\n        method: 'get',\r\n        params\r\n\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateRetailAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/retail-customers?id=${id}&cust_status=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetCustomerCatRetail(data) {\r\n\r\n    return ApiService.fetchData({\r\n\r\n        url: `/account/cust-cats/unq-id-acc-type/drop-down/${data.enterAccount}/RetailCustomer`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n\r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage\r\n","import ApiService from \"./ApiService\"\r\n\r\nexport async function apiSubmitTheme(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/thm-infos',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateTheme(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/thm-infos/${data.id}`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetThemeInfoByUnqid(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/thm-infos/unq-id/${data.unq_id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders } from 'services/RetailService'\r\nimport { apiGetThemeInfoByUnqid } from 'services/ThemeConfigService'\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'themeInfo/data/getOrders',\r\n    async (data) => {\r\n        \r\n        const response = await apiGetSalesOrders()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const GetThemeInfo = createAsyncThunk(\r\n    'themeInfo/data/getOrders',\r\n    async (data) => {\r\n        const response = await apiGetThemeInfoByUnqid(data)\r\n        return response.data.response\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'themeInfo/data',\r\n    initialState: {\r\n        loading: false,\r\n        accountList: [],\r\n        tableData: initialTableData,\r\n        getThemeData : []\r\n    },\r\n    reducers: {\r\n        setOrderList: (state, action) => {\r\n            state.accountList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setThemeData: (state, action) => {\r\n            state.getThemeData = action.payload\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.accountList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [GetThemeInfo.fulfilled]: (state, action) => {\r\n            state.getThemeData = action.payload\r\n            state.loading = false\r\n        },\r\n        [GetThemeInfo.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData ,setThemeData} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { AdaptableCard } from 'components/shared'\r\nimport {\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n    Switcher,\r\n    Badge,\r\n    Checkbox,\r\n    Alert\r\n} from 'components/ui'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport useDirection from 'utils/hooks/useDirection'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { HiCheck } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport * as Yup from 'yup'\r\nimport { apiSubmitTheme, apiUpdateTheme } from 'services/ThemeConfigService'\r\nimport { GetErrorMsg, OpenNotification } from 'views/Servicefile'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport useDarkMode from 'utils/hooks/useDarkMode'\r\nimport { GetThemeInfo } from '../store/dataSlice'\r\nimport { setThemeColor, setThemeColorLevel } from 'store/theme/themeSlice'\r\n// const placementList = [\r\n//     { name: 'Fixed', value: 'top' },\r\n//     { name: 'Percentage', value: 'right' },\r\n\r\n// ]\r\nconst dirList = [\r\n    { value: 'LTR', label: 'LTR' },\r\n    { value: 'RTL', label: 'RTL' },\r\n]\r\n\r\nconst themeValues = [\r\n    { value: 'true', lable: \"true\" },\r\n    { value: 'false', lable: \"false\" },\r\n\r\n]\r\n\r\nconst colorList = [\r\n    { label: 'Red', value: 'red' },\r\n    { label: 'Orange', value: 'orange' },\r\n    { label: 'Amber', value: 'amber' },\r\n    { label: 'Yellow', value: 'yellow' },\r\n    { label: 'Lime', value: 'lime' },\r\n    { label: 'Green', value: 'green' },\r\n    { label: 'Emerald', value: 'emerald' },\r\n    { label: 'Teal', value: 'teal' },\r\n    { label: 'Cyan', value: 'cyan' },\r\n    { label: 'Sky', value: 'sky' },\r\n    { label: 'Blue', value: 'blue' },\r\n    { label: 'Indigo', value: 'indigo' },\r\n    { label: 'Violet', value: 'violet' },\r\n    { label: 'Purple', value: 'purple' },\r\n    { label: 'Fuchsia', value: 'fuchsia' },\r\n    { label: 'Pink', value: 'pink' },\r\n    { label: 'Rose', value: 'rose' },\r\n]\r\n\r\nconst colorLevelList = [\r\n    { label: '400', value: 400 },\r\n    { label: '500', value: 500 },\r\n    { label: '600', value: 600 },\r\n    { label: '700', value: 700 },\r\n    { label: '800', value: 800 },\r\n    { label: '900', value: 900 },\r\n]\r\n\r\nconst initialValues = {\r\n    unq_id: \"\",\r\n    // id: \"\",\r\n    thm_colour: \"\",\r\n    thm_font_family: \"cursive\",\r\n    thm_mode: false,\r\n    thm_orientation: \"\",\r\n    thm_colour_level: 500\r\n}\r\n\r\nconst validateFormikTheme = Yup.object().shape({\r\n    // unq_id: Yup.string().required(\"Please select language preferences\").nullable(),\r\n    // thm_colour: Yup.string().required(\"Please select language preferences\").nullable(),\r\n    // thm_font_family: Yup.string().required(\"Please select language preferences\").nullable(),\r\n    // thm_mode: Yup.string().required(\"Please select language preferences\").nullable(),\r\n    // thm_orientation: Yup.string().required(\"Please select language preferences\").nullable(),\r\n})\r\n\r\n\r\nconst ThemeConfigurationDetails = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const formikRef = useRef()\r\n\r\n    const { unq_id, acc_mno_unq_id } = useSelector((state) => state.auth.user)\r\n    const themeInfo = useSelector((state) => state.themeInfo?.data?.getThemeData[state.themeInfo?.data?.getThemeData.length - 1])\r\n    const themeInfoArr = useSelector((state) => state.themeInfo?.data?.getThemeData)\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n    const [isDark, setIsDark] = useDarkMode()\r\n    const [useDir, setUseDir] = useDirection()\r\n    // const [isDark, setIsDark] = useState(themeInfo? themeInfo?.thm_mode : false)\r\n    const [direction, updateDirection] = useState('LTR')\r\n    const [themeInitValues, setThemeInitValues] = useState(initialValues)\r\n\r\n    // const onSwitchChange = useCallback((checked,form,field) => {\r\n    //         form.setFieldValue(field.name,!checked)\r\n    //         setIsDark(!checked)\r\n    // },[setIsDark])\r\n\r\n    const ColorBadge = ({ className, themeColor }) => {\r\n        const primaryColorLevel = useSelector(\r\n            (state) => state.theme.primaryColorLevel\r\n        )\r\n\r\n        return (\r\n            <Badge\r\n                className={className}\r\n                innerClass={classNames(`bg-${themeColor}-${primaryColorLevel}`)}\r\n            />\r\n        )\r\n    }\r\n\r\n    const CustomSelectOption = ({ innerProps, label, value, isSelected }) => {\r\n        return (\r\n            <div\r\n                className={`flex items-center justify-between p-2 ${isSelected\r\n                        ? 'bg-gray-100 dark:bg-gray-500'\r\n                        : 'hover:bg-gray-50 dark:hover:bg-gray-600'\r\n                    }`}\r\n                {...innerProps}\r\n            >\r\n                <div className=\"flex items-center gap-2\">\r\n                    <ColorBadge themeColor={value} />\r\n                    <span>{label}</span>\r\n                </div>\r\n                {isSelected && <HiCheck className=\"text-emerald-500 text-xl\" />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onDirChange = (val, form, field) => {\r\n        form.setFieldValue(field.name, val)\r\n        updateDirection(val)\r\n    }\r\n\r\n    const onSaveColorTheme = useCallback(async (values) => {\r\n        values.unq_id = unq_id\r\n        values.thm_font_family = 'cursive'\r\n        let isChangedInputs = true\r\n        if (values.thm_mode === themeInfo?.thm_mode && values.thm_orientation === themeInfo?.thm_orientation && values.thm_colour === themeInfo?.thm_colour && values.thm_colour_level === themeInfo?.thm_colour_level) {\r\n            isChangedInputs = false\r\n        }\r\n        if (isChangedInputs) {\r\n\r\n\r\n            let resp\r\n            if (themeInfo == undefined) {\r\n                resp = await apiSubmitTheme(values)\r\n            } else {\r\n                values.id = themeInfo?.id\r\n                resp = await apiUpdateTheme(values)\r\n\r\n            }\r\n            if (resp.status === 'success') {\r\n                dispatch(GetThemeInfo({ unq_id: acc_mno_unq_id }))\r\n                OpenNotification('success', 'Changed successfully')\r\n                setIsDark(values.thm_mode ? 'dark' : 'light')\r\n                setUseDir(values.thm_orientation)\r\n                dispatch(setThemeColor(values.thm_colour))\r\n                dispatch(setThemeColorLevel(values.thm_colour_level))\r\n            }\r\n            if (resp.status === 'failed') {\r\n                setMessage(GetErrorMsg(resp))\r\n            }\r\n        } else {\r\n\r\n            OpenNotification(\"warning\", \"Please do some changes in themes\")\r\n        }\r\n    }, [dispatch, themeInfo])\r\n\r\n    const onClickReset = (resetForm) => {\r\n        resetForm({ values: initialValues, touched: {}, errors: {} })\r\n        updateDirection('LTR')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(GetThemeInfo({ unq_id: acc_mno_unq_id }))\r\n    }, [dispatch, unq_id])\r\n\r\n    const preValuesToTheme = (themeInfo, initialValues) => {\r\n        initialValues.thm_mode = themeInfo?.thm_mode\r\n        initialValues.thm_colour = themeInfo?.thm_colour\r\n        initialValues.thm_orientation = themeInfo?.thm_orientation\r\n        initialValues.thm_font_family = themeInfo?.thm_font_family\r\n        initialValues.thm_colour_level = themeInfo?.thm_colour_level\r\n        // initialValues.id = themeInfo?.id\r\n\r\n\r\n        return initialValues\r\n    }\r\n\r\n    useEffect(() => {\r\n        const a = preValuesToTheme(themeInfo, initialValues)\r\n        setThemeInitValues(a)\r\n        updateDirection(a.thm_orientation)\r\n    }, [themeInfo])\r\n\r\n    return (\r\n        <>\r\n            <h3 className='mb-4'>Theme Configuration</h3>\r\n            {message && (\r\n                <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                    {Array.isArray(message) ? message.join(\", \") : message}\r\n                </Alert>\r\n            )}\r\n            <Formik innerRef={formikRef}\r\n                initialValues={themeInitValues}\r\n                // validationSchema={validateFormikTheme}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setSubmitting(true)\r\n                    onSaveColorTheme(values)\r\n                }}\r\n            >\r\n                {({ values, touched, errors, isSubmitting, setFieldValue, resetForm }) => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"p-5\" style={{ backgroundColor: \"#f5f5f5\" }}>\r\n                                <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider>\r\n                                    <FormContainer>\r\n                                        <div className=\"md:grid gap-4 mx-4 pl-2\">\r\n                                            <FormItem\r\n                                                label=\"Dark Mode\" style={{ fontSize: \"16px\" }}\r\n                                            >\r\n                                                <p style={{ fontSize: \"11px\" }}>Switch theme to dark mode</p>\r\n                                                <Field name='thm_mode'>\r\n                                                    {({ field, form }) => (\r\n                                                        <Switcher className='mt-3' checked={values.thm_mode}\r\n                                                            onChange={(checked) => form.setFieldValue(field.name, !checked)}\r\n                                                        />\r\n                                                    )}\r\n                                                </Field>\r\n                                            </FormItem>\r\n                                            <FormItem\r\n                                                label=\"Orientation\" style={{ fontSize: \"16px\" }}\r\n                                            >\r\n                                                <p style={{ fontSize: \"11px\" }}>Select a direction</p>\r\n                                                <Field name='thm_orientation'>\r\n                                                    {({ field, form }) => (\r\n                                                        <div className='mt-4'>\r\n                                                            <InputGroup size=\"sm\">\r\n                                                                {dirList.map((dir) => (\r\n                                                                    <Button type=\"button\" className={`w-24 ${direction === dir.value ? \"bg-gray-400\" : \"bg-gray-50\"}`}\r\n                                                                        key={dir.value}\r\n                                                                        active={direction === dir.value}\r\n                                                                        onClick={() => onDirChange(dir.value, form, field)}\r\n                                                                    >\r\n                                                                        {dir.label}\r\n                                                                    </Button>\r\n                                                                ))}\r\n                                                            </InputGroup>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </Field>\r\n                                            </FormItem>\r\n                                            <div className='md:grid grid-cols-5 gap-4'>\r\n                                                <FormItem label=\"Color Theme\" >\r\n                                                    <Field name=\"thm_colour\">\r\n                                                        {({ field, form }) => (\r\n                                                            <Select placeholder=\"Select Color Theme\" field={field} form={form} options={colorList}\r\n                                                                value={colorList.filter((color) => color.value === values.thm_colour)}\r\n                                                                onChange={(obj) => form.setFieldValue(field.name, obj.value)}\r\n                                                            />\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FormItem>\r\n                                                <FormItem label=\"Color Level\" >\r\n                                                    <Field name=\"thm_colour_level\">\r\n                                                        {({ field, form }) => (\r\n                                                            <Select placeholder=\"Select Color Level\" options={colorLevelList} field={field} form={form}\r\n                                                                value={colorLevelList.filter((color) => color.value === values.thm_colour_level)}\r\n                                                                onChange={(obj) => form.setFieldValue(field.name, obj.value)}\r\n                                                            />\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FormItem>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormContainer>\r\n                                </AdaptableCard>\r\n                            </div>\r\n                            <div className=\"mt-4 text-right\">\r\n                                <Button type=\"button\" className=\"mx-2\" variant=\"solid\"\r\n                                    onClick={() => onClickReset(resetForm)}\r\n                                    style={{ backgroundColor: \"#4D4D4D\", fontStyle: 'normal', fontSize: '18px' }}>\r\n                                    Reset\r\n                                </Button>\r\n                                <Button variant=\"solid\" type='Submit' style={{ color: \"white\", fontStyle: 'normal', fontSize: '18px' }}>\r\n                                    Save\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ThemeConfigurationDetails\r\n\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'myaccountList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React from 'react'\r\nimport ThemeConfigurationDetails from './components/ThemeConfigurationDetails'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\n\r\ninjectReducer('themeInfo', reducer)\r\nfunction ThemeConfiguration() {\r\n  let  breadCrumbList=[{\r\n    name:'Settings',\r\n},{\r\n    name:'Theme Configuration',\r\n    link:\"/settings-menu-theme-configuraion\"\r\n}]\r\n  return (\r\n    <>\r\n    {/* <div>Settings / Theme Configuration</div> */}\r\n    <CustomBreadcrumbs  list={breadCrumbList} />\r\n\r\n    <div className='mt-4'>\r\n      {/* <h3>Theme Configuration</h3> */}\r\n    <ThemeConfigurationDetails/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ThemeConfiguration"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","apiSubmitRetail","ApiService","url","method","resp","status","message","response","toString","apiUpdateRetail","apiGetSalesOrders","params","apiUpdateRetailAccStatus","id","apiGetCurrency","enterAccount","apiGetParentAccount","apiGetCustomerCatRetail","apiGetUploadFileTypes","interval","useState","setMessage","useEffect","timeout","setTimeout","clearTimeout","apiSubmitTheme","apiUpdateTheme","apiGetThemeInfoByUnqid","unq_id","getOrders","createAsyncThunk","GetThemeInfo","dataSlice","createSlice","initialState","loading","accountList","tableData","total","pageIndex","pageSize","query","sort","order","key","getThemeData","reducers","setOrderList","action","payload","setTableData","setThemeData","extraReducers","fulfilled","pending","actions","dirList","value","label","colorList","colorLevelList","initialValues","thm_colour","thm_font_family","thm_mode","thm_orientation","thm_colour_level","Yup","shape","props","dispatch","useDispatch","formikRef","useNavigate","useRef","useSelector","auth","user","acc_mno_unq_id","themeInfo","useTimeOutMessage","useDarkMode","setIsDark","useDirection","setUseDir","direction","updateDirection","themeInitValues","setThemeInitValues","onSaveColorTheme","useCallback","values","isChangedInputs","undefined","OpenNotification","setThemeColor","setThemeColorLevel","GetErrorMsg","a","preValuesToTheme","className","type","showIcon","Array","isArray","join","innerRef","onSubmit","setSubmitting","resetForm","touched","errors","isSubmitting","setFieldValue","backgroundColor","bodyClass","divider","fontSize","field","form","checked","onChange","size","dir","active","onClick","onDirChange","placeholder","options","filter","obj","variant","onClickReset","fontStyle","stateSlice","selectedRows","selectedRow","deleteMode","setSelectedRows","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","setDeleteMode","toggleDeleteConfirmation","combineReducers","injectReducer","reducer"],"sourceRoot":""}