{"version":3,"file":"static/js/5797.cd21ebe3.chunk.js","mappings":"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","sources":["views/orders/store/index.js","views/orders/components/dashboard/TopCustomers/TopCustomersFilter.js","views/orders/components/dashboard/TopCustomers/TopCustomersTableSearch.js","views/orders/components/dashboard/TopCustomers/TopCustomersTableTool.js","views/orders/components/dashboard/TopCustomers/TopCustomersTable.js","views/orders/components/dashboard/TopProviders/TopProvidersTableSearch.js","views/orders/components/dashboard/TopProviders/TopProviderFilter.js","views/orders/components/dashboard/TopProviders/TopProvidersTableTools.js","views/orders/components/dashboard/TopProviders/TopProvidersTable.js","views/orders/components/dashboard/TopWarehouses/TopWarehousesTableTools.js","views/orders/components/dashboard/TopWarehouses/TopWarehousesTable.js","views/orders/components/dashboard/DashboardTab.js","views/orders/components/dashboard/Dashboard.js","views/orders/components/OrdersTabs.js","views/orders/index.js"],"sourcesContent":["import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","\r\nimport React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst TopCustomersFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopCustomersFilter\r\n","\r\n\r\nimport React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { getItems, setTableData } from '../store/dataSlice'\r\n// import debounce from 'lodash/debounce'\r\n// import cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst TopCustomersTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    // const searchInput = useRef()\r\n\r\n    // const tableData = useSelector(\r\n    //     (state) => state.itemsList.data.tableData\r\n    // )\r\n\r\n    // const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    // function handleDebounceFn(val) {\r\n        // const newTableData = cloneDeep(tableData)\r\n        // newTableData.query = val\r\n        // newTableData.pageIndex = 1\r\n    //     if (typeof val === 'string' && val.length > 1) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n\r\n    //     if (typeof val === 'string' && val.length === 0) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n    // }\r\n\r\n    // const fetchData = (data) => {\r\n    //     dispatch(setTableData(data))\r\n    //     dispatch(getItems(data))\r\n    // }\r\n\r\n    // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <Input\r\n            ref={{}}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search offers\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={\"\"}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TopCustomersTableSearch\r\n\r\n","import React, { useState } from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, Form, Formik } from 'formik'\r\n\r\nimport {\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Radio,\r\n    FormItem,\r\n    FormContainer,\r\n    Drawer,\r\n    Select,\r\n} from 'components/ui'\r\nimport TopCustomersFilter from './TopCustomersFilter'\r\nimport TopCustomersTableSearch from './TopCustomersTableSearch'\r\n\r\n\r\nconst TopCustomersTableTool = () => {\r\n\r\n    const data = [\r\n        {\r\n          value: 1,\r\n          label: \"Enterprise Customers\"\r\n        },\r\n        {\r\n          value: 2,\r\n          label: \"Retail Customers\"\r\n        },\r\n        {\r\n          value: 3,\r\n          label: \"Enterprise Customers\"\r\n        }\r\n        \r\n      ];\r\n\r\n    // const [inputValue, setInputValue] = useState()\r\n\r\n    const [selectedValue, setSelectedValue] = useState(3);\r\n \r\n    \r\n    const handleChange = e => {\r\n      setSelectedValue(e.value);\r\n    }\r\n   \r\n\r\n\r\n\r\n\r\n    const formFieldsType = [\r\n        { label: 'Text Field', value: 'TF' },\r\n        { label: 'Text Area', value: 'TA' },\r\n        { label: 'Drop Down', value: 'DD' },\r\n        { label: 'Radio Button', value: 'RB' },\r\n        { label: 'Check Boxes', value: 'CB' },\r\n        { label: 'CK Editor', value: 'CK' },\r\n    ]\r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex justify-end  flex-col lg:flex-row lg:items-center\">\r\n                <TopCustomersTableSearch />\r\n                <TopCustomersFilter />\r\n                <Link\r\n                    className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                    target=\"_blank\"\r\n                    download\r\n                >\r\n                    <Button block size=\"sm\" icon={<HiDownload />}>\r\n                        Export\r\n                    </Button>\r\n                </Link>\r\n\r\n\r\n                <div className=' rounded-md  w-56'>\r\n\r\n                   \r\n\r\n                    <Select  \r\n                        placeholder=\"Select Option\"\r\n                        value={data.find(obj => obj.value === selectedValue)} // set selected value\r\n                        options={data} // set list of the data\r\n                        onChange={handleChange} // assign onChange function\r\n                    />\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopCustomersTableTool\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n  0: {\r\n    label: 'Active',\r\n    dotClass: 'bg-emerald-500',\r\n    textClass: 'text-emerald-500',\r\n  },\r\n  1: {\r\n    label: 'Submitted',\r\n    dotClass: 'bg-blue-500',\r\n    textClass: 'text-amber-500',\r\n  },\r\n  2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\nconst ItemColumn = ({ row }) => {\r\n  const { textTheme } = useThemeClass()\r\n  const navigate = useNavigate()\r\n\r\n  const onView = useCallback(() => {\r\n    navigate(`/app/sales/Item-details/${row.id}`)\r\n  }, [navigate, row])\r\n\r\n  return (\r\n    <span\r\n      className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n      onClick={onView}\r\n    >\r\n      #{row.id}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst ActionColumn = ({ row }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"text-lg\">\r\n      <Tooltip title=\"Edit\">\r\n        <span\r\n          className={`cursor-pointer p-1 text-blue-500 hover:${\"textTheme\"}`}\r\n        // onClick={onView}\r\n        >\r\n          <MdModeEdit />\r\n\r\n        </span>\r\n      </Tooltip>\r\n\r\n      <Tooltip title=\"Assign\">\r\n        <span\r\n          className={`cursor-pointer p-1  hover:${\"textTheme\"}`}\r\n        // onClick={onView}\r\n        >\r\n          <AiFillCopy />\r\n        </span>\r\n      </Tooltip>\r\n      <Tooltip title=\"View\">\r\n        <span\r\n          className={`cursor-pointer p-1 text-blue-500 hover:${\"textTheme\"}`}\r\n        // onClick={onView}\r\n        >\r\n          <HiOutlineEye />\r\n        </span>\r\n      </Tooltip>\r\n      <Tooltip title=\"Delete\">\r\n        <span\r\n          className=\"cursor-pointer p-1 text-green-800 hover:text-green-800\"\r\n        // onClick={onDelete}\r\n        >\r\n          <RiCheckboxCircleFill />\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TopCustomersTable = () => {\r\n\r\n  // const tableRef = useRef(null)\r\n\r\n  // const dispatch = useDispatch()\r\n\r\n  // const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n  //     (state) => state.doctypeList.data.tableData\r\n  // )\r\n  // const loading = useSelector((state) => state.doctypeList.data.loading)\r\n\r\n  // const data = useSelector((state) => state.doctypeList.data.ItemList)\r\n  // const fetchData = useCallback(() => {\r\n  //     // dispatch(getItems())\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //     dispatch(setSelectedRows([]))\r\n  //     fetchData()\r\n  // }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n  // useEffect(() => {\r\n  //     if (tableRef) {\r\n  //         tableRef.current?.resetSelected()\r\n  //     }\r\n  // }, [data])\r\n\r\n  // const tableData = useMemo(\r\n  //     () => ({ pageIndex, pageSize, sort, query, total }),\r\n  //     [pageIndex, pageSize, sort, query, total]\r\n  // )\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        header: 'Order ID',\r\n        id: 'action',\r\n        cell: (props) => <ActionColumn row={props.row.original} />,\r\n      },\r\n\r\n      {\r\n        header: 'Customer Name',\r\n        accessorKey: 'itemTitle',\r\n\r\n\r\n      },\r\n\r\n\r\n      {\r\n        header: 'Number of orders',\r\n        accessorKey: 'tp',\r\n\r\n        cell: (props) => {\r\n          const { tp } = props.row.original\r\n          return (\r\n            <p>{tp?.tpTitle}</p>\r\n          )\r\n        },\r\n\r\n      },\r\n      {\r\n        header: 'Revenue Generated',\r\n        accessorKey: 'itemTitle',\r\n\r\n\r\n      },\r\n      {\r\n        header: 'Last Order Date',\r\n        accessorKey: 'itemTitle',\r\n\r\n\r\n      },\r\n\r\n      {\r\n        header: 'Current Status',\r\n        accessorKey: 'solItemType',\r\n\r\n        cell: (props) => {\r\n          return (\r\n            <div className=\"flex items-center\">\r\n              <Badge\r\n                className={ItemStatusColor[0].dotClass}\r\n              />\r\n              <span\r\n                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n              >\r\n                {ItemStatusColor[0].label}\r\n              </span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        header: 'Actions',\r\n        accessorKey: 'itemTitle',\r\n\r\n\r\n      },\r\n\r\n\r\n    ],\r\n    []\r\n  )\r\n\r\n  // const onPaginationChange = (page) => {\r\n  //     const newTableData = cloneDeep(tableData)\r\n  //     newTableData.pageIndex = page\r\n  //     dispatch(setTableData(newTableData))\r\n  // }\r\n\r\n  // const onSelectChange = (value) => {\r\n  //     const newTableData = cloneDeep(tableData)\r\n  //     newTableData.pageSize = Number(value)\r\n  //     newTableData.pageIndex = 1\r\n  //     dispatch(setTableData(newTableData))\r\n  // }\r\n\r\n  // const onSort = (sort) => {\r\n  //     const newTableData = cloneDeep(tableData)\r\n  //     newTableData.sort = sort\r\n  //     dispatch(setTableData(newTableData))\r\n  // }\r\n\r\n  // const onRowSelect = (checked, row) => {\r\n  //     if (checked) {\r\n  //         dispatch(addRowItem([row.id]))\r\n  //     } else {\r\n  //         dispatch(removeRowItem(row.id))\r\n  //     }\r\n  // }\r\n\r\n  // const onAllRowSelect = useCallback(\r\n  //     (checked, rows) => {\r\n  //         if (checked) {\r\n  //             const originalRows = rows.map((row) => row.original)\r\n  //             const selectedIds = []\r\n  //             originalRows.forEach((row) => {\r\n  //                 selectedIds.push(row.id)\r\n  //             })\r\n  //             dispatch(setSelectedRows(selectedIds))\r\n  //         } else {\r\n  //             dispatch(setSelectedRows([]))\r\n  //         }\r\n  //     },\r\n  //     [dispatch]\r\n  // )\r\n\r\n  return (\r\n    <DataTable\r\n      // ref={tableRef}\r\n      columns={columns}\r\n    // data={data}\r\n    // loading={loading}\r\n    // pagingData={tableData}\r\n    // onPaginationChange={onPaginationChange}\r\n    // onSelectChange={onSelectChange}\r\n    // onSort={onSort}\r\n    // onCheckBoxChange={onRowSelect}\r\n    // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n    // selectable\r\n    />\r\n  )\r\n}\r\n\r\nexport default TopCustomersTable\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// TopProvidersTable","\r\n\r\nimport React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { getItems, setTableData } from '../store/dataSlice'\r\n// import debounce from 'lodash/debounce'\r\n// import cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst TopProvidersTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    // const searchInput = useRef()\r\n\r\n    // const tableData = useSelector(\r\n    //     (state) => state.itemsList.data.tableData\r\n    // )\r\n\r\n    // const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    // function handleDebounceFn(val) {\r\n        // const newTableData = cloneDeep(tableData)\r\n        // newTableData.query = val\r\n        // newTableData.pageIndex = 1\r\n    //     if (typeof val === 'string' && val.length > 1) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n\r\n    //     if (typeof val === 'string' && val.length === 0) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n    // }\r\n\r\n    // const fetchData = (data) => {\r\n    //     dispatch(setTableData(data))\r\n    //     dispatch(getItems(data))\r\n    // }\r\n\r\n    // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <Input\r\n            ref={{}}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search offers\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={\"\"}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TopProvidersTableSearch\r\n","\r\nimport React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst TopProviderFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopProviderFilter\r\n","\r\n\r\n\r\nimport React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, Form, Formik } from 'formik'\r\n\r\nimport {\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Radio,\r\n    FormItem,\r\n    FormContainer,\r\n    Drawer,\r\n    Select,\r\n} from 'components/ui'\r\nimport TopCustomersTableSearch from '../TopCustomers/TopCustomersTableSearch'\r\nimport TopProvidersTableSearch from './TopProvidersTableSearch'\r\nimport TopProviderFilter from './TopProviderFilter'\r\n\r\nconst TopProvidersTableTools = () => {\r\n\r\n\r\n    const formFieldsType = [\r\n        { label: 'Text Field', value: 'TF' },\r\n        { label: 'Text Area', value: 'TA' },\r\n        { label: 'Drop Down', value: 'DD' },\r\n        { label: 'Radio Button', value: 'RB' },\r\n        { label: 'Check Boxes', value: 'CB' },\r\n        { label: 'CK Editor', value: 'CK' },\r\n      ]\r\n    return (\r\n        <>\r\n            \r\n                    <div className=\"flex justify-end  flex-col lg:flex-row lg:items-center\">\r\n                        <TopProvidersTableSearch />\r\n                        <TopProviderFilter />\r\n                        <Link\r\n                            className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                            target=\"_blank\"\r\n                            download\r\n                        >\r\n                            <Button block size=\"sm\" icon={<HiDownload />}>\r\n                                Export\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n\r\n              \r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopProvidersTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\nconst ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst ActionColumn = ({ row }) => {\r\n   \r\n\r\n    return (\r\n        <div className=\"text-lg\">\r\n        <Tooltip title=\"Edit\">\r\n            <span\r\n                className={`cursor-pointer p-1 text-blue-500 hover:${\"textTheme\"}`}\r\n                // onClick={onView}\r\n            >\r\n                <MdModeEdit />\r\n               \r\n            </span>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Assign\">\r\n            <span\r\n                className={`cursor-pointer p-1  hover:${\"textTheme\"}`}\r\n                // onClick={onView}\r\n            >\r\n                <AiFillCopy/>\r\n            </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"View\">\r\n            <span\r\n                className={`cursor-pointer p-1 text-blue-500 hover:${\"textTheme\"}`}\r\n                // onClick={onView}\r\n            >\r\n                <HiOutlineEye />\r\n            </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n            <span\r\n                className=\"cursor-pointer p-1 text-green-800 hover:text-green-800\" \r\n                // onClick={onDelete}\r\n            >\r\n                <RiCheckboxCircleFill />\r\n            </span>\r\n        </Tooltip>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst TopProvidersTable = () => {\r\n\r\n    // const tableRef = useRef(null)\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n    //     (state) => state.doctypeList.data.tableData\r\n    // )\r\n    // const loading = useSelector((state) => state.doctypeList.data.loading)\r\n\r\n    // const data = useSelector((state) => state.doctypeList.data.ItemList)\r\n    // const fetchData = useCallback(() => {\r\n    //     // dispatch(getItems())\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(setSelectedRows([]))\r\n    //     fetchData()\r\n    // }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    // useEffect(() => {\r\n    //     if (tableRef) {\r\n    //         tableRef.current?.resetSelected()\r\n    //     }\r\n    // }, [data])\r\n\r\n    // const tableData = useMemo(\r\n    //     () => ({ pageIndex, pageSize, sort, query, total }),\r\n    //     [pageIndex, pageSize, sort, query, total]\r\n    // )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Company Name',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n          \r\n            {\r\n                header: 'Contact Person Name ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            \r\n           \r\n            {\r\n                header: 'Number Of Contracts',\r\n                accessorKey: 'tp',\r\n               \r\n                cell: (props) => {\r\n                    const { tp } = props.row.original\r\n                    return (\r\n                        <p>{tp?.tpTitle}</p>\r\n                    )\r\n                },\r\n               \r\n            },\r\n            {\r\n                header: 'Commision generated ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Email ID ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Phone Number ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'solItemType',\r\n               \r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            />\r\n                            <span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {ItemStatusColor[0].label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                header: 'Actions ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n         \r\n          \r\n        ],\r\n        []\r\n    )\r\n\r\n    // const onPaginationChange = (page) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.pageIndex = page\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onSelectChange = (value) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.pageSize = Number(value)\r\n    //     newTableData.pageIndex = 1\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onSort = (sort) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.sort = sort\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onRowSelect = (checked, row) => {\r\n    //     if (checked) {\r\n    //         dispatch(addRowItem([row.id]))\r\n    //     } else {\r\n    //         dispatch(removeRowItem(row.id))\r\n    //     }\r\n    // }\r\n\r\n    // const onAllRowSelect = useCallback(\r\n    //     (checked, rows) => {\r\n    //         if (checked) {\r\n    //             const originalRows = rows.map((row) => row.original)\r\n    //             const selectedIds = []\r\n    //             originalRows.forEach((row) => {\r\n    //                 selectedIds.push(row.id)\r\n    //             })\r\n    //             dispatch(setSelectedRows(selectedIds))\r\n    //         } else {\r\n    //             dispatch(setSelectedRows([]))\r\n    //         }\r\n    //     },\r\n    //     [dispatch]\r\n    // )\r\n\r\n    return (\r\n        <DataTable\r\n            // ref={tableRef}\r\n            columns={columns}\r\n            // data={data}\r\n            // loading={loading}\r\n            // pagingData={tableData}\r\n            // onPaginationChange={onPaginationChange}\r\n            // onSelectChange={onSelectChange}\r\n            // onSort={onSort}\r\n            // onCheckBoxChange={onRowSelect}\r\n            // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            // selectable\r\n        />\r\n    )\r\n}\r\n\r\nexport default TopProvidersTable\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// TopProvidersTable","\r\n\r\n\r\nimport React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, Form, Formik } from 'formik'\r\n\r\nimport {\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Radio,\r\n    FormItem,\r\n    FormContainer,\r\n    Drawer,\r\n    Select,\r\n} from 'components/ui'\r\nimport TopCustomersTableSearch from '../TopCustomers/TopCustomersTableSearch'\r\nimport TopCustomersFilter from '../TopCustomers/TopCustomersFilter'\r\n\r\n\r\nconst TopWarehousesTableTools = () => {\r\n\r\n\r\n    const formFieldsType = [\r\n        { label: 'Text Field', value: 'TF' },\r\n        { label: 'Text Area', value: 'TA' },\r\n        { label: 'Drop Down', value: 'DD' },\r\n        { label: 'Radio Button', value: 'RB' },\r\n        { label: 'Check Boxes', value: 'CB' },\r\n        { label: 'CK Editor', value: 'CK' },\r\n      ]\r\n    return (\r\n        <>\r\n            \r\n                    <div className=\"flex justify-end  flex-col lg:flex-row lg:items-center\">\r\n                        <TopCustomersTableSearch />\r\n                        < TopCustomersFilter/>\r\n                        <Link\r\n                            className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                            target=\"_blank\"\r\n                            download\r\n                        >\r\n                            <Button block size=\"sm\" icon={<HiDownload />}>\r\n                                Export\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n\r\n              \r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopWarehousesTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\nconst ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst ActionColumn = ({ row }) => {\r\n   \r\n\r\n    return (\r\n        <div className=\"text-lg\">\r\n        <Tooltip title=\"Edit\">\r\n            <span\r\n                className={`cursor-pointer p-1 text-blue-500 hover:${\"textTheme\"}`}\r\n                // onClick={onView}\r\n            >\r\n                <MdModeEdit />\r\n               \r\n            </span>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Assign\">\r\n            <span\r\n                className={`cursor-pointer p-1  hover:${\"textTheme\"}`}\r\n                // onClick={onView}\r\n            >\r\n                <AiFillCopy/>\r\n            </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"View\">\r\n            <span\r\n                className={`cursor-pointer p-1 text-blue-500 hover:${\"textTheme\"}`}\r\n                // onClick={onView}\r\n            >\r\n                <HiOutlineEye />\r\n            </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n            <span\r\n                className=\"cursor-pointer p-1 text-green-800 hover:text-green-800\" \r\n                // onClick={onDelete}\r\n            >\r\n                <RiCheckboxCircleFill />\r\n            </span>\r\n        </Tooltip>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst TopWarehousesTable = () => {\r\n\r\n    // const tableRef = useRef(null)\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n    //     (state) => state.doctypeList.data.tableData\r\n    // )\r\n    // const loading = useSelector((state) => state.doctypeList.data.loading)\r\n\r\n    // const data = useSelector((state) => state.doctypeList.data.ItemList)\r\n    // const fetchData = useCallback(() => {\r\n    //     // dispatch(getItems())\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(setSelectedRows([]))\r\n    //     fetchData()\r\n    // }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    // useEffect(() => {\r\n    //     if (tableRef) {\r\n    //         tableRef.current?.resetSelected()\r\n    //     }\r\n    // }, [data])\r\n\r\n    // const tableData = useMemo(\r\n    //     () => ({ pageIndex, pageSize, sort, query, total }),\r\n    //     [pageIndex, pageSize, sort, query, total]\r\n    // )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Warehouse Name',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n          \r\n            {\r\n                header: 'Location ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            \r\n           \r\n            {\r\n                header: 'Work Order',\r\n                accessorKey: 'tp',\r\n               \r\n                cell: (props) => {\r\n                    const { tp } = props.row.original\r\n                    return (\r\n                        <p>{tp?.tpTitle}</p>\r\n                    )\r\n                },\r\n               \r\n            },\r\n            {\r\n                header: 'Capacity ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Inventory ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Description',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'solItemType',\r\n               \r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            />\r\n                            <span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {ItemStatusColor[0].label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                header: 'Actions ',\r\n                accessorKey: 'itemTitle',\r\n                \r\n               \r\n            },\r\n         \r\n          \r\n        ],\r\n        []\r\n    )\r\n\r\n    // const onPaginationChange = (page) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.pageIndex = page\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onSelectChange = (value) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.pageSize = Number(value)\r\n    //     newTableData.pageIndex = 1\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onSort = (sort) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.sort = sort\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onRowSelect = (checked, row) => {\r\n    //     if (checked) {\r\n    //         dispatch(addRowItem([row.id]))\r\n    //     } else {\r\n    //         dispatch(removeRowItem(row.id))\r\n    //     }\r\n    // }\r\n\r\n    // const onAllRowSelect = useCallback(\r\n    //     (checked, rows) => {\r\n    //         if (checked) {\r\n    //             const originalRows = rows.map((row) => row.original)\r\n    //             const selectedIds = []\r\n    //             originalRows.forEach((row) => {\r\n    //                 selectedIds.push(row.id)\r\n    //             })\r\n    //             dispatch(setSelectedRows(selectedIds))\r\n    //         } else {\r\n    //             dispatch(setSelectedRows([]))\r\n    //         }\r\n    //     },\r\n    //     [dispatch]\r\n    // )\r\n\r\n    return (\r\n        <DataTable\r\n            // ref={tableRef}\r\n            columns={columns}\r\n            // data={data}\r\n            // loading={loading}\r\n            // pagingData={tableData}\r\n            // onPaginationChange={onPaginationChange}\r\n            // onSelectChange={onSelectChange}\r\n            // onSort={onSort}\r\n            // onCheckBoxChange={onRowSelect}\r\n            // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            // selectable\r\n        />\r\n    )\r\n}\r\n\r\nexport default TopWarehousesTable\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react'\r\nimport { Tabs } from 'components/ui'\r\nimport TopCustomersTableTool from './TopCustomers/TopCustomersTableTool'\r\nimport TopCustomersTable from './TopCustomers/TopCustomersTable'\r\nimport TopProvidersTableTools from './TopProviders/TopProvidersTableTools'\r\nimport TopProvidersTable from './TopProviders/TopProvidersTable'\r\nimport TopWarehousesTableTools from './TopWarehouses/TopWarehousesTableTools'\r\nimport TopWarehousesTable from './TopWarehouses/TopWarehousesTable'\r\n\r\nconst { TabNav, TabList, TabContent } = Tabs\r\n\r\nconst Default = () => {\r\n    return (\r\n        <div>\r\n            <Tabs defaultValue=\"topCustomers\">\r\n                <TabList>\r\n                    <TabNav value=\"topCustomers\">Top Customers</TabNav>\r\n                    <TabNav value=\"topProviders\">Top Providers</TabNav>\r\n                    <TabNav value=\"topWarehouses\">Top Warehouses</TabNav>\r\n                </TabList>\r\n                <div className=\"p-4\">\r\n                    <TabContent value=\"topCustomers\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                        <h3 className=\"mb-4 lg:mb-0\"></h3>\r\n                            <TopCustomersTableTool/>\r\n                        </div>\r\n                        <TopCustomersTable/>\r\n                    </TabContent>\r\n                    <TabContent value=\"topProviders\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                        <h3 className=\"mb-4 lg:mb-0\"></h3>\r\n                            <TopProvidersTableTools />\r\n\r\n                        </div>\r\n                        <TopProvidersTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"topWarehouses\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                        <h3 className=\"mb-4 lg:mb-0\"></h3>\r\n                            <TopWarehousesTableTools />\r\n                        </div>\r\n                        <TopWarehousesTable/>\r\n                    </TabContent>\r\n\r\n\r\n                </div>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Default\r\n\r\n","import { Chart } from 'components/shared'\r\nimport React from 'react'\r\nimport { COLORS } from 'constants/chart.constant'\r\n\r\nimport DashboardTab from \"./DashboardTab\"\r\n// import {BsActivity} from \"react-icons/bs\";\r\n// import { BsActivity } from \"react-icons/bs\";\r\n\r\n\r\nfunction Dashboard() {\r\n    let arr = [\r\n\r\n        { Title: \"New Orders\", Orders: \"5,195\", Name: \"orders\", colorClass: \"text-green-700 \",src:\"/img/avatars/Vector (1).png\" },\r\n        { Title: \"Yet to dispath\", Orders: \"7,829\", Name: \"orders\", colorClass: \"text-orange-500 \",src:\"/img/avatars/Vector (2).png\" },\r\n        { Title: \"In trnsit\", Orders: \"3,490\", Name: \"orders\", colorClass: \"text-orange-500 \",src:\"/img/avatars/Vector (2).png\" },\r\n        { Title: \"Delivered\", Orders: \"5,946\", Name: \"orders\", colorClass: \"text-green-700\",src:\"/img/avatars/Vector (1).png\"},\r\n        { Title: \"Cancelled\", Orders: \"1,141\", Name: \"orders\", colorClass: \"text-red-600\",src:\"/img/avatars/Vectorred.png\" },\r\n        { Title: \"Replaced\", Orders: \"895\", Name: \"orders\", colorClass: \"text-green-700 \",src:\"/img/avatars/Vector (1).png\" }\r\n\r\n    ]\r\n\r\n\r\n    const data = [\r\n        {\r\n            name: 'Last week',\r\n            data: [44, 55, 57, 56, 61, 58],\r\n        },\r\n        {\r\n            name: 'previous 4 week average',\r\n            data: [35, 41, 36, 26, 45, 48],\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n        \r\n\r\n\r\n\r\n            <div style={{ backgroundColor: \"#f5f5f5\" }} className='h-auto  w-auto  p-5 ' >\r\n                <div className='card p-6 pl-4 '>\r\n                    <p className='text-black font-bold'>Status-wise order count</p>\r\n                    <div className='  w-auto grid grid-cols-6 gap-6 h-24 mt-2  '>\r\n\r\n\r\n                        {\r\n\r\n                            arr.map((data) => {\r\n                                return (\r\n                                    <>\r\n\r\n                                        <div className=' p-3 pl-6 border-2   '>\r\n                                            <div className=' flex justify-between'>\r\n                                                <p className='text-black'>{data.Title}</p>\r\n                                                <p className='mr-4'><img src={data.src}/></p>\r\n                                            </div>\r\n                                            <div className=' mt-4 w-44  flex truncate '>\r\n                                                <h3  className=\"font-bold\" class={data.colorClass} >{data.Orders}</h3>\r\n                                                <p className='mt-1 ml-1 truncate  text-lg  '>{data.Name}</p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* barchart div start here  */}\r\n\r\n                <div className='grid grid-cols-12 gap-4 mt-6'>\r\n                    <div className=\"col-span-8\">\r\n\r\n                        <div className='card h-auto  w-full p-6'>\r\n                            <p className='text-black text-sm font-bold'>Recent Order</p>\r\n                            <Chart className=\"w-full\"\r\n                                options={{\r\n                                   \r\n                                    plotOptions: {\r\n                                        bar: {\r\n                                            horizontal: false,\r\n                                            columnWidth: '25%',\r\n                                            \r\n                                           \r\n                                        },\r\n                                    },\r\n                                   \r\n                                    // colors: [\"#ffb84d\"],\r\n                                    dataLabels: {\r\n                                        enabled: false,\r\n                                    },\r\n                                    stroke: {\r\n                                        show: true,\r\n                                        // width: 2,\r\n                                        colors: [''],\r\n                                    },\r\n                                    xaxis: {\r\n                                        colors: [\"#ffb84d\"],\r\n                                        categories: [\r\n                                            '12am-4am',\r\n                                            '4am-8am',\r\n                                            '8am-12pm',\r\n                                            '12pm-4pm',\r\n                                            '4pm-8pm',\r\n                                            '8pm-12am',\r\n                                           \r\n                                        ],\r\n                                    },\r\n                                    fill: {\r\n                                        opacity: 1,\r\n                                    },\r\n                                    tooltip: {\r\n                                        // y: {\r\n                                        //     formatter: (val) => `$${val} thousands`,\r\n                                        // },\r\n                                    },\r\n                                }}\r\n                                series={data}\r\n                                height={\"290\"}\r\n                                type=\"bar\"\r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className='card h-auto w-full mt-6  pl-4 pt-3'>\r\n                            <div className='grid grid-cols-12'>\r\n                                <h4 className='col-span-10'>Frequently ordered</h4>\r\n                                <p class='text-end bg-gray-600 flex justify-center  border-2 text-centre text-white'>View All</p>\r\n                            </div>\r\n\r\n                            <div className='p-2 grid grid-cols-2'>\r\n                                {/* first */}\r\n                                <div className='flex gap-4 p-2  mb-4'>\r\n                                    <div className='bg-gray-200  h-10 w-10 py-1  mt-3 flex justify-center'>\r\n                                        <img src={'/img/avatars/image 119.png'}/>\r\n                                    </div>\r\n                                    <div className='w-52 truncate' >\r\n                                        <h6>Goole Home</h6>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgytjtgjh</p>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfjhgjhjjj</p>\r\n                                    </div>\r\n                                    <div className='mt-6 ml-6 flex gap-2' >\r\n                                        <p className='text-sky-600 font-bold'>4,999 </p><p className='text-black'>INR</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* second */}\r\n                                <div className='flex gap-4 p-2 '>\r\n                                <div className='bg-gray-200  h-10 w-10 p-1  mt-3 flex justify-center'>\r\n                                        <img src={'/img/avatars/image 50.png'}/>\r\n                                    </div>\r\n                                    <div className='w-52 truncate' >\r\n                                        <h6>Google Home Mini</h6>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgjhgjytj</p>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgrtytdhty</p>\r\n                                    </div>\r\n                                    <div className='mt-6 ml-6 flex gap-2' >\r\n                                        <p className='text-sky-600 font-bold'>4,999 </p><p className='text-black'>INR</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* third  */}\r\n                                <div className='flex gap-4 p-2 mb-4'>\r\n                                <div className='bg-gray-200  h-10 w-10  mt-3 flex justify-center'>\r\n                                        <img src={'/img/avatars/image 55.png'}/>\r\n                                    </div>\r\n                                    <div className='w-52 truncate' >\r\n                                        <h6>Amazon Echo Show Bdsdundleeeeegdgsth</h6>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgjytjyt</p>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfghgjhjf</p>\r\n                                    </div>\r\n                                    <div className='mt-6 ml-6 flex gap-2' >\r\n                                        <p className='text-sky-600 font-bold'>4,999 </p><p className='text-black'>INR</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* fourth */}\r\n                                <div className='flex gap-4 p-2 mb-4'>\r\n                                <div className='bg-gray-200  h-10 w-10  mt-3 flex justify-center'>\r\n                                        <img src={'/img/avatars/image 40.png'}/>\r\n                                    </div>\r\n                                    <div className='w-52 truncate' >\r\n                                        <h6>Smart Door Lock bundle</h6>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgjjfj</p>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgjuyj</p>\r\n                                    </div>\r\n                                    <div className='mt-6 ml-6 flex gap-2' >\r\n                                        <p className='text-sky-600 font-bold'>4,999 </p><p className='text-black'>INR</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* fifth */}\r\n                                <div className='flex gap-4 p-2 mb-4'>\r\n                                <div className='bg-gray-200  h-10 w-10  mt-3 flex justify-center'>\r\n                                        <img src={'/img/avatars/image 38.png'}/>\r\n                                    </div>\r\n                                    <div className='w-52 truncate' >\r\n                                        <h6>Wireless Smart home..</h6>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgyjtyu</p>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgjyujj</p>\r\n                                    </div>\r\n                                    <div className='mt-6 ml-6 flex gap-2' >\r\n                                        <p className='text-sky-600 font-bold'>4,999 </p><p className='text-black'>INR</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* sixth */}\r\n                                <div className='flex gap-4 p-2 mb-4'>\r\n                                <div className='bg-gray-200  h-10 w-10  mt-3 flex justify-center'>\r\n                                        <img src={'/img/avatars/image 41.png'}/>\r\n                                    </div>\r\n                                    <div className='w-52 truncate' >\r\n                                        <h6>Satin Nikel Smart lock</h6>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgyuj</p>\r\n                                        <p className='text-[12px]'>Lorum 20idygfkbsdfsdukyfgjyu</p>\r\n                                    </div>\r\n                                    <div className='mt-6 ml-6 flex gap-2' >\r\n                                        <p className='text-sky-600 font-bold'>4,999 </p><p className='text-black'>INR</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='card ml-3 col-span-4  '>put map here</div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                {/* table div start here  */}\r\n\r\n                <div className='card mt-6'>\r\n                    <DashboardTab />\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","\r\nimport React from 'react'\r\nimport { Tabs } from 'components/ui'\r\nimport OrdersTable from './OrdersTable'\r\nimport OrdersTableTools from './OrdersTableTools'\r\nimport CancelledOrdersTable from './CancelledOrdersTable'\r\nimport ReplacedOrdersTable from './ReplacedOrdersTable'\r\nimport OrderDeleteConfirmation from './OrdersDeleteConfirmation'\r\nimport OrderOverview from './OrderOverview'\r\nimport OrderOverviewHeaderActions from './OrderOverviewHeaderActions'\r\nimport Dashboard from './dashboard/Dashboard'\r\n\r\nconst { TabNav, TabList, TabContent } = Tabs\r\n\r\nconst Default = () => {\r\n    return (\r\n        <div>\r\n            <Tabs defaultValue=\"dashboard\">\r\n                <TabList>\r\n                    <TabNav value=\"dashboard\">Dashboard</TabNav>\r\n                    <TabNav value=\"orders\">Orders</TabNav>\r\n                    <TabNav value=\"cancelledOrders\">Cancelled Orders</TabNav>\r\n                    <TabNav value=\"replacedOrders\">Replaced Orders</TabNav>\r\n                </TabList>\r\n                <div className=\"p-4\">\r\n                <TabContent value=\"dashboard\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            {/* <h3 className=\"mb-4 lg:mb-0\">Dashboard</h3> */}\r\n                            {/* <OrdersTableTools /> */}\r\n                        </div>\r\n                        <Dashboard/>\r\n                        \r\n                    </TabContent>\r\n                    <TabContent value=\"orders\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Orders</h3>\r\n                            <OrdersTableTools />\r\n                        </div>\r\n                        <OrdersTable />\r\n                        <OrderDeleteConfirmation />\r\n                    </TabContent>\r\n                    <TabContent value=\"cancelledOrders\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Cancelled Orders</h3>\r\n                            <OrdersTableTools />\r\n                        </div>\r\n                        <CancelledOrdersTable />\r\n                        <OrderDeleteConfirmation />\r\n                    </TabContent>\r\n                    <TabContent value=\"replacedOrders\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Replaced Orders</h3>\r\n                            <OrdersTableTools />\r\n                        </div>\r\n                        <ReplacedOrdersTable />\r\n                        <OrderDeleteConfirmation />\r\n                    </TabContent>\r\n                </div>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Default\r\n\r\n","import React from 'react'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store/index'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport OrdersTabs from './components/OrdersTabs'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\n\r\ninjectReducer('salesOrderList', reducer)\r\n\r\nconst Orders = () => {\r\n    const breadCrumbList=[{\r\n        name:'Home',\r\n        link:\"/home\"\r\n        },{\r\n            name:'Orders'\r\n        }]\r\n    return (\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n            <CustomBreadcrumbs list={breadCrumbList}/>\r\n            <OrdersTabs />\r\n        </AdaptableCard>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n"],"names":["combineReducers","state","data","size","className","icon","onClick","ref","placeholder","prefix","onChange","value","label","useState","selectedValue","setSelectedValue","target","download","block","find","obj","options","e","ItemStatusColor","dotClass","textClass","ActionColumn","row","title","columns","useMemo","header","id","cell","props","original","accessorKey","tp","tpTitle","TabNav","Tabs","TabList","TabContent","defaultValue","style","backgroundColor","Title","Orders","Name","colorClass","src","map","class","plotOptions","bar","horizontal","columnWidth","dataLabels","enabled","stroke","show","colors","xaxis","categories","fill","opacity","tooltip","series","name","height","type","DashboardTab","OrdersTableTools","OrdersTable","CancelledOrdersTable","ReplacedOrdersTable","injectReducer","reducer","bodyClass","list","link","OrdersTabs"],"sourceRoot":""}