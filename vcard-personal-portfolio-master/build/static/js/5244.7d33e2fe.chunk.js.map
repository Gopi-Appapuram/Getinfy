{"version":3,"file":"static/js/5244.7d33e2fe.chunk.js","mappings":"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","sources":["views/masterData/pages/store/stateSlice.js","views/masterData/pages/store/index.js","views/masterData/pages/components/PagesTable.js","views/masterData/pages/components/PagesTableSearch.js","views/masterData/pages/components/PagesTableTools.js","views/masterData/pages/index.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/toNumber.js"],"sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'Pages/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React from 'react'\r\nimport { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Button, Dialog, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setTableData, getItems, getPagesList } from '../store/dataSlice'\r\nimport {\r\n  setSelectedRows,\r\n  addRowItem,\r\n  removeRowItem,\r\n  setDeleteMode,\r\n  setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { RiCheckboxCircleFill, RiCloseCircleFill, RiCheckboxBlankCircleFill } from 'react-icons/ri'\r\n// import { getItems } from 'views/accounts/PendingApproval/store/dataSlice'\r\nimport { BsPatchCheckFill } from 'react-icons/bs'\r\nimport GetDropdownLabel, { OpenNotification, snakeToCamel } from 'views/Servicefile'\r\nimport { apiUpdatePageStatus } from 'services/PagesService'\r\n\r\nconst ItemStatusColor = {\r\n  'ACTIVE': {\r\n    label: 'Active',\r\n    dotClass: 'bg-black-500',\r\n    textClass: 'text-black-500',\r\n    backgroundColor: 'bg-[#F5F5F5]'\r\n  },\r\n  'SUBMITTED': {\r\n    label: 'Submitted',\r\n    dotClass: 'bg-blue-500',\r\n    textClass: 'text-black-500',\r\n    backgroundColor: 'bg-[#F0F7FF]'\r\n  },\r\n  'IN_ACTIVE': { label: 'Inactive', dotClass: 'bg-blue-500', textClass: 'text-black-500', backgroundColor: 'bg- [#F5F5F5]' },\r\n}\r\n\r\nconst ItemColumn = ({ row }) => {\r\n  const { textTheme } = useThemeClass()\r\n  const navigate = useNavigate()\r\n\r\n  const onView = useCallback(() => {\r\n    navigate(`/app/sales/Item-details/${row.id}`)\r\n  }, [navigate, row])\r\n\r\n  return (\r\n    <span\r\n      className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n      onClick={onView}\r\n    >\r\n      #{row.id}\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\nfunction PagesTable({ actionPermissions }) {\r\n\r\n\r\n  const [isDeactivate, setDeactivate] = useState(false)\r\n\r\n\r\n  const tableRef = useRef(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const { pageIndex, pageSize, sort, query, total, sort_field, order } = useSelector(\r\n    (state) => state.Pages.data.tableData\r\n  )\r\n  const loading = useSelector((state) => state.Pages.data.loading)\r\n\r\n  const [row, setRow] = useState('')\r\n\r\n  const data = useSelector((state) => state.Pages.data.pagesList.res)\r\n\r\n  const totalCount = useSelector((state) => state.Pages.data.pagesList.total)\r\n\r\n\r\n  const fetchData = useCallback(() => {\r\n    dispatch(getItems())\r\n  }, [])\r\n\r\n  const ActionColumn = ({ row }) => {\r\n\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onEdit = useCallback(() => {\r\n      navigate(`/masterDataMenu-pages-add`, { state: { data: row, mode: \"EDIT\" } })\r\n    }, [navigate, row])\r\n\r\n\r\n    const handleClick = () => {\r\n      setDeactivate(true);\r\n      setRow(row);\r\n    };\r\n\r\n    const iconColor = row.page_status !== \"ACTIVE\" ? \"green\" : \"rose\";\r\n    const IconComponent = row.page_status !== \"ACTIVE\" ? RiCheckboxCircleFill : RiCloseCircleFill;\r\n\r\n    const disableIconStyle = { color: 'grey', pointerEvents: 'none' }\r\n    const { canAdd, canEdit, canView, canActivate, canClone, canApprove } =\r\n      actionPermissions\r\n\r\n    return (\r\n      <div className=\"text-lg\">\r\n        <Tooltip title=\"Edit\">\r\n          <span\r\n            className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n            onClick={onEdit} style={canEdit ? null : disableIconStyle}\r\n          >\r\n            <MdModeEdit />\r\n\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={`${row.page_status !== \"ACTIVE\" ? \"Activate\" : \"Deactivate\"}`}>\r\n          <span\r\n            className={`cursor-pointer p-1 text-${iconColor}-800 hover:text-${iconColor}-800`}\r\n            onClick={handleClick} style={canActivate ? null : disableIconStyle}\r\n          >\r\n            <IconComponent />\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  //   const {\r\n  //     acc_mno_id\r\n  // } = useSelector((state) => state?.auth?.user)\r\n\r\n\r\n  const updatePagesStatus = async () => {\r\n\r\n\r\n    let isStatus = row.page_status === \"ACTIVE\" ? \"IN_ACTIVE\" : \"ACTIVE\";\r\n    const resp = await apiUpdatePageStatus(row.id, isStatus);\r\n    if (resp.data.success && isStatus === \"ACTIVE\") {\r\n      setDeactivate(false)\r\n      OpenNotification('success', 'Activated successfully')\r\n\r\n    }\r\n    else if (resp.data.success && isStatus === \"IN_ACTIVE\") {\r\n      setDeactivate(false)\r\n\r\n      OpenNotification('success', 'Deactivated successfully')\r\n\r\n    }\r\n  }\r\n\r\n  const parentAccountList = useSelector((state) => state.Pages?.data?.parentAccountList)\r\n\r\n\r\n  useEffect(() => {\r\n    // dispatch(setSelectedRows([]))\r\n\r\n    const fetchData = async () => {\r\n      dispatch(getPagesList({ page_no: pageIndex - 1, page_size: pageSize, sort_field: sort_field ? sort_field : 'id', order: order }))\r\n    };\r\n\r\n\r\n    fetchData()\r\n  }, [dispatch, fetchData, pageIndex, pageSize, sort, query, isDeactivate, sort_field, order])\r\n\r\n  useEffect(() => {\r\n    if (tableRef) {\r\n      tableRef.current?.resetSelected()\r\n    }\r\n  }, [data])\r\n\r\n  const tableData = useMemo(\r\n    () => ({ pageIndex, pageSize, sort, query, total: totalCount }),\r\n    [pageIndex, pageSize, sort, query, totalCount]\r\n  )\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        header: 'Actions',\r\n        id: 'action',\r\n\r\n        cell: (props) => <ActionColumn row={props.row.original} />,\r\n      },\r\n      // {\r\n      //   header: 'Operator',\r\n      //   accessorKey: 'acc_name',\r\n        // cell:(props) => {\r\n        //     const {operator} = props.row.original\r\n        //     return(\r\n        //         <span>{GetDropdownLabel(operator, parentAccountList)}</span>\r\n        //     )\r\n        // }\r\n      // },\r\n      {\r\n        header: 'Page Title',\r\n        accessorKey: 'meta_title',\r\n      },\r\n      {\r\n        header: 'Current Status',\r\n        accessorKey: 'page_status',\r\n\r\n        cell: (props) => {\r\n          const { page_status } = props.row.original\r\n\r\n\r\n          return (\r\n            <div className=\"flex items-center\">\r\n              <span className={`flex ml-2 rtl:mr-2 capitalize font-semibold rounded-full border ${ItemStatusColor[page_status]?.backgroundColor} mt-4 px-2 py-1 text-${ItemStatusColor[page_status]?.dotClass}`}>\r\n                {page_status === 'ACTIVE' && <RiCheckboxCircleFill className=\"mt-1 mr-2 text-[#3B8C59]\" />}\r\n                {page_status === 'IN_ACTIVE' && <RiCloseCircleFill className=\"mt-1 mr-2 text-[#FF0000]\" />}\r\n                {page_status === 'SUBMITTED' && <BsPatchCheckFill className=\"mt-1 mr-2 text-blue-500\" />}\r\n                {ItemStatusColor[page_status]?.label}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n    ],\r\n    []\r\n  )\r\n\r\n  const onPaginationChange = (page) => {\r\n    const newTableData = cloneDeep(tableData)\r\n    newTableData.pageIndex = page\r\n    dispatch(setTableData(newTableData))\r\n  }\r\n\r\n  const onSelectChange = (value) => {\r\n    const newTableData = cloneDeep(tableData)\r\n    newTableData.pageSize = Number(value)\r\n    newTableData.pageIndex = 1\r\n    dispatch(setTableData(newTableData))\r\n  }\r\n\r\n  const onSort = (sort) => {\r\n    const newTableData = cloneDeep(tableData)\r\n    const sortfield = snakeToCamel(sort.key)\r\n    newTableData[\"sort_field\"] = sortfield;\r\n    newTableData[\"order\"] = sort.order;\r\n    dispatch(setTableData(newTableData))\r\n  }\r\n\r\n  const onRowSelect = (checked, row) => {\r\n    if (checked) {\r\n      dispatch(addRowItem([row.id]))\r\n    } else {\r\n      dispatch(removeRowItem(row.id))\r\n    }\r\n  }\r\n\r\n  const onAllRowSelect = useCallback(\r\n    (checked, rows) => {\r\n      if (checked) {\r\n        const originalRows = rows.map((row) => row.original)\r\n        const selectedIds = []\r\n        originalRows.forEach((row) => {\r\n          selectedIds.push(row.id)\r\n        })\r\n        dispatch(setSelectedRows(selectedIds))\r\n      } else {\r\n        dispatch(setSelectedRows([]))\r\n      }\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n\r\n  return (\r\n    <>\r\n      <DataTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        data={data}\r\n        loading={loading}\r\n        pagingData={tableData}\r\n        onPaginationChange={onPaginationChange}\r\n        onSelectChange={onSelectChange}\r\n        onSort={onSort}\r\n        onCheckBoxChange={onRowSelect}\r\n        onIndeterminateCheckBoxChange={onAllRowSelect}\r\n      selectable\r\n      />\r\n      <Dialog\r\n        isOpen={isDeactivate}\r\n        onClose={() => setDeactivate(false)}\r\n      >\r\n        <h6\r\n          style={{\r\n            fontStyle: 'normal',\r\n            fontSize: '18px',\r\n          }}\r\n        >{row.page_status !== 'ACTIVE' ? `Activate` : `Deactivate`}</h6>\r\n        <hr className='text-gary-500 mt-4 mb-4' />\r\n        <p>{row.page_status !== 'ACTIVE'\r\n          ? `Are you sure you want to activate this page ?`\r\n          : `Are you sure you want to deactivate this page ?`}</p>\r\n        <div className='mt-6 text-end'>\r\n          <Button style={{ backgroundColor: \"#4D4D4D\", color: \"white\" }} className='mr-3'\r\n            onClick={() => setDeactivate(false)}\r\n          >No</Button>\r\n          <Button variant='solid'\r\n            onClick={() => updatePagesStatus()}\r\n          >Yes</Button>\r\n        </div>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PagesTable","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPagesList, setTableData } from '../store/dataSlice'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst PagesTableSearch = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n    const tableData = useSelector(\r\n        (state) => state.Pages.data.tableData\r\n    )\r\n\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n\r\n    const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n \r\n \r\n   function handleDebounceFn(val) {\r\n        const newTableData = cloneDeep(tableData)  \r\n        newTableData.page_no = tableData.pageIndex-1\r\n        newTableData.page_size = tableData.pageSize\r\n        // newTableData.unq_id=enterAccount\r\n        newTableData.sort_field=tableData.sort_field\r\n\r\n     \r\n        if (typeof val === 'string' && val.length > 1) {\r\n            fetchData(newTableData)\r\n        }\r\n\r\n        if (typeof val === 'string' && val.length === 0) {\r\n            fetchData(newTableData)\r\n        }\r\n    }\r\n\r\n    const fetchData = (data) => {\r\n        dispatch(setTableData(data))\r\n        dispatch(getPagesList(data))\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        debounceFn(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PagesTableSearch\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    // Input,\r\n    Button,\r\n} from 'components/ui'\r\nimport PagesTableSearch from './PagesTableSearch'\r\n\r\n\r\nconst PagesTableTools = ({ actionPermissions }) => {\r\n    const { canAdd } = actionPermissions\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            {/* <ProductCategoryTableSearch /> */}\r\n            <PagesTableSearch />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                to=\"/masterDataMenu-pages-add\"\r\n            >\r\n                <Button block variant=\"solid\"\r\n                    disabled={!canAdd}\r\n                    style={{\r\n                        fontStyle: 'normal',\r\n                    }}\r\n                    className='flex justify-center pt-[6px] gap-1'\r\n                    size=\"sm\" >\r\n                    <p className='pt-[2px]'><HiPlusCircle /></p>\r\n                    Add Pages\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PagesTableTools\r\n","import React, { useState } from 'react'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store/index'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport PagesTable from './components/PagesTable'\r\nimport PagesTableTools from './components/PagesTableTools'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\ninjectReducer('Pages', reducer)\r\n\r\nconst Pages = () => {\r\n    const { permissionsList } = useSelector((state) => state.auth.user)\r\n    const [canAdd, setCanAdd] = useState(permissionsList.includes('MSDPGEADD'))\r\n    const [canEdit, setCanEdit] = useState(\r\n        permissionsList.includes('MSDPGEEDI')\r\n    )\r\n    const [canView, setCanView] = useState(permissionsList.includes('MSDPGEVIE'))\r\n    const [canActivate, setCanActivate] = useState(permissionsList.includes('MSDPGEDEA'))\r\n    const [canClone, setCanClone] = useState(permissionsList.includes('MSDPGECLO'))\r\n    const [canApprove, setCanApprove] = useState(permissionsList.includes('MSDPGEAPP'))\r\n\r\n\r\n    const actionPermissions = {\r\n        canAdd,\r\n        canEdit,\r\n        canClone,\r\n        canView,\r\n        canActivate,\r\n        canApprove,\r\n    }\r\n    return (\r\n        <>\r\n        {/* <div>Master Data / Pages</div> */}\r\n        <AdaptableCard className=\"h-full mt-4\" bodyClass=\"h-full\">\r\n            <div className=\"lg:flex items-center justify-between mb-4\">\r\n                <h3 className=\"mb-4 lg:mb-0\">Pages</h3>\r\n                {/* <ProductCategoryTableTools/> */}\r\n                <PagesTableTools actionPermissions={actionPermissions}/>\r\n            </div>\r\n            {/* <ProductCategoryTable /> */}\r\n            <PagesTable actionPermissions={actionPermissions}/>\r\n        </AdaptableCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pages","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["stateSlice","createSlice","name","initialState","selectedRows","selectedRow","deleteMode","reducers","setSelectedRows","state","action","payload","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","id","setDeleteMode","actions","toggleDeleteConfirmation","combineReducers","data","ItemStatusColor","label","dotClass","textClass","backgroundColor","actionPermissions","useState","isDeactivate","setDeactivate","tableRef","useRef","dispatch","useDispatch","useSelector","Pages","tableData","pageIndex","pageSize","sort","query","sort_field","total","order","loading","row","setRow","pagesList","res","totalCount","fetchData","useCallback","getItems","ActionColumn","textTheme","useThemeClass","navigate","useNavigate","onEdit","mode","iconColor","page_status","IconComponent","RiCheckboxCircleFill","RiCloseCircleFill","disableIconStyle","color","pointerEvents","canEdit","canAdd","canActivate","canView","canClone","canApprove","className","title","onClick","style","updatePagesStatus","isStatus","apiUpdatePageStatus","resp","success","OpenNotification","parentAccountList","useEffect","getPagesList","page_no","page_size","resetSelected","useMemo","columns","header","cell","props","original","accessorKey","onAllRowSelect","checked","rows","originalRows","map","selectedIds","forEach","push","ref","pagingData","onPaginationChange","page","newTableData","cloneDeep","setTableData","onSelectChange","value","Number","onSort","sortfield","snakeToCamel","key","onCheckBoxChange","onIndeterminateCheckBoxChange","selectable","isOpen","onClose","fontStyle","fontSize","variant","searchInput","auth","user","debounceFn","enterAccount","password","rememberMe","usernameOrEmail","debounce","val","length","size","placeholder","prefix","onChange","e","target","download","block","icon","to","disabled","injectReducer","reducer","permissionsList","bodyClass","trimmedEndIndex","require","reTrimStart","module","exports","string","slice","replace","reWhitespace","index","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}