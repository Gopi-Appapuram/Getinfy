{"version":3,"file":"static/js/7557.79d2c48f.chunk.js","mappings":"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","sources":["views/masterData/events/components/AddEvents.js","views/masterData/events/components/EventsConfig.js","views/masterData/events/components/EvnetsPreview.js","views/masterData/events/components/StepControlled.js","views/masterData/events/components/NewEvents.js"],"sourcesContent":["import { AdaptableCard, RichTextEditor } from 'components/shared'\r\nimport React from 'react'\r\nimport {\r\n  Input,\r\n  FormItem,\r\n  FormContainer,\r\n\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\n\r\nconst AddEvents = () => {\r\n  return (\r\n    <div className=\"p-5\" style={{backgroundColor:\"#F5F5F5\"}}>\r\n      <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" divider>\r\n        <Formik\r\n          initialValues={{}}\r\n          validationSchema={{}}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(true)\r\n\r\n          }}\r\n        >\r\n          {({ values, touched, errors, isSubmitting }) => {\r\n            return (\r\n              <Form>\r\n                <FormContainer>\r\n                  <div className=\"md:grid grid-cols-3 gap-3 mx-4 pt-2 pl-2\">\r\n                    <FormItem\r\n                      label=\"Event Title\"\r\n                    >\r\n                      <Field\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name=\"eventTitle\"\r\n                        placeholder=\"Enter Title\"\r\n                        component={Input}\r\n                      />\r\n                    </FormItem>\r\n                  </div>\r\n                  <div className=\"md:grid grid-cols-2 gap-3 mx-4 pl-2\">\r\n                    <FormItem\r\n                      label='Description'\r\n                      // className='mx-4 w-100'\r\n                    >\r\n                      <RichTextEditor\r\n                      ></RichTextEditor>\r\n                    </FormItem>\r\n                  </div>\r\n                </FormContainer>\r\n              </Form>)\r\n          }}\r\n        </Formik>\r\n      </AdaptableCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddEvents","import { AdaptableCard } from 'components/shared';\r\nimport {\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n    DatePicker,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n    Card,\r\n    Checkbox,\r\n\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport { HiMinus, HiPlus } from 'react-icons/hi';\r\nimport * as Yup from \"yup\";\r\n\r\nexport const statusOptions = [\r\n    { label: 'Married', value: 'M' },\r\n    { label: 'Widowed', value: 'W' },\r\n    { label: 'Separated', value: 'S' },\r\n    { label: 'Divorced', value: 'D' },\r\n    { label: 'Single ', value: 'S' },\r\n]\r\nconst genderOptions = [\r\n    { label: 'Super Admin', value: 'M' },\r\n    { label: 'User.', value: 'F' },\r\n    { label: 'Admin', value: 'O' },\r\n]\r\n\r\nconst retailUserInitValues = {\r\n    roleId: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    emailId: '',\r\n    phoneNumber: '',\r\n    ordemailId: ''\r\n}\r\n\r\n\r\nconst retailValidationSchema = Yup.object().shape({\r\n\r\n    roleId: Yup.string().required('Please Enter RoleId'),\r\n    firstName: Yup.string().required('Please Enter Fisrt Name'),\r\n    lastName: Yup.string().required('Please Enter Last Name'),\r\n    emailId: Yup.string().email('Invalid email').required('Please Enter Email ID'),\r\n    phoneNumber: Yup\r\n        .string()\r\n        .required(\"Mobile number is required\")\r\n        .matches(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/, \"Invalid mobile number\"),\r\n\r\n    ordemailId: Yup.string().email('Invalid email').required('Please Enter Email ID')\r\n\r\n\r\n})\r\n\r\nconst pCategoryOptions = [\r\n    { label: 'Customer Type', value: '1' },\r\n    { label: 'Customer Category', value: '2' },\r\n    { label: 'Country', value: '3' },\r\n    { label: 'State', value: '4' },\r\n]\r\n\r\nconst EventsConfig = ({ onChange, refId, ...props }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AdaptableCard className=\"h-full mt-4\" bodyClass=\"h-full\" >\r\n                <h3 className=\"mx-4 mb-4\">Config Conditions</h3>\r\n                <Formik\r\n                    initialValues={{}}\r\n                    // validationSchema={{}}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setSubmitting(true)\r\n                    }}\r\n                >\r\n                    {({ values, touched, errors, isSubmitting }) => {\r\n                        return (\r\n                            <Form>\r\n                                <FormContainer>\r\n                                    <AdaptableCard\r\n                                        className=\"h-full p-4\" style={{ backgroundColor: \"#F5F5F5\" }}\r\n                                        bodyClass=\"h-full\"\r\n                                        divider\r\n                                    >\r\n                                        <div className=\"md:grid grid-cols-2 gap-6 mx-4 mt-4\">\r\n                                            <FormItem label=\"Title\">\r\n                                                <Field\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"off\"\r\n                                                    name=\"titleConfigSolution\"\r\n                                                    placeholder=\"Enter Config Title\"\r\n                                                    component={Input}\r\n                                                />\r\n                                            </FormItem>\r\n                                        </div>\r\n                                        <div className=\"flex justify-around pt-3 w-24 h-12 mt-5 mb-5 border rounded  bg-blue-900\">\r\n                                            <span className='text-white'>IF</span>\r\n                                        </div>\r\n                                        <FormItem label=\"\" className=\"\" >\r\n                                            <AdaptableCard className=\"h-full pl-36\" bodyClass=\"h-full\" divider>\r\n                                                <div className=''>\r\n                                                    <div className=\"md:grid grid-cols-6 gap-4  mt-4 \">\r\n                                                        <FormItem\r\n                                                            label=\"\"\r\n                                                            invalid={errors.labelIfConfig && touched.labelIfConfig}\r\n                                                            errorMessage={errors.labelIfConfig}\r\n                                                        >\r\n                                                            <Field name=\"labelIfConfig\">\r\n                                                                {({ field, form, }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select\"\r\n                                                                        field={field}\r\n                                                                        form={form}\r\n                                                                        options={pCategoryOptions}\r\n                                                                        value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.labelIfConfig\r\n                                                                        )}\r\n                                                                        onChange={(cItem) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                cItem.value\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"\"\r\n                                                            invalid={errors.interactionIfConfig && touched.interactionIfConfig}\r\n                                                            errorMessage={errors.interactionIfConfig}>\r\n                                                            <Field name=\"interactionIfConfig\">\r\n                                                                {({ field, form, }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Interaction\"\r\n                                                                        field={field}\r\n                                                                        form={form}\r\n                                                                        options={pCategoryOptions}\r\n                                                                        value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.interactionIfConfig\r\n                                                                        )}\r\n                                                                        onChange={(cItem) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                cItem.value\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"\"\r\n                                                            invalid={errors.valueIfConfig && touched.valueIfConfig}\r\n                                                            errorMessage={errors.valueIfConfig}>\r\n                                                            <Field name=\"valueIfConfig\">\r\n                                                                {({ field, form, }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Value\"\r\n                                                                        field={field}\r\n                                                                        form={form}\r\n                                                                        options={pCategoryOptions}\r\n                                                                        value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.valueIfConfig\r\n                                                                        )}\r\n                                                                        onChange={(cItem) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                cItem.value\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem label=\"\">\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"configIfFirst\"\r\n                                                                placeholder=\"\"\r\n                                                                component={Input}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem label=\"\">\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"configIfFirst\"\r\n                                                                placeholder=\"\"\r\n                                                                component={Input}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem className=\"ml-8\">\r\n                                                            <Button className='border-red-500'\r\n                                                                shape=\"circle\"\r\n                                                                size=\"md\"\r\n                                                                icon={<HiMinus />}\r\n                                                                onClick={''}\r\n                                                            />\r\n                                                            <Button className='ml-4 border-cyan-500'\r\n                                                                shape=\"circle\"\r\n                                                                size=\"md\"\r\n                                                                icon={<HiPlus />}\r\n                                                                onClick={''}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    </div>\r\n                                                    <div className=\"md:grid grid-cols-6 gap-4  mt-4  \">\r\n                                                        {/* <FormItem label=\"\"></FormItem> */}\r\n                                                        <FormItem\r\n                                                            label=\"\"\r\n                                                            invalid={errors.labelIfConfig && touched.labelIfConfig}\r\n                                                            errorMessage={errors.labelIfConfig}>\r\n                                                            <Field name=\"labelIfConfig\">\r\n                                                                {({ field, form, }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select\"\r\n                                                                        field={field}\r\n                                                                        form={form}\r\n                                                                        options={pCategoryOptions}\r\n                                                                        value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.labelIfConfig\r\n                                                                        )}\r\n                                                                        onChange={(cItem) => form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"\"\r\n                                                            invalid={errors.interactionIfConfig && touched.interactionIfConfig}\r\n                                                            errorMessage={errors.interactionIfConfig}>\r\n                                                            <Field name=\"interactionIfConfig\">\r\n                                                                {({ field, form, }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Interaction\"\r\n                                                                        field={field}\r\n                                                                        form={form}\r\n                                                                        options={pCategoryOptions}\r\n                                                                        value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.interactionIfConfig\r\n                                                                        )}\r\n                                                                        onChange={(\r\n                                                                            cItem\r\n                                                                        ) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                cItem.value\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"\"\r\n                                                            invalid={errors.valueIfConfig && touched.valueIfConfig}\r\n                                                            errorMessage={errors.valueIfConfig}>\r\n                                                            <Field name=\"valueIfConfig\">\r\n                                                                {({ field, form, }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Value\"\r\n                                                                        field={field}\r\n                                                                        form={form}\r\n                                                                        options={pCategoryOptions}\r\n                                                                        value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.valueIfConfig\r\n                                                                        )}\r\n                                                                        onChange={(cItem) => form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem label=\"\">\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"configIfFirst\"\r\n                                                                placeholder=\"\"\r\n                                                                component={Input}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem label=\"\">\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"configIfFirst\"\r\n                                                                placeholder=\"\"\r\n                                                                component={Input}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem className=\"ml-8\">\r\n                                                            <Button className='border-red-500'\r\n                                                                shape=\"circle\"\r\n                                                                size=\"md\"\r\n                                                                icon={<HiMinus />}\r\n                                                                onClick={''}\r\n                                                            />\r\n                                                            <Button className='ml-4 border-cyan-500'\r\n                                                                shape=\"circle\"\r\n                                                                size=\"md\"\r\n                                                                icon={<HiPlus />}\r\n                                                                onClick={''}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </AdaptableCard>\r\n                                        </FormItem>\r\n                                    </AdaptableCard>\r\n                                    <AdaptableCard\r\n                                        className=\"h-full p-4\" style={{ backgroundColor: \"#F5F5F5\" }}\r\n                                        bodyClass=\"h-full\"\r\n                                        divider\r\n                                    >\r\n                                        <div className=\"flex justify-around pt-3 w-24 h-12 mt-5 mb-5 border rounded  bg-blue-900\">\r\n                                            <span className='text-white'>THEN</span>\r\n                                        </div>\r\n                                        {/* <Button\r\n                                            onClick={() => { }}\r\n                                            className=\"mt-5 mb-5\"\r\n                                            variant=\"solid\"\r\n                                        >\r\n                                            THEN\r\n                                        </Button> */}\r\n                                        <FormItem label=\"\">\r\n                                            <AdaptableCard className=\"h-full pl-36\" bodyClass=\"h-full\" divider >\r\n                                                <div className=\"md:grid grid-cols-6 gap-4  mt-4\">\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.labelIfConfig && touched.labelIfConfig}\r\n                                                        errorMessage={errors.labelIfConfig}>\r\n                                                        <Field name=\"labelIfConfig\">\r\n                                                            {({ field, form, }) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                        cItem.value ===\r\n                                                                        values.labelIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) => form.setFieldValue(\r\n                                                                        field.name,\r\n                                                                        cItem.value\r\n                                                                    )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.interactionIfConfig && touched.interactionIfConfig}\r\n                                                        errorMessage={errors.interactionIfConfig}>\r\n                                                        <Field name=\"interactionIfConfig\">\r\n                                                            {({ field, form, }) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Interaction\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                        cItem.value ===\r\n                                                                        values.interactionIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) => form.setFieldValue(\r\n                                                                        field.name,\r\n                                                                        cItem.value\r\n                                                                    )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.valueIfConfig && touched.valueIfConfig}\r\n                                                        errorMessage={errors.valueIfConfig}>\r\n                                                        <Field name=\"valueIfConfig\">\r\n                                                            {({ field, form, }) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Value\"\r\n                                                                    field={\r\n                                                                        field\r\n                                                                    }\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                        cItem.value ===\r\n                                                                        values.valueIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) => form.setFieldValue(\r\n                                                                        field.name,\r\n                                                                        cItem.value\r\n                                                                    )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem className=\"ml-8\">\r\n                                                        <Button className='border-red-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiMinus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                        <Button className='ml-4 border-cyan-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiPlus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                </div>\r\n                                                <div className=\"md:grid grid-cols-6 gap-4  mt-4  \">\r\n\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.labelIfConfig && touched.labelIfConfig}\r\n                                                        errorMessage={errors.labelIfConfig}\r\n                                                    >\r\n                                                        <Field name=\"labelIfConfig\">\r\n                                                            {({ field, form, }) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                        cItem.value ===\r\n                                                                        values.labelIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) => form.setFieldValue(\r\n                                                                        field.name,\r\n                                                                        cItem.value\r\n                                                                    )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.interactionIfConfig && touched.interactionIfConfig}\r\n                                                        errorMessage={errors.interactionIfConfig}>\r\n                                                        <Field name=\"interactionIfConfig\">\r\n                                                            {({ field, form, }) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Interaction\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                        cItem.value ===\r\n                                                                        values.interactionIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) => form.setFieldValue(\r\n                                                                        field.name,\r\n                                                                        cItem.value\r\n                                                                    )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.valueIfConfig && touched.valueIfConfig}\r\n                                                        errorMessage={errors.valueIfConfig}>\r\n                                                        <Field name=\"valueIfConfig\">\r\n                                                            {({ field, form, }) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Value\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                        cItem.value ===\r\n                                                                        values.valueIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) => form.setFieldValue(\r\n                                                                        field.name,\r\n                                                                        cItem.value\r\n                                                                    )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem className=\"ml-8\">\r\n                                                        <Button className='border-red-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiMinus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                        <Button className='ml-4 border-cyan-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiPlus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                </div>\r\n                                                <div style={{ marginLeft: \"-120px\" }}>\r\n                                                    <Checkbox\r\n                                                        children={\r\n                                                            <p className=\"mr-6 color-black\">\r\n                                                                Allowed Multiple Usages\r\n                                                            </p>\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            </AdaptableCard>\r\n                                        </FormItem>\r\n                                    </AdaptableCard>\r\n                                </FormContainer>\r\n                            </Form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n\r\n            </AdaptableCard>\r\n            <div className=\"mt-4 text-right lg:flex items-center justify-end\">\r\n                <Button variant=\"plain\" className='font-bold' style={{ color: \"#004D99\" }} icon={<BsFillPlusCircleFill fill='#004D99' />}>ADD NEW CONFIG</Button>\r\n                <Button variant=\"plain\" className='font-bold' style={{ color: \"#990000\" }} icon={<BsFillPlusCircleFill fill='#990000' />}>DELETE CONFIG</Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventsConfig\r\n","import { Card } from 'components/ui'\r\nimport React from 'react'\r\nimport { MdModeEdit } from 'react-icons/md'\r\n\r\nfunction EventsPreview() {\r\n    return (\r\n        <>\r\n            <Card className=\"mx-3 mb-4 mt-1\">\r\n                <div className=\"md:grid grid-cols-2\">\r\n                    <h6 className=\" mb-4 mt-1 font-bold \">\r\n                    EVENT DETAILS{' '}\r\n                    </h6>\r\n                    <div className=\" text-base text-black font-bold flex justify-end cursor-pointer\">\r\n                    <MdModeEdit className=\"mt-1\"/>\r\n                    <p>EDIT</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"md:grid grid-cols-6\">\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Event Title\r\n                        </div>\r\n                        <div className='md:grid grid-cols-1 gap-2'>\r\n                            <p className=\"mt-2 text-base\">Event ABC</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-base text-black font-bold decoration-2 mb-2\">\r\n                            Description\r\n                        </div>\r\n                        <div className='md:grid grid-cols-1 gap-2'>\r\n                            <p className=\"mt-2 text-base\">Lorem ipsum dolor sit...</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            <Card className=\"mx-3 mb-4 mt-1\">\r\n                <div className=\"md:grid grid-cols-2\">\r\n                    <h6 className=\"mx-2 mb-4 mt-1 font-bold\">\r\n                        CONFIG DETAILS{' '}\r\n                    </h6>\r\n                    <div className=\" text-base text-black font-bold flex justify-end cursor-pointer\">\r\n                        <MdModeEdit className=\"mt-1\"/>\r\n                        <p>EDIT</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"md:grid grid-cols-1\">\r\n\r\n                    <div className='mx-2'>\r\n                        <p className='text-base text-black font-bold mb-2'>Title</p>\r\n                        <p className='text-base'>Config ABC</p>\r\n                    </div>\r\n                    <div className='mx-2 my-4'>\r\n                        <p className='text-base text-black font-bold mb-2'>IF</p>\r\n                        <ul>\r\n                            <li className='my-4'>1.  Customer Type    Greater Than or Equal to 1000.00 INR <span className='text-sm text-black font-bold'>AND</span></li>\r\n                            <li className='my-4'>2.  Customer Type    Equal to Enterprise Customer </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='mx-2 my-4'>\r\n                        <p className='text-base text-black font-bold mb-2'>THEN</p>\r\n                        <ul>\r\n                            <li className='my-4'>1.  Price    Equal to 500.00 INR </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                    {/* <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base text-black font-bold mb-2'>FirstName</p>\r\n                        <p className='text-base'>Ajay</p>\r\n                    </div>\r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base text-black font-bold mb-2'>LastName</p>\r\n                        <p className='text-base'>Kumar</p>\r\n                    </div>\r\n                  \r\n                    <div className='col-span-2 md:gird mx-2'>\r\n                        <p className='text-base text-black font-bold mb-2'>Email ID:</p>\r\n                        <p className='text-base'>ajjas@gmail.com</p>\r\n                    </div>\r\n                    <div className='col-span-4 md:gird mx-2'>\r\n                        <p className='text-base text-black font-bold mb-2'>Phone Number</p>\r\n                        <p className='text-base'>080 73278223</p>\r\n                    </div>\r\n                   */}\r\n                   \r\n                    \r\n                </div>\r\n              \r\n              \r\n            </Card>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventsPreview\r\n","import React, { useState } from 'react'\r\nimport { Steps, Button } from 'components/ui'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport { Link } from 'react-router-dom'\r\nimport AddEvents from './AddEvents'\r\nimport EventsConfig from './EventsConfig'\r\nimport EventsPreview from './EvnetsPreview'\r\nimport { BiArrowBack } from 'react-icons/bi'\r\n// import TaxComponentForm from './TaxComponentForm'\r\n\r\nconst Controlled = () => {\r\n    const [step, setStep] = useState(0)\r\n\r\n    const onChange = (nextStep) => {\r\n        if (nextStep < 0) {\r\n            setStep(0)\r\n        } else if (nextStep > 3) {\r\n            setStep(3)\r\n        } else {\r\n            setStep(nextStep)\r\n        }\r\n    }\r\n\r\n\r\n    const onNext = () => {\r\n        // if (step == 0) {\r\n        //     childRef.current?.handleSubmitFromParent()\r\n        // }\r\n\r\n        // if (step == 1) {\r\n        //     childRefUserInfo.current?.handleSubmitFromParent()\r\n        // }\r\n        setStep(step + 1)\r\n\r\n    }\r\n\r\n    const onPrevious = () => onChange(step - 1)\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Steps current={step}>\r\n\r\n                <Steps.Item title=\"CREATE EVENT\" />\r\n                <Steps.Item title=\"CREATE CONFIG\" />\r\n                <Steps.Item title=\"PREVIEW\" />\r\n            </Steps>\r\n\r\n            <div className=\"\">\r\n\r\n                {step == 0 &&\r\n\r\n                    <div>\r\n                        <div className='flex'>\r\n                            <h3 className='mt-6 mb-6'>Add Event </h3>\r\n                            {/* <AiOutlineInfoCircle className='ml-2 mt-8' style={{color : \"blue\"}}/> */}\r\n                        </div>\r\n                        <div className='bg-gray-50 dark:bg-gray-700 rounded'>\r\n                            <AddEvents />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {step == 1 &&\r\n                    <EventsConfig />\r\n                }\r\n                {step == 2 &&\r\n                    <div className='mt-6'>\r\n                        <h3 className='ml-4'>Preview</h3>\r\n                        <EventsPreview />\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n            <div className=\"flex justify-between mt-4 text-right\">\r\n                <div>\r\n                    {step > 0 && <Button\r\n                        // className=\"mx-2 flex gap-2 text-[#0080FF] border border-[#0080FF]\"\r\n                        style={{\r\n                            backgroundColor: \"#4D4D4D\", color: \"white\", \r\n                            fontStyle: 'normal',\r\n                            fontSize: '18px'\r\n                        }}\r\n                        onClick={onPrevious}\r\n                        type=\"button\"\r\n\r\n                    >\r\n                        Previous\r\n                    </Button>}\r\n                </div>\r\n                <div className='flex justify-end'>\r\n                    {step >= 0 &&\r\n                        <Link\r\n                            className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                            to=\"/masterDataMenu-item-view-7\"\r\n                        >\r\n                            <Button\r\n                                className=\"mx-2\"\r\n                                onClick={onPrevious}\r\n                                variant=\"solid\"\r\n                                style={{\r\n                                    backgroundColor: \"#4D4D4D\", \r\n                                    fontStyle: 'normal',\r\n                                    fontSize: '18px'\r\n                                }}\r\n\r\n\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>}\r\n                    {step < 2 && <Button variant=\"solid\" onClick={onNext} disabled={step === 2} style={{\r\n                        fontStyle: 'normal',\r\n                        fontSize: '18px'\r\n                    }}>\r\n                        {step === 2 ? 'Completed' : 'Next'}\r\n                    </Button>}\r\n\r\n                    {step === 2 &&\r\n                        <>\r\n                            <Link\r\n                                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                to=\"/masterDataMenu-item-view-7\"\r\n                            >\r\n                                <Button variant=\"solid\" style={{\r\n                                    fontStyle: 'normal',\r\n                                    fontSize: '18px'\r\n                                }}>\r\n                                    {'Submit for Approval'}\r\n                                </Button>\r\n                            </Link>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controlled\r\n","import React from 'react'\r\nimport StepControlled from './StepControlled'\r\n\r\nconst NewEvents = () => {\r\n    return (\r\n        <>\r\n            <div>Master Data/Event/Add Event</div>\r\n            <div className='mt-5'>\r\n                <StepControlled />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewEvents"],"names":["className","style","backgroundColor","bodyClass","divider","initialValues","validationSchema","onSubmit","values","setSubmitting","touched","errors","isSubmitting","label","type","autoComplete","name","placeholder","component","Input","pCategoryOptions","Yup","shape","roleId","required","firstName","lastName","emailId","email","phoneNumber","matches","ordemailId","value","onChange","refId","invalid","labelIfConfig","errorMessage","field","form","options","filter","cItem","setFieldValue","interactionIfConfig","valueIfConfig","size","icon","onClick","marginLeft","children","variant","color","fill","useState","step","setStep","onPrevious","nextStep","current","title","fontStyle","fontSize","to","disabled","StepControlled"],"sourceRoot":""}