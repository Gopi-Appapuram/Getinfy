{"version":3,"file":"static/js/1707.61c27f91.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","services/OfferService.js","services/ProductCategoryService.js","views/offers&cashback/components/cashbacks/CreateConfig.js","views/offers&cashback/components/cashbacks/CreateCashBacks.js","views/offers&cashback/components/cashbacks/CashBackPreview.js","views/offers&cashback/components/cashbacks/CreateCashbackForm.js","views/offers&cashback/store/dataSlice.js","views/offers&cashback/store/stateSlice.js","views/offers&cashback/store/index.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import ApiService from './ApiService'\r\n\r\nexport async function apiGetOfferDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/order/offr-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetCustomerCategoryData(params) {\r\n    return ApiService.fetchData({\r\n        url: '/account/cust-cats',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetCashBackDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/order/offr-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateOfferCashback(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/offr-info`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateOfferCashback(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/offr-info`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateOfferStatus(id, status) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/offr-info?id=${id}&offr_status=${status}`,\r\n            method: 'patch',\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateCashbackStatus(id, status) {\r\n    // try {\r\n    //     const resp = await ApiService.fetchData({\r\n    //         url: `catalogs/dgl-wh-info/${id}/${status}`,\r\n    //         method: 'patch',\r\n    //     })\r\n    //     return {\r\n    //         status: 'success',\r\n    //         data: resp,\r\n    //     }\r\n    // } catch (errors) {\r\n    //     return {\r\n    //         status: 'failed',\r\n    //         message: errors?.response?.data || errors.toString(),\r\n    //     }\r\n    // }\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: '/account/prod-cats',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\n\r\nexport async function apiProdCategoryCreateUser(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/prod-cats',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport async function apiUpdateProdCatAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url:`/account/prod-cats?id=${id}&mdProdCatStatus=${status}`,\r\n        // url: `/account/prod-cats?id=${id}&userStatus=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiUpdateProdCat(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/prod-cats/${data.id}`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function apiGetParentAccountProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}","import { AdaptableCard } from 'components/shared';\r\n\r\nimport {\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n    DatePicker,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n    Card,\r\n    Checkbox,\r\n\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport { HiMinus, HiPlus } from 'react-icons/hi';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nexport const statusOptions = [\r\n    { label: 'Married', value: 'M' },\r\n    { label: 'Widowed', value: 'W' },\r\n    { label: 'Separated', value: 'S' },\r\n    { label: 'Divorced', value: 'D' },\r\n    { label: 'Single ', value: 'S' },\r\n]\r\nconst genderOptions = [\r\n    { label: 'Super Admin', value: 'M' },\r\n    { label: 'User.', value: 'F' },\r\n    { label: 'Admin', value: 'O' },\r\n]\r\n\r\nconst retailUserInitValues = {\r\n    roleId: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    emailId: '',\r\n    phoneNumber: '',\r\n    ordemailId:''\r\n}\r\n\r\n\r\nconst retailValidationSchema = Yup.object().shape({\r\n\r\n    roleId: Yup.string().required('Please Enter RoleId'),\r\n    firstName: Yup.string().required('Please Enter Fisrt Name'),\r\n    lastName: Yup.string().required('Please Enter Last Name'),\r\n    emailId: Yup.string().email('Invalid email').required('Please Enter Email ID'),\r\n    phoneNumber: Yup\r\n        .string()\r\n        .required(\"Mobile number is required\")\r\n        .matches(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/, \"Invalid mobile number\"),\r\n\r\n        ordemailId:Yup.string().email('Invalid email').required('Please Enter Email ID')\r\n\r\n\r\n})\r\n\r\nconst pCategoryOptions = [\r\n    { label: 'Customer Type', value: '1' },\r\n    { label: 'Customer Category', value: '2' },\r\n    { label: 'Country', value: '3' },\r\n    { label: 'State', value: '4' },\r\n]\r\n\r\nconst CreateConfig = ({ onChange, refId, ...props }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n           <AdaptableCard className=\"h-full mt-4\" bodyClass=\"h-full\" >\r\n                <h3 className=\"mx-4 mb-4\">Config Conditions</h3>\r\n                <Formik\r\n                    initialValues={{}}\r\n                    // validationSchema={{}}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setSubmitting(true)\r\n                    }}\r\n                >\r\n                    {({ values, touched, errors, isSubmitting }) => {\r\n                        return (\r\n                            <Form>\r\n                                <FormContainer>\r\n                                    <AdaptableCard\r\n                                        className=\"h-full p-4\" style={{backgroundColor:\"#F5F5F5\"}}\r\n                                        bodyClass=\"h-full\"\r\n                                        divider\r\n                                    >\r\n                                        <div className=\"md:grid grid-cols-2 gap-6 mx-4 mt-4\">\r\n                                            <FormItem label=\"Title\">\r\n                                                <Field\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"off\"\r\n                                                    name=\"titleConfigSolution\"\r\n                                                    placeholder=\"Enter Config Title\"\r\n                                                    component={Input}\r\n                                                />\r\n                                            </FormItem>\r\n                                        </div>\r\n                                            <div className=\"flex justify-around pt-3 w-24 h-12 mt-5 mb-5 border rounded  bg-blue-900\">\r\n                                                <span className='text-white'>IF</span>\r\n                                            </div>\r\n                                            <FormItem label=\"\" className=\"\" >\r\n                                                <AdaptableCard className=\"h-full pl-36\" bodyClass=\"h-full\" divider>\r\n                                                    <div className=''>\r\n                                                        <div className=\"md:grid grid-cols-6 gap-4  mt-4 \">\r\n                                                            <FormItem\r\n                                                                label=\"\"\r\n                                                                invalid={errors.labelIfConfig &&touched.labelIfConfig}\r\n                                                                errorMessage={errors.labelIfConfig}\r\n                                                            >\r\n                                                                <Field name=\"labelIfConfig\">\r\n                                                                    {({field,form,}) => (\r\n                                                                        <Select\r\n                                                                            placeholder=\"Select\"\r\n                                                                            field={field}\r\n                                                                            form={form}\r\n                                                                            options={pCategoryOptions}\r\n                                                                            value={pCategoryOptions.filter((cItem) =>\r\n                                                                                    cItem.value ===\r\n                                                                                    values.labelIfConfig\r\n                                                                            )}\r\n                                                                            onChange={(cItem) =>\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    cItem.value\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem\r\n                                                                label=\"\"\r\n                                                                invalid={errors.interactionIfConfig &&touched.interactionIfConfig}\r\n                                                                errorMessage={errors.interactionIfConfig}>\r\n                                                                <Field name=\"interactionIfConfig\">\r\n                                                                    {({field,form,}) => (\r\n                                                                        <Select\r\n                                                                            placeholder=\"Select Interaction\"\r\n                                                                            field={field}\r\n                                                                            form={form}\r\n                                                                            options={pCategoryOptions}\r\n                                                                            value={pCategoryOptions.filter((cItem) =>\r\n                                                                                    cItem.value ===\r\n                                                                                    values.interactionIfConfig\r\n                                                                            )}\r\n                                                                            onChange={(cItem) =>\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    cItem.value\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem\r\n                                                                label=\"\"\r\n                                                                invalid={errors.valueIfConfig &&touched.valueIfConfig}\r\n                                                                errorMessage={errors.valueIfConfig}>\r\n                                                                <Field name=\"valueIfConfig\">\r\n                                                                    {({field,form,}) => (\r\n                                                                    <Select\r\n                                                                            placeholder=\"Select Value\"\r\n                                                                            field={field}\r\n                                                                            form={form}\r\n                                                                            options={pCategoryOptions}\r\n                                                                            value={pCategoryOptions.filter((cItem) =>\r\n                                                                                    cItem.value ===\r\n                                                                                    values.valueIfConfig\r\n                                                                            )}\r\n                                                                            onChange={(cItem) =>\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    cItem.value\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem label=\"\">\r\n                                                                <Field\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    name=\"configIfFirst\"\r\n                                                                    placeholder=\"\"\r\n                                                                    component={Input}\r\n                                                                />\r\n                                                            </FormItem>\r\n                                                            <FormItem label=\"\">\r\n                                                                <Field\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    name=\"configIfFirst\"\r\n                                                                    placeholder=\"\"\r\n                                                                    component={Input}\r\n                                                                />\r\n                                                            </FormItem>\r\n                                                            <FormItem className=\"ml-8\">\r\n                                                                <Button className='border-red-500'\r\n                                                                    shape=\"circle\"\r\n                                                                    size=\"md\"\r\n                                                                    icon={<HiMinus />}\r\n                                                                    onClick={''}\r\n                                                                />\r\n                                                                <Button className='ml-4 border-cyan-500'\r\n                                                                    shape=\"circle\"\r\n                                                                    size=\"md\"\r\n                                                                    icon={<HiPlus />}\r\n                                                                    onClick={''}\r\n                                                                />\r\n                                                            </FormItem>\r\n                                                        </div>\r\n                                                        <div className=\"md:grid grid-cols-6 gap-4  mt-4  \">\r\n                                                            {/* <FormItem label=\"\"></FormItem> */}\r\n                                                            <FormItem\r\n                                                                label=\"\"\r\n                                                                invalid={errors.labelIfConfig &&touched.labelIfConfig}\r\n                                                                errorMessage={errors.labelIfConfig}>\r\n                                                                <Field name=\"labelIfConfig\">\r\n                                                                    {({field,form,}) => (\r\n                                                                        <Select\r\n                                                                            placeholder=\"Select\"\r\n                                                                            field={field}\r\n                                                                            form={form}\r\n                                                                            options={pCategoryOptions}\r\n                                                                            value={pCategoryOptions.filter((cItem) =>\r\n                                                                                    cItem.value ===\r\n                                                                                    values.labelIfConfig\r\n                                                                            )}\r\n                                                                            onChange={(cItem) =>form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    cItem.value\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem\r\n                                                                label=\"\"\r\n                                                                invalid={errors.interactionIfConfig &&touched.interactionIfConfig}\r\n                                                                errorMessage={errors.interactionIfConfig}>\r\n                                                                <Field name=\"interactionIfConfig\">\r\n                                                                    {({field,form,}) => (\r\n                                                                        <Select\r\n                                                                            placeholder=\"Select Interaction\"\r\n                                                                            field={field}\r\n                                                                            form={form}\r\n                                                                            options={pCategoryOptions}\r\n                                                                            value={pCategoryOptions.filter((cItem) =>\r\n                                                                                    cItem.value ===\r\n                                                                                    values.interactionIfConfig\r\n                                                                            )}\r\n                                                                            onChange={(\r\n                                                                                cItem\r\n                                                                            ) =>\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    cItem.value\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem\r\n                                                                label=\"\"\r\n                                                                invalid={errors.valueIfConfig &&touched.valueIfConfig}\r\n                                                                errorMessage={errors.valueIfConfig}>\r\n                                                                <Field name=\"valueIfConfig\">\r\n                                                                    {({field,form,}) => (\r\n                                                                        <Select\r\n                                                                            placeholder=\"Select Value\"\r\n                                                                            field={field}\r\n                                                                            form={form}\r\n                                                                            options={pCategoryOptions}\r\n                                                                            value={pCategoryOptions.filter((cItem) =>\r\n                                                                                    cItem.value ===\r\n                                                                                    values.valueIfConfig\r\n                                                                            )}\r\n                                                                            onChange={(cItem) =>form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    cItem.value\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem label=\"\">\r\n                                                                <Field\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    name=\"configIfFirst\"\r\n                                                                    placeholder=\"\"\r\n                                                                    component={Input}\r\n                                                                />\r\n                                                            </FormItem>\r\n                                                            <FormItem label=\"\">\r\n                                                                <Field\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    name=\"configIfFirst\"\r\n                                                                    placeholder=\"\"\r\n                                                                    component={Input}\r\n                                                                />\r\n                                                            </FormItem>\r\n                                                            <FormItem className=\"ml-8\">\r\n                                                                <Button className='border-red-500'\r\n                                                                    shape=\"circle\"\r\n                                                                    size=\"md\"\r\n                                                                    icon={<HiMinus />}\r\n                                                                    onClick={''}\r\n                                                                />\r\n                                                                <Button className='ml-4 border-cyan-500'\r\n                                                                    shape=\"circle\"\r\n                                                                    size=\"md\"\r\n                                                                    icon={<HiPlus />}\r\n                                                                    onClick={''}\r\n                                                                />\r\n                                                            </FormItem>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </AdaptableCard>\r\n                                            </FormItem>\r\n                                    </AdaptableCard>\r\n                                    <AdaptableCard\r\n                                        className=\"h-full p-4\" style={{backgroundColor:\"#F5F5F5\"}}\r\n                                        bodyClass=\"h-full\"\r\n                                        divider\r\n                                    >\r\n                                        <div className=\"flex justify-around pt-3 w-24 h-12 mt-5 mb-5 border rounded  bg-blue-900\">\r\n                                                <span className='text-white'>THEN</span>\r\n                                        </div>\r\n                                        {/* <Button\r\n                                            onClick={() => { }}\r\n                                            className=\"mt-5 mb-5\"\r\n                                            variant=\"solid\"\r\n                                        >\r\n                                            THEN\r\n                                        </Button> */}\r\n                                        <FormItem label=\"\">\r\n                                            <AdaptableCard className=\"h-full pl-36\" bodyClass=\"h-full\"divider >\r\n                                                <div className=\"md:grid grid-cols-6 gap-4  mt-4\">\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.labelIfConfig &&touched.labelIfConfig}\r\n                                                        errorMessage={errors.labelIfConfig}>\r\n                                                        <Field name=\"labelIfConfig\">\r\n                                                            {({field,form,}) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.labelIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) =>form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.interactionIfConfig &&touched.interactionIfConfig}\r\n                                                        errorMessage={errors.interactionIfConfig}>\r\n                                                        <Field name=\"interactionIfConfig\">\r\n                                                            {({field,form,}) => (\r\n                                                            <Select\r\n                                                                    placeholder=\"Select Interaction\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.interactionIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) =>form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.valueIfConfig &&touched.valueIfConfig}\r\n                                                        errorMessage={errors.valueIfConfig}>\r\n                                                        <Field name=\"valueIfConfig\">\r\n                                                            {({field,form,}) => (\r\n                                                            <Select\r\n                                                                    placeholder=\"Select Value\"\r\n                                                                    field={\r\n                                                                        field\r\n                                                                    }\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.valueIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) =>form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem className=\"ml-8\">\r\n                                                        <Button className='border-red-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiMinus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                        <Button className='ml-4 border-cyan-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiPlus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                </div>\r\n                                                <div className=\"md:grid grid-cols-6 gap-4  mt-4  \">\r\n\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.labelIfConfig &&touched.labelIfConfig}\r\n                                                        errorMessage={errors.labelIfConfig}\r\n                                                    >\r\n                                                        <Field name=\"labelIfConfig\">\r\n                                                            {({field,form,}) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.labelIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) =>form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.interactionIfConfig &&touched.interactionIfConfig}\r\n                                                        errorMessage={errors.interactionIfConfig}>\r\n                                                        <Field name=\"interactionIfConfig\">\r\n                                                            {({field,form,}) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Interaction\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.interactionIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) =>form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"\"\r\n                                                        invalid={errors.valueIfConfig &&touched.valueIfConfig}\r\n                                                        errorMessage={errors.valueIfConfig}>\r\n                                                        <Field name=\"valueIfConfig\">\r\n                                                            {({field,form,}) => (\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Value\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={pCategoryOptions}\r\n                                                                    value={pCategoryOptions.filter((cItem) =>\r\n                                                                            cItem.value ===\r\n                                                                            values.valueIfConfig\r\n                                                                    )}\r\n                                                                    onChange={(cItem) =>form.setFieldValue(\r\n                                                                            field.name,\r\n                                                                            cItem.value\r\n                                                                        )\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem label=\"\">\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"configIfFirst\"\r\n                                                            placeholder=\"\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem className=\"ml-8\">\r\n                                                        <Button className='border-red-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiMinus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                        <Button className='ml-4 border-cyan-500'\r\n                                                            shape=\"circle\"\r\n                                                            size=\"md\"\r\n                                                            icon={<HiPlus />}\r\n                                                            onClick={''}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                </div>\r\n                                                <div style={{marginLeft : \"-120px\"}}>\r\n                                                    <Checkbox\r\n                                                            children={\r\n                                                                <p className=\"mr-6 color-black\">\r\n                                                                    Allowed Multiple Usages\r\n                                                                </p>\r\n                                                            }\r\n                                                        />\r\n                                                </div>\r\n                                            </AdaptableCard>\r\n                                        </FormItem>\r\n                                    </AdaptableCard>\r\n                                </FormContainer>\r\n                            </Form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n                \r\n            </AdaptableCard>\r\n            <div className=\"mt-4 text-right lg:flex items-center justify-end\">\r\n                    <Button variant=\"plain\" className='font-bold' style={{ color: \"#004D99\" }} icon={<BsFillPlusCircleFill fill='#004D99' />}>ADD NEW CONFIG</Button>\r\n                    <Button variant=\"plain\" className='font-bold' style={{ color: \"#990000\" }} icon={<BsFillPlusCircleFill fill='#990000' />}>DELETE CONFIG</Button>\r\n                </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateConfig\r\n","import React from 'react'\r\nimport { AdaptableCard, RichTextEditor } from 'components/shared'\r\nimport {\r\n    Input,\r\n    FormItem,\r\n    FormContainer,\r\n    Select,\r\n    DatePicker,\r\n    Radio,\r\n    Checkbox,\r\n    Button,\r\n} from 'components/ui'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useSelector } from 'react-redux'\r\nimport NumberFormatInput from 'react-number-format'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction getKeyByValue(object, value) {\r\n    return Object.keys(object).find((key) => object[key] === value)\r\n}\r\n\r\nconst PercentageInput = (props) => {\r\n    return <Input {...props} value={props.field.value} suffix=\"%\" />\r\n}\r\nconst PriceInput = (props) => {\r\n    return <Input {...props} value={props.field.value} prefix=\"$\" />\r\n}\r\nconst FrequencyList = [\r\n    { label: 'Daily', value: 'DAILY' },\r\n    { label: 'Weekly', value: 'WEEKLY' },\r\n    { label: 'Monthly', value: 'MONTHLY' },\r\n    { label: 'Quarterly', value: 'QUARTERLY' },\r\n    { label: 'Half-Yearly', value: 'HALFYEARLY' },\r\n    { label: 'Yearly', value: 'YEARLY' },\r\n]\r\n\r\nexport default function CreateCashBacks(props) {\r\n    const {\r\n        cashbackInitialValues,\r\n        cashbackValidationSchema,\r\n        handleFirstStepSubmit,\r\n    } = props\r\n    const { customerCategories, productCategories } = useSelector(\r\n        (state) => state.offerCashback.data\r\n    )\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={cashbackInitialValues}\r\n                validationSchema={cashbackValidationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setSubmitting(true)\r\n                    handleFirstStepSubmit(values)\r\n                }}\r\n            >\r\n                {({ values, touched, errors, isSubmitting, handleSubmit }) => {\r\n                    return (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"mt-6 dark:bg-gray-700 rounded \">\r\n                                <div\r\n                                    className=\"mt-5\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    <h3>Create Cashback</h3>\r\n                                    <div\r\n                                        className=\"mt-6  rounded\"\r\n                                        style={{ backgroundColor: '#f5f5f5' }}\r\n                                    >\r\n                                        <div\r\n                                            className=\" p-5\"\r\n                                            style={{\r\n                                                backgroundColor: '#F5F5F5',\r\n                                            }}\r\n                                        >\r\n                                            <AdaptableCard\r\n                                                className=\"h-full\"\r\n                                                bodyClass=\"h-full\"\r\n                                                divider\r\n                                            >\r\n                                                <FormContainer>\r\n                                                    <div className=\"md:grid grid-cols-2 gap-6 mx-4 mt-3\">\r\n                                                        <FormItem\r\n                                                            label=\"CashBack Code\"\r\n                                                            invalid={\r\n                                                                errors.offr_code &&\r\n                                                                touched.offr_code\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.offr_code\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"offr_code\"\r\n                                                                placeholder=\"Enter CashBack Code\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                style={{\r\n                                                                    width: '100%',\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"CashBack Title\"\r\n                                                            invalid={\r\n                                                                errors.offr_name &&\r\n                                                                touched.offr_name\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.offr_name\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"offr_name\"\r\n                                                                placeholder=\"Enter CashBack Title\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                style={{\r\n                                                                    width: '100%',\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <div\r\n                                                            className=\"md:grid grid-cols-2 gap-4\"\r\n                                                            style={{\r\n                                                                width: '100%',\r\n                                                            }}\r\n                                                        >\r\n                                                            <FormItem\r\n                                                                label=\"Start Date\"\r\n                                                                invalid={\r\n                                                                    errors.offr_start_date &&\r\n                                                                    touched.offr_start_date\r\n                                                                }\r\n                                                                errorMessage={\r\n                                                                    errors.offr_start_date\r\n                                                                }\r\n                                                            >\r\n                                                                <Field name=\"offr_start_date\">\r\n                                                                    {({\r\n                                                                        field,\r\n                                                                        form,\r\n                                                                    }) => (\r\n                                                                        <DatePicker\r\n                                                                            placeholder=\"Select Date\"\r\n                                                                            field={\r\n                                                                                field\r\n                                                                            }\r\n                                                                            form={\r\n                                                                                form\r\n                                                                            }\r\n                                                                            value={\r\n                                                                                field.value\r\n                                                                                    ? new Date(\r\n                                                                                          field.value\r\n                                                                                      )\r\n                                                                                    : field.value\r\n                                                                            }\r\n                                                                            onChange={(\r\n                                                                                date\r\n                                                                            ) => {\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    date\r\n                                                                                )\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem\r\n                                                                label=\"End Date\"\r\n                                                                invalid={\r\n                                                                    errors.offr_end_date &&\r\n                                                                    touched.offr_end_date\r\n                                                                }\r\n                                                                errorMessage={\r\n                                                                    errors.offr_end_date\r\n                                                                }\r\n                                                            >\r\n                                                                <Field name=\"offr_end_date\">\r\n                                                                    {({\r\n                                                                        field,\r\n                                                                        form,\r\n                                                                    }) => (\r\n                                                                        <DatePicker\r\n                                                                            placeholder=\"Select Date\"\r\n                                                                            field={\r\n                                                                                field\r\n                                                                            }\r\n                                                                            form={\r\n                                                                                form\r\n                                                                            }\r\n                                                                            value={\r\n                                                                                field.value\r\n                                                                                    ? new Date(\r\n                                                                                          field.value\r\n                                                                                      )\r\n                                                                                    : field.value\r\n                                                                            }\r\n                                                                            onChange={(\r\n                                                                                date\r\n                                                                            ) => {\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    date\r\n                                                                                )\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                        </div>\r\n                                                        <FormItem\r\n                                                            label=\"Max Allowed Usages\"\r\n                                                            invalid={\r\n                                                                errors.offr_max_cpns_applcbl &&\r\n                                                                touched.offr_max_cpns_applcbl\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.offr_max_cpns_applcbl\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"number\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"offr_max_cpns_applcbl\"\r\n                                                                placeholder=\"Enter Max Allowed Usages\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                style={{\r\n                                                                    width: '100%',\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"Max Allowed Usages/customer\"\r\n                                                            invalid={\r\n                                                                errors.offr_no_of_cpns &&\r\n                                                                touched.offr_no_of_cpns\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.offr_no_of_cpns\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"number\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"offr_no_of_cpns\"\r\n                                                                placeholder=\"Enter Amount\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"Frequency\"\r\n                                                            className=\"ml-2\"\r\n                                                            invalid={\r\n                                                                errors.offr_timeperiod &&\r\n                                                                touched.offr_timeperiod\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.offr_timeperiod\r\n                                                            }\r\n                                                        >\r\n                                                            <Field name=\"offr_timeperiod\">\r\n                                                                {({\r\n                                                                    field,\r\n                                                                    form,\r\n                                                                }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Frequency\"\r\n                                                                        field={\r\n                                                                            field\r\n                                                                        }\r\n                                                                        form={\r\n                                                                            form\r\n                                                                        }\r\n                                                                        options={\r\n                                                                            FrequencyList\r\n                                                                        }\r\n                                                                        value={FrequencyList?.filter(\r\n                                                                            (\r\n                                                                                fq\r\n                                                                            ) =>\r\n                                                                                fq.value ===\r\n                                                                                values?.offr_timeperiod\r\n                                                                        )}\r\n                                                                        onChange={(\r\n                                                                            fq\r\n                                                                        ) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                fq.value\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"Product Category\"\r\n                                                            invalid={\r\n                                                                errors.rel_offr_prod_cat &&\r\n                                                                touched.rel_offr_prod_cat\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.rel_offr_prod_cat\r\n                                                            }\r\n                                                        >\r\n                                                            <Field name=\"rel_offr_prod_cat\">\r\n                                                                {({\r\n                                                                    field,\r\n                                                                    form,\r\n                                                                }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Product Category\"\r\n                                                                        field={\r\n                                                                            field\r\n                                                                        }\r\n                                                                        form={\r\n                                                                            form\r\n                                                                        }\r\n                                                                        options={\r\n                                                                            productCategories\r\n                                                                        }\r\n                                                                        value={productCategories?.filter(\r\n                                                                            (\r\n                                                                                fq\r\n                                                                            ) =>\r\n                                                                                fq.id ==\r\n                                                                                values?.rel_offr_prod_cat\r\n                                                                        )}\r\n                                                                        onChange={(\r\n                                                                            fq\r\n                                                                        ) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                fq.id\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"Customer Category\"\r\n                                                            invalid={\r\n                                                                errors.rel_offr_cust_cat &&\r\n                                                                touched.rel_offr_cust_cat\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.rel_offr_cust_cat\r\n                                                            }\r\n                                                        >\r\n                                                            <Field name=\"rel_offr_cust_cat\">\r\n                                                                {({\r\n                                                                    field,\r\n                                                                    form,\r\n                                                                }) => (\r\n                                                                    <Select\r\n                                                                        placeholder=\"Select Customer Category\"\r\n                                                                        field={\r\n                                                                            field\r\n                                                                        }\r\n                                                                        form={\r\n                                                                            form\r\n                                                                        }\r\n                                                                        options={\r\n                                                                            customerCategories\r\n                                                                        }\r\n                                                                        value={customerCategories?.filter(\r\n                                                                            (\r\n                                                                                pc\r\n                                                                            ) =>\r\n                                                                                pc.id ==\r\n                                                                                values?.rel_offr_cust_cat\r\n                                                                        )}\r\n                                                                        onChange={(\r\n                                                                            pc\r\n                                                                        ) => {\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                pc.id\r\n                                                                            )\r\n\r\n                                                                            const value =\r\n                                                                                JSON.parse(\r\n                                                                                    pc.cust_cat_type\r\n                                                                                )\r\n                                                                            getKeyByValue(\r\n                                                                                value,\r\n                                                                                true\r\n                                                                            )\r\n                                                                            form.setFieldValue(\r\n                                                                                'cust_type',\r\n                                                                                getKeyByValue(\r\n                                                                                    value,\r\n                                                                                    true\r\n                                                                                )?.replace(\r\n                                                                                    /_/g,\r\n                                                                                    ''\r\n                                                                                ) ||\r\n                                                                                    'RetailCustomer'\r\n                                                                            )\r\n                                                                        }}\r\n                                                                    />\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <div\r\n                                                            style={{\r\n                                                                display: 'flex',\r\n                                                                flexDirection:\r\n                                                                    'column',\r\n                                                            }}\r\n                                                        >\r\n                                                            <label className=\"mb-3\">\r\n                                                                CashBack Type\r\n                                                            </label>\r\n                                                            <Field name=\"offr_type_fxd_amnt\">\r\n                                                                {({\r\n                                                                    field,\r\n                                                                    form,\r\n                                                                }) => (\r\n                                                                    <Radio.Group\r\n                                                                        field={\r\n                                                                            field\r\n                                                                        }\r\n                                                                        form={\r\n                                                                            form\r\n                                                                        }\r\n                                                                        value={\r\n                                                                            values?.offr_type_fxd_amnt\r\n                                                                        }\r\n                                                                        onChange={(\r\n                                                                            val\r\n                                                                        ) =>\r\n                                                                            form.setFieldValue(\r\n                                                                                field.name,\r\n                                                                                val\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <Radio\r\n                                                                            value={\r\n                                                                                true\r\n                                                                            }\r\n                                                                            style={{\r\n                                                                                height: '25px',\r\n                                                                                width: '25px',\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Fixed\r\n                                                                            Amount\r\n                                                                        </Radio>\r\n                                                                        <Radio\r\n                                                                            value={\r\n                                                                                false\r\n                                                                            }\r\n                                                                            style={{\r\n                                                                                height: '25px',\r\n                                                                                width: '25px',\r\n                                                                                marginLeft:\r\n                                                                                    '30px',\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Percentage\r\n                                                                        </Radio>\r\n                                                                    </Radio.Group>\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            style={{\r\n                                                                display: 'flex',\r\n                                                                flexDirection:\r\n                                                                    'column',\r\n                                                            }}\r\n                                                        >\r\n                                                            <label className=\"mb-3\">\r\n                                                                Select Bearer\r\n                                                                Account\r\n                                                            </label>\r\n                                                            <div\r\n                                                                style={{\r\n                                                                    display:\r\n                                                                        'flex',\r\n                                                                }}\r\n                                                            >\r\n                                                                <Checkbox />\r\n                                                                <label>\r\n                                                                    Operator\r\n                                                                </label>\r\n                                                                <Checkbox className=\"ml-6\" />\r\n                                                                <label>\r\n                                                                    Provider\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <FormItem\r\n                                                            className=\"mt-2\"\r\n                                                            invalid={\r\n                                                                errors.offr_value &&\r\n                                                                touched.offr_value\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.offr_value\r\n                                                            }\r\n                                                        >\r\n                                                            <Field name=\"offr_value\">\r\n                                                                {({\r\n                                                                    field,\r\n                                                                    form,\r\n                                                                }) => {\r\n                                                                    return (\r\n                                                                        <NumberFormatInput\r\n                                                                            form={\r\n                                                                                form\r\n                                                                            }\r\n                                                                            field={\r\n                                                                                field\r\n                                                                            }\r\n                                                                            placeholder=\"Enter Amount\"\r\n                                                                            // className=\"w-4/5\"\r\n                                                                            customInput={\r\n                                                                                values?.offr_type_fxd_amnt\r\n                                                                                    ? PriceInput\r\n                                                                                    : PercentageInput\r\n                                                                            }\r\n                                                                            onValueChange={(\r\n                                                                                e\r\n                                                                            ) => {\r\n                                                                                form.setFieldValue(\r\n                                                                                    field.name,\r\n                                                                                    e.value\r\n                                                                                )\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    )\r\n                                                                }}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n                                                        <div\r\n                                                            style={{\r\n                                                                display: 'flex',\r\n                                                            }}\r\n                                                        >\r\n                                                            <FormItem\r\n                                                                className=\"mt-2\"\r\n                                                                invalid={\r\n                                                                    errors.operator_share &&\r\n                                                                    touched.operator_share\r\n                                                                }\r\n                                                                errorMessage={\r\n                                                                    errors.operator_share\r\n                                                                }\r\n                                                            >\r\n                                                                <Field name=\"operator_share\">\r\n                                                                    {({\r\n                                                                        field,\r\n                                                                        form,\r\n                                                                    }) => {\r\n                                                                        return (\r\n                                                                            <NumberFormatInput\r\n                                                                                form={\r\n                                                                                    form\r\n                                                                                }\r\n                                                                                field={\r\n                                                                                    field\r\n                                                                                }\r\n                                                                                // className=\"w-40\"\r\n                                                                                customInput={\r\n                                                                                    PercentageInput\r\n                                                                                }\r\n                                                                                onValueChange={(\r\n                                                                                    e\r\n                                                                                ) => {\r\n                                                                                    form.setFieldValue(\r\n                                                                                        field.name,\r\n                                                                                        e.value\r\n                                                                                    )\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        )\r\n                                                                    }}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                            <FormItem\r\n                                                                className=\"mt-2\"\r\n                                                                invalid={\r\n                                                                    errors.provider_share &&\r\n                                                                    touched.provider_share\r\n                                                                }\r\n                                                                errorMessage={\r\n                                                                    errors.provider_share\r\n                                                                }\r\n                                                            >\r\n                                                                <Field name=\"provider_share\">\r\n                                                                    {({\r\n                                                                        field,\r\n                                                                        form,\r\n                                                                    }) => {\r\n                                                                        return (\r\n                                                                            <NumberFormatInput\r\n                                                                                className=\"ml-3 \"\r\n                                                                                form={\r\n                                                                                    form\r\n                                                                                }\r\n                                                                                field={\r\n                                                                                    field\r\n                                                                                }\r\n                                                                                customInput={\r\n                                                                                    PercentageInput\r\n                                                                                }\r\n                                                                                onValueChange={(\r\n                                                                                    e\r\n                                                                                ) => {\r\n                                                                                    form.setFieldValue(\r\n                                                                                        field.name,\r\n                                                                                        e.value\r\n                                                                                    )\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        )\r\n                                                                    }}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                        </div>\r\n                                                        {/* <FormItem\r\n                                                            label=\"Minimum Cashback Allowed\"\r\n                                                            className=\"w-100\"\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"id\"\r\n                                                                placeholder=\"Enter Minimum Cashback\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                            />\r\n                                                        </FormItem> */}\r\n                                                    </div>\r\n                                                    <div className=\"md:grid grid-cols-1 gap-6 mx-4 mt-3\">\r\n                                                        {/* <FormItem\r\n                                                            label={\r\n                                                                'Cashback application on'\r\n                                                            }\r\n                                                        >\r\n                                                            <div className=\"flex ml-2 mt-2\">\r\n                                                                <div className=\"flex\">\r\n                                                                    <Checkbox className=\"ml-4 mt-3\" />\r\n                                                                    <Field\r\n                                                                        type=\"text\"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        name=\"id\"\r\n                                                                        placeholder=\"Enter Quantity\"\r\n                                                                        component={\r\n                                                                            Input\r\n                                                                        }\r\n                                                                    ></Field>\r\n                                                                </div>\r\n                                                                <div className=\"flex\">\r\n                                                                    <Checkbox className=\"ml-4 mt-3\" />\r\n                                                                    <Field\r\n                                                                        type=\"text\"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        name=\"id\"\r\n                                                                        placeholder=\"Time Period\"\r\n                                                                        component={\r\n                                                                            Input\r\n                                                                        }\r\n                                                                    ></Field>\r\n                                                                </div>\r\n                                                                <div className=\"flex ml-2\">\r\n                                                                    <Checkbox className=\"ml-4 mt-3\" />\r\n                                                                    <Field\r\n                                                                        type=\"text\"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        name=\"id\"\r\n                                                                        placeholder=\"Mode Of Payment\"\r\n                                                                        component={\r\n                                                                            Input\r\n                                                                        }\r\n                                                                    ></Field>\r\n                                                                </div>\r\n                                                                <div className=\"flex\">\r\n                                                                    <Checkbox className=\"ml-4 mt-3\" />\r\n                                                                    <Field\r\n                                                                        type=\"text\"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        name=\"id\"\r\n                                                                        placeholder=\"Order Value\"\r\n                                                                        component={\r\n                                                                            Input\r\n                                                                        }\r\n                                                                    ></Field>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </FormItem> */}\r\n                                                        <div\r\n                                                            style={{\r\n                                                                display: 'flex',\r\n                                                            }}\r\n                                                        >\r\n                                                            <FormItem\r\n                                                                label=\"Description\"\r\n                                                                className=\"\"\r\n                                                                invalid={\r\n                                                                    errors.offr_desc &&\r\n                                                                    touched.offr_desc\r\n                                                                }\r\n                                                                errorMessage={\r\n                                                                    errors.offr_desc\r\n                                                                }\r\n                                                            >\r\n                                                                <Field name=\"offr_desc\">\r\n                                                                    {({\r\n                                                                        field,\r\n                                                                    }) => (\r\n                                                                        <RichTextEditor\r\n                                                                            value={\r\n                                                                                field.value\r\n                                                                            }\r\n                                                                            onChange={field.onChange(\r\n                                                                                field.name\r\n                                                                            )}\r\n                                                                        ></RichTextEditor>\r\n                                                                    )}\r\n                                                                </Field>\r\n                                                            </FormItem>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </FormContainer>\r\n                                            </AdaptableCard>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-4 text-right\">\r\n                                <>\r\n                                    <Link\r\n                                        className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                        to=\"/cashbacks\"\r\n                                    >\r\n                                        <Button\r\n                                            type={'button'}\r\n                                            className=\"mx-2\"\r\n                                            onClick={() =>\r\n                                                console.log('cancel')\r\n                                            }\r\n                                            variant=\"solid\"\r\n                                            style={{\r\n                                                backgroundColor: '#4D4D4D',\r\n                                            }}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Link>\r\n                                </>\r\n                                <Button variant=\"solid\" type={'submit'}>\r\n                                    {'Next'}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Card, Notification, toast } from 'components/ui'\r\nimport React from 'react'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { apiCreateOfferCashback, apiUpdateOfferCashback } from 'services/OfferService'\r\nimport { GetErrorMsg } from 'views/Servicefile'\r\n\r\nfunction CashBackPreview(props) {\r\n    const {\r\n        onPrevious,\r\n        configIntialValues,\r\n        cashbackInitialValues,\r\n        goToFirstStep,\r\n        selectedMode,\r\n    } = props\r\n    const { customerCategories, productCategories } = useSelector(\r\n        (state) => state.offerCashback.data\r\n    )\r\n    const navigate = useNavigate()\r\n    const prodCategory = productCategories?.find(\r\n        (prod) => prod.id == cashbackInitialValues.rel_offr_prod_cat\r\n    )?.label\r\n    const custCategory = customerCategories?.find(\r\n        (cust) => cust.id == cashbackInitialValues.rel_offr_cust_cat\r\n    )?.label\r\n\r\n    const handleSubmit = async () => {\r\n        let payload\r\n        let resp\r\n        if (selectedMode === 'EDIT') {\r\n            payload = {\r\n                ...cashbackInitialValues,\r\n                dgl_offrs_configs: configIntialValues,\r\n            }\r\n            resp = await apiUpdateOfferCashback(payload)\r\n        } else {\r\n            payload = {\r\n                ...cashbackInitialValues,\r\n                dgl_offrs_configs: configIntialValues,\r\n            }\r\n            resp = await apiCreateOfferCashback(payload)\r\n        }\r\n        if (resp.status === 'success') {\r\n            toast.push(\r\n                <Notification\r\n                    title={\r\n                        selectedMode === 'EDIT'\r\n                            ? 'CashBack Updation'\r\n                            : 'CashBack Creation'\r\n                    }\r\n                    type=\"success\"\r\n                    duration={2500}\r\n                >\r\n                    {selectedMode === 'EDIT'\r\n                        ? 'CashBack Updated Successfuly'\r\n                        : 'CashBack Created Successfuly'}\r\n                </Notification>,\r\n                {\r\n                    placement: 'top-end',\r\n                }\r\n            )\r\n\r\n            navigate('/cashbacks')\r\n        } else {\r\n            const errorMsg = GetErrorMsg(resp) || 'Error'\r\n            toast.push(\r\n                <Notification title={'Failed'} type=\"danger\" duration={2500}>\r\n                    {errorMsg}\r\n                </Notification>,\r\n                {\r\n                    placement: 'top-end',\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"mt-6 dark:bg-gray-700 rounded \">\r\n                <Card className=\"mx-3 mb-4 mt-1\">\r\n                    <div className=\"md:grid grid-cols-2\">\r\n                        <h6 className=\" mb-4 mt-1 font-bold \">\r\n                            CASHBACK CREATION{' '}\r\n                        </h6>\r\n                        <div className=\" text-xs text-black font-bold flex justify-end cursor-pointer\">\r\n                            <MdModeEdit className=\"mt-1\" />\r\n                            <p onClick={() => goToFirstStep()}>EDIT</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"md:grid grid-cols-5\">\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Cashback Code\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">\r\n                                    {cashbackInitialValues?.offr_code}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Cashback Title\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">\r\n                                    {cashbackInitialValues?.offr_name}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Start Date\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">\r\n                                    {new Date(\r\n                                        cashbackInitialValues?.offr_start_date\r\n                                    ).toLocaleDateString()}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                End Date\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">\r\n                                    {new Date(\r\n                                        cashbackInitialValues?.offr_end_date\r\n                                    ).toLocaleDateString()}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Product Category\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">{prodCategory}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Customer Category\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">{custCategory}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Offer Type\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">\r\n                                    {cashbackInitialValues?.offr_type}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Coupon Brearer Account\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">{`N/A`}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"text-xs text-black font-bold decoration-2\">\r\n                                Description\r\n                            </div>\r\n                            <div className=\"md:grid grid-cols-1 gap-2\">\r\n                                <p className=\"mt-2 text-xs\">\r\n                                    {cashbackInitialValues?.offr_desc}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                {/* <Card className=\"mx-3 mb-4 mt-1\">\r\n                    <div className=\"md:grid grid-cols-2\">\r\n                        <h6 className=\"mx-2 mb-4 mt-1 font-bold\">\r\n                            CONFIG DETAILS{' '}\r\n                        </h6>\r\n                        <div className=\" text-xs text-black font-bold flex justify-end cursor-pointer\">\r\n                            <MdModeEdit className=\"mt-1\" />\r\n                            <p onClick={()=>onPrevious()}>EDIT</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"md:grid grid-cols-1\">\r\n                        <div className=\"mx-2\">\r\n                            <p className=\"text-xs text-black font-bold mb-2\">\r\n                                Title\r\n                            </p>\r\n                            <p className=\"text-xs\">{configIntialValues?.offr_config_title}</p>\r\n                        </div>\r\n                        <div className=\"mx-2 my-4\">\r\n                            <p className=\"text-xs text-black font-bold mb-2\">\r\n                                IF\r\n                            </p>\r\n                            <ul>\r\n                                <li className=\"my-4\">\r\n                                    1.Order Quantity Greater Than or Equal to\r\n                                    10000.00\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"mx-2 my-4\">\r\n                            <p className=\"text-xs text-black font-bold mb-2\">\r\n                                THEN\r\n                            </p>\r\n                            <ul>\r\n                                <li className=\"my-4\">\r\n                                    1.Discount Amount Equal to 1000.00\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </Card> */}\r\n            </div>\r\n            <div className=\"mt-4 text-right\">\r\n                <Button className=\"mx-2\" onClick={onPrevious}>\r\n                    Previous\r\n                </Button>\r\n                <Button onClick={() => handleSubmit()} variant=\"solid\">\r\n                    {'Submit for Approval'}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CashBackPreview\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Steps, Button } from 'components/ui'\r\nimport CreateConfig from './CreateConfig'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport {\r\n    getCustCatList,\r\n    getProdCatList,\r\n} from 'views/offers&cashback/store/dataSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { injectReducer } from 'store'\r\nimport reducer from 'views/offers&cashback/store'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\nimport CreateCashBacks from './CreateCashBacks'\r\nimport CashBackPreview from './CashBackPreview'\r\ninjectReducer('offerCashback', reducer)\r\nconst CreateCashbackForm = () => {\r\n    const [step, setStep] = useState(0)\r\n    const location = useLocation()\r\n    const mode = location.state?.mode === 'EDIT' ? location.state?.mode : 'ADD'\r\n    const [selectedMode, setSelectedMode] = useState(mode)\r\n    const rowForEdit = location.state?.data\r\n    const dispatch = useDispatch()\r\n    let step1InitialValues = {\r\n        offr_name: '',\r\n        offr_start_date: '',\r\n        offr_end_date: '',\r\n        offr_code: '',\r\n        offr_max_cpns_applcbl: 0,\r\n        offr_timeperiod: '',\r\n        offr_no_of_cpns: 0,\r\n        rel_offr_prod_cat: '',\r\n        rel_offr_cust_cat: '',\r\n        offr_type_fxd_amnt: true,\r\n        offr_value: 0,\r\n        operator_share: 0,\r\n        provider_share: 0,\r\n        offr_desc: '',\r\n        offr_type: 'CASHBACK',\r\n        cust_type: '',\r\n        cust_id: '',\r\n    }\r\n    let stpe2IntialValues = [\r\n        {\r\n            offr_config_title: '',\r\n            offr_config_details: '',\r\n        },\r\n    ]\r\n    if (rowForEdit) {\r\n        step1InitialValues = rowForEdit\r\n        stpe2IntialValues = rowForEdit?.dgl_offrs_configs\r\n    }\r\n    const [cashbackInitialValues, setCashbackInitialValues] =\r\n        useState(step1InitialValues)\r\n    const [configIntialValues, setConfigIntialValues] =\r\n        useState(stpe2IntialValues)\r\n    const cashbackValidationSchema = Yup.object({\r\n        offr_name: Yup.string().required('Cashback Name is required'),\r\n        offr_start_date: Yup.date().required('Start Date is required'),\r\n        offr_end_date: Yup.date().required('End Date is required'),\r\n        offr_code: Yup.string().required('Cashback Code is required'),\r\n        offr_max_cpns_applcbl: Yup.string().required(\r\n            'Max Allowed Usages is required'\r\n        ),\r\n        offr_timeperiod: Yup.string().required('Frequency is required'),\r\n        offr_no_of_cpns: Yup.string().required(\r\n            'Max Allowed Usages perCustomer is required'\r\n        ),\r\n        rel_offr_prod_cat: Yup.string().required(\r\n            'Product Category is required'\r\n        ),\r\n        rel_offr_cust_cat: Yup.string().required(\r\n            'Customer Category is required'\r\n        ),\r\n        offr_type_fxd_amnt: Yup.string().required('Cashback Type is required'),\r\n        offr_value: Yup.string().required('Cashback Value is required'),\r\n        operator_share: Yup.string().required('Operator Share is required'),\r\n        provider_share: Yup.string().required('Provider Share is required'),\r\n        offr_desc: Yup.string().required('Cashback Description is required'),\r\n    })\r\n    const { unq_id } = useSelector((state) => state.auth.user)\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getProdCatList({ page_no: 0, page_size: 100, unqId: unq_id }))\r\n        dispatch(getCustCatList({ page_no: 0, page_size: 100, unqId: unq_id }))\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [dispatch, fetchData])\r\n\r\n    const onChange = (nextStep) => {\r\n        if (nextStep < 0) {\r\n            setStep(0)\r\n        } else if (nextStep > 3) {\r\n            setStep(3)\r\n        } else {\r\n            setStep(nextStep)\r\n        }\r\n    }\r\n\r\n    const handleFirstStepSubmit = (values) => {\r\n        setCashbackInitialValues(values)\r\n        onNext()\r\n    }\r\n    const handleSecondStepSubmit = (values) => {\r\n        setConfigIntialValues(values)\r\n        onNext()\r\n    }\r\n    const goToFirstStep = () => {\r\n        setStep(0)\r\n    }\r\n\r\n    const onNext = () => {\r\n        setStep(step + 1)\r\n    }\r\n\r\n    const onPrevious = () => onChange(step - 1)\r\n    const breadCrumbList=[{\r\n        name:'Home',\r\n        link:\"/home\"\r\n    },{\r\n        name:'Offers & Cashback',\r\n        link:\"/cashbacks\"\r\n    },{\r\n        name: `${mode === 'EDIT' ? 'Edit' : 'Create'} Cashback`,\r\n    }]\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <CustomBreadcrumbs list={breadCrumbList}/>\r\n\r\n            <div>\r\n                <Steps current={step}>\r\n                    <Steps.Item\r\n                        title={\r\n                            selectedMode === 'EDIT'\r\n                                ? 'EDIT CASHBACK'\r\n                                : 'CREATE CASHBACK'\r\n                        }\r\n                    />\r\n                    {/* <Steps.Item title=\"CREATE CONFIG \" /> */}\r\n                    <Steps.Item title=\"PREVIEW\" />\r\n                </Steps>\r\n\r\n                {step == 0 && (\r\n                    <CreateCashBacks\r\n                        cashbackInitialValues={cashbackInitialValues}\r\n                        cashbackValidationSchema={cashbackValidationSchema}\r\n                        handleFirstStepSubmit={handleFirstStepSubmit}\r\n                        selectedMode={selectedMode}\r\n                    />\r\n                )}\r\n                {/* {step == 1 && (\r\n                <CreateConfig\r\n                    configIntialValues={configIntialValues}\r\n                    handleSecondStepSubmit={handleSecondStepSubmit}\r\n                    onPrevious={onPrevious}\r\n                />\r\n            )} */}\r\n                {step == 1 && (\r\n                    <CashBackPreview\r\n                        cashbackInitialValues={cashbackInitialValues}\r\n                        configIntialValues={configIntialValues}\r\n                        onPrevious={onPrevious}\r\n                        goToFirstStep={goToFirstStep}\r\n                        selectedMode={selectedMode}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateCashbackForm\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    apiGetCashBackDetails,\r\n    apiGetCustomerCategoryData,\r\n    apiGetOfferDetails,\r\n} from 'services/OfferService'\r\nimport { apiGetProductCategoryData } from 'services/ProductCategoryService'\r\n\r\nexport const getOffersList = createAsyncThunk(\r\n    'offerCashback/data/getOffersList',\r\n    async (data) => {\r\n        const response = await apiGetOfferDetails(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getCashbacksList = createAsyncThunk(\r\n    'offerCashback/data/getCashbacksList',\r\n    async (data) => {\r\n        const response = await apiGetCashBackDetails(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getProdCatList = createAsyncThunk(\r\n    'offerCashback/data/getProdCatList',\r\n    async (data) => {\r\n        const response = await apiGetProductCategoryData(data)\r\n        return response.data\r\n    }\r\n)\r\nexport const getCustCatList = createAsyncThunk(\r\n    'offerCashback/data/getCustCatList',\r\n    async (data) => {\r\n        const response = await apiGetCustomerCategoryData(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'offerCashback/data',\r\n    initialState: {\r\n        loading: false,\r\n        offerList: [],\r\n        tableData: initialTableData,\r\n        productCategories: [],\r\n        customerCategories: [],\r\n        //cashbacks\r\n        cashbackTableData: initialTableData,\r\n        cashbackList: [],\r\n    },\r\n    reducers: {\r\n        setOfferList: (state, action) => {\r\n            state.offerList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setCashbackTableData: (state, action) => {\r\n            state.cashbackTableData = action.payload\r\n        },\r\n        setCashbackList: (state, action) => {\r\n            state.cashbackList = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getOffersList.fulfilled]: (state, action) => {\r\n            state.offerList = action.payload.res\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOffersList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getProdCatList.fulfilled]: (state, action) => {\r\n            const modified=action.payload.res?.map((product)=> {\r\n                return {...product,\"value\":product?.id,\"label\":product?.prod_cat_title}\r\n            })\r\n        \r\n            state.productCategories = modified\r\n            state.loading = false\r\n        },\r\n        [getProdCatList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCustCatList.fulfilled]: (state, action) => {\r\n            const modified=action.payload.res?.map((customer)=> {\r\n                return {...customer,\"value\":customer?.id,\"label\":customer?.cust_cat_title}\r\n            })\r\n            state.customerCategories = modified\r\n            state.loading = false\r\n        },\r\n        [getCustCatList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        //cashback\r\n        [getCashbacksList.fulfilled]: (state, action) => {\r\n            state.cashbackList = action.payload.res\r\n            state.cashbackTableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getCashbacksList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setOfferList,\r\n    setTableData,\r\n    setCashbackTableData,\r\n    setCashbackList,\r\n} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'salesOrderList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n        newOrderDialog: false,\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowOrder: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowOrder: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n        toggleNewOrderDialog: (state, action) => {\r\n            state.newOrderDialog = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowOrder,\r\n    removeRowOrder,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n    toggleNewOrderDialog\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","apiGetOfferDetails","params","ApiService","url","method","apiGetCustomerCategoryData","apiGetCashBackDetails","apiCreateOfferCashback","resp","status","message","response","toString","apiUpdateOfferCashback","apiUpdateOfferStatus","id","apiGetProductCategoryData","apiProdCategoryCreateUser","apiUpdateProdCatAccStatus","apiUpdateProdCat","apiGetParentAccountProduct","enterAccount","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","Yup","shape","roleId","required","firstName","lastName","emailId","email","phoneNumber","matches","ordemailId","getKeyByValue","object","value","Object","keys","find","key","PercentageInput","props","field","suffix","PriceInput","prefix","FrequencyList","label","CreateCashBacks","cashbackInitialValues","cashbackValidationSchema","handleFirstStepSubmit","useSelector","offerCashback","customerCategories","productCategories","initialValues","validationSchema","onSubmit","values","setSubmitting","touched","errors","handleSubmit","isSubmitting","className","backgroundColor","bodyClass","divider","invalid","offr_code","errorMessage","type","autoComplete","placeholder","component","Input","width","offr_name","offr_start_date","form","Date","onChange","date","setFieldValue","offr_end_date","offr_max_cpns_applcbl","offr_no_of_cpns","offr_timeperiod","options","filter","fq","rel_offr_prod_cat","rel_offr_cust_cat","pc","JSON","parse","cust_cat_type","replace","display","flexDirection","offr_type_fxd_amnt","height","marginLeft","offr_value","customInput","onValueChange","e","operator_share","provider_share","offr_desc","onClick","console","log","variant","onPrevious","configIntialValues","goToFirstStep","selectedMode","navigate","useNavigate","prodCategory","prod","custCategory","cust","payload","dgl_offrs_configs","toast","title","duration","placement","errorMsg","GetErrorMsg","toLocaleDateString","offr_type","injectReducer","reducer","useState","step","setStep","location","useLocation","mode","rowForEdit","dispatch","useDispatch","step1InitialValues","cust_type","cust_id","stpe2IntialValues","offr_config_title","offr_config_details","setCashbackInitialValues","unq_id","auth","user","fetchData","useCallback","getProdCatList","page_no","page_size","unqId","getCustCatList","useEffect","onNext","breadCrumbList","current","nextStep","getOffersList","createAsyncThunk","getCashbacksList","initialTableData","total","pageIndex","pageSize","query","sort","order","dataSlice","createSlice","initialState","loading","offerList","tableData","cashbackTableData","cashbackList","reducers","setOfferList","action","setTableData","setCashbackTableData","setCashbackList","extraReducers","fulfilled","res","pending","modified","product","prod_cat_title","customer","cust_cat_title","actions","stateSlice","selectedRows","selectedRow","deleteMode","newOrderDialog","setSelectedRows","setSelectedRow","addRowOrder","currentState","includes","removeRowOrder","setDeleteMode","toggleNewOrderDialog","toggleDeleteConfirmation","combineReducers"],"sourceRoot":""}