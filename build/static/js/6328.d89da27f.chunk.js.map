{"version":3,"file":"static/js/6328.d89da27f.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","services/OfferService.js","services/ProductCategoryService.js","views/offers&cashback/components/Offers/OffersTableSearch.js","views/offers&cashback/components/Offers/OffersFilters.js","views/offers&cashback/components/Offers/OffersTableTools.js","views/offers&cashback/components/Offers/OffersTable.js","views/offers&cashback/components/cashbacks/CashBackTable.js","views/offers&cashback/components/cashbacks/CashBackTableSearch.js","views/offers&cashback/components/cashbacks/CashBackFilter.js","views/offers&cashback/components/cashbacks/CashBackTableTool.js","views/offers&cashback/components/OfferCashBackTab.js","views/offers&cashback/store/dataSlice.js","views/offers&cashback/store/stateSlice.js","views/offers&cashback/store/index.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import ApiService from './ApiService'\r\n\r\nexport async function apiGetOfferDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/order/offr-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetCustomerCategoryData(params) {\r\n    return ApiService.fetchData({\r\n        url: '/account/cust-cats',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetCashBackDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/order/offr-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateOfferCashback(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/offr-info`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateOfferCashback(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/offr-info`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateOfferStatus(id, status) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/offr-info?id=${id}&offr_status=${status}`,\r\n            method: 'patch',\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateCashbackStatus(id, status) {\r\n    // try {\r\n    //     const resp = await ApiService.fetchData({\r\n    //         url: `catalogs/dgl-wh-info/${id}/${status}`,\r\n    //         method: 'patch',\r\n    //     })\r\n    //     return {\r\n    //         status: 'success',\r\n    //         data: resp,\r\n    //     }\r\n    // } catch (errors) {\r\n    //     return {\r\n    //         status: 'failed',\r\n    //         message: errors?.response?.data || errors.toString(),\r\n    //     }\r\n    // }\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: '/account/prod-cats',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\n\r\nexport async function apiProdCategoryCreateUser(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/prod-cats',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport async function apiUpdateProdCatAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url:`/account/prod-cats?id=${id}&mdProdCatStatus=${status}`,\r\n        // url: `/account/prod-cats?id=${id}&userStatus=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiUpdateProdCat(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/prod-cats/${data.id}`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function apiGetParentAccountProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n\r\nconst OffersTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n   \r\n    // // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            // onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default OffersTableSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst OffersFilters = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OffersFilters\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\n import { Link } from 'react-router-dom'\r\nimport {\r\n    Button,\r\n   \r\n} from 'components/ui'\r\n// import NewOperators from './NewOperators'\r\nimport OffersTableSearch from './OffersTableSearch'\r\nimport OffersFilters from './OffersFilters'\r\n\r\n\r\nconst OffersTableTools = () => {\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <OffersTableSearch/>\r\n            <OffersFilters/>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n                \r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                to=\"/offers-create-offers\"\r\n            >\r\n                <Button block variant=\"solid\" size=\"sm\" icon={<HiPlusCircle />}>\r\n                   Add New Offer\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OffersTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Dialog,\r\n    Notification,\r\n    Tooltip,\r\n    toast,\r\n} from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { RiCheckboxCircleFill, RiCloseCircleFill } from 'react-icons/ri'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {\r\n    getCustCatList,\r\n    getOffersList,\r\n    getProdCatList,\r\n    setTableData,\r\n} from 'views/offers&cashback/store/dataSlice'\r\nimport { cloneDeep } from 'lodash'\r\nimport { apiUpdateOfferStatus } from 'services/OfferService'\r\nimport { GetErrorMsg } from 'views/Servicefile'\r\n\r\nconst ItemStatusColor = {\r\n    ACTIVE: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    SUBMITTED: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    IN_ACTIVE: {\r\n        label: 'Inactive',\r\n        dotClass: 'bg-red-500',\r\n        textClass: 'text-red-500',\r\n    },\r\n}\r\n\r\nconst OffersTable = () => {\r\n    const [isDeactivate, setDeactivate] = useState(false)\r\n    const [row, setRow] = useState('')\r\n    const tableRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.offerCashback.data.tableData\r\n    )\r\n    const { loading, productCategories, offerList } = useSelector(\r\n        (state) => state.offerCashback.data\r\n    )\r\n    const data = offerList\r\n    const { unq_id } = useSelector((state) => state.auth.user)\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getProdCatList({ page_no: 0, page_size: 100, unqId: unq_id }))\r\n        dispatch(getCustCatList({ page_no: 0, page_size: 100, unqId: unq_id }))\r\n        dispatch(\r\n            getOffersList({\r\n                page_no: pageIndex - 1,\r\n                page_size: pageSize,\r\n                offer_type: 'OFFER',\r\n            })\r\n        )\r\n    }, [dispatch, pageIndex, pageSize])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n    const ActionColumn = ({ row }) => {\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n\r\n        const handleClick = () => {\r\n            setDeactivate(true)\r\n            setRow(row)\r\n        }\r\n        const onView = useCallback(() => {\r\n            navigate(`/offer-view`, { state: { data: row } })\r\n        }, [navigate, row])\r\n        const onEdit = useCallback(() => {\r\n            navigate(`/offers-create-offers`, {\r\n                state: { data: row, mode: 'EDIT' },\r\n            })\r\n        }, [navigate, row])\r\n        const iconColor = row.offr_info_status != 'ACTIVE' ? 'green' : 'rose'\r\n        const IconComponent =\r\n            row.offr_info_status != 'ACTIVE'\r\n                ? RiCheckboxCircleFill\r\n                : RiCloseCircleFill\r\n        return (\r\n            <div className=\"flex text-lg\">\r\n                <Tooltip title=\"View\">\r\n                    <span\r\n                        className={`cursor-pointer text-blue-500 p-1 hover:${textTheme}`}\r\n                        onClick={onView}\r\n                    >\r\n                        <HiOutlineEye />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onEdit}\r\n                    >\r\n                        <MdModeEdit />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip\r\n                    title={`${row.offr_info_status !=  'ACTIVE'  ? 'Activate' : 'Deactivate'}`}\r\n                >\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-${iconColor}-800 hover:text-${iconColor}-800`}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <IconComponent />\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Offer Title',\r\n                accessorKey: 'offr_name',\r\n            },\r\n            {\r\n                header: 'Offer Type ',\r\n                accessorKey: 'offr_type',\r\n            },\r\n            {\r\n                header: 'Product Category',\r\n                accessorKey: 'product_category',\r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <span>\r\n                                {\r\n                                    productCategories?.filter(\r\n                                        (i) =>\r\n                                            i?.id ==\r\n                                            props?.row.original\r\n                                                .rel_offr_prod_cat\r\n                                    )?.[0]?.prod_cat_title\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                header: 'Offer Code',\r\n                accessorKey: 'offr_code',\r\n            },\r\n            {\r\n                header: 'Status',\r\n                accessorKey: 'status',\r\n\r\n                cell: (props) => {\r\n                    const { offr_info_status } = props.row.original\r\n\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <Badge className={ItemStatusColor[offr_info_status].dotClass} />\r\n                            <span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[offr_info_status].textClass}`}\r\n                            >\r\n                                {ItemStatusColor[offr_info_status].label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ],\r\n        [productCategories]\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const updateOfferStatus = async () => {\r\n        let isStatus =\r\n            row.offr_info_status === 'IN_ACTIVE' ? 'ACTIVE' : 'IN_ACTIVE'\r\n        const resp = await apiUpdateOfferStatus(row.id, isStatus)\r\n        setDeactivate(false)\r\n        if (resp.status === 'success') {\r\n            console.log(isStatus)\r\n            fetchData()\r\n            toast.push(\r\n                <Notification\r\n                    title={'Offer Status'}\r\n                    type=\"success\"\r\n                    duration={2500}\r\n                >\r\n                  {isStatus == \"IN_ACTIVE\" ? \"Deactivated Successfully\": \"Activated Successfully\"}\r\n                </Notification>,\r\n                {\r\n                    placement: 'top-end',\r\n                }\r\n            )\r\n        } else if (resp.status === 'failed') {\r\n            const errorMsg = GetErrorMsg(resp) || 'Error'\r\n            toast.push(\r\n                <Notification title={'Failed'} type=\"danger\" duration={2500}>\r\n                    {errorMsg}\r\n                </Notification>,\r\n                {\r\n                    placement: 'top-end',\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <DataTable\r\n                ref={tableRef}\r\n                columns={columns}\r\n                data={data}\r\n                loading={loading}\r\n                pagingData={tableData}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n            />\r\n            <Dialog isOpen={isDeactivate} onClose={() => setDeactivate(false)}>\r\n                <h6\r\n                    style={{\r\n                        fontFamily: 'Roboto',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 700,\r\n                        fontSize: '18px',\r\n                        color: '#212121',\r\n                    }}\r\n                >\r\n                    {row.offr_info_status === 'ACTIVE'\r\n                        ? `Deactivate`\r\n                        : `Activate`}\r\n                </h6>\r\n                <hr className=\"text-gary-500 mt-4 mb-4\" />\r\n                <p\r\n                    style={{\r\n                        fontFamily: 'Roboto',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 400,\r\n                        fontSize: '15px',\r\n                        color: '#333333',\r\n                    }}\r\n                >\r\n                    {row.offr_info_status == 'ACTIVE'\r\n                        ? `Are you sure you want to deactivate this account ?`\r\n                        : `Are you sure you want to Activate this account ?`}\r\n                </p>\r\n                <div className=\"mt-6 text-end\">\r\n                    <Button\r\n                        style={{\r\n                            backgroundColor: '#4D4D4D',\r\n                            color: 'white',\r\n                            borderRadius: '2px',\r\n                        }}\r\n                        className=\"mr-3\"\r\n                        onClick={() => setDeactivate(false)}\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button variant=\"solid\" onClick={() => updateOfferStatus()}>\r\n                        Yes\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OffersTable\r\n","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Dialog,\r\n    Notification,\r\n    Tooltip,\r\n    toast,\r\n} from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { RiCheckboxCircleFill, RiCloseCircleFill } from 'react-icons/ri'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {\r\n    getCustCatList,\r\n    getCashbacksList,\r\n    getProdCatList,\r\n    setTableData,\r\n} from 'views/offers&cashback/store/dataSlice'\r\nimport { cloneDeep } from 'lodash'\r\nimport { apiUpdateCashbackStatus, apiUpdateOfferStatus } from 'services/OfferService'\r\nimport { GetErrorMsg } from 'views/Servicefile'\r\n\r\nconst ItemStatusColor = {\r\n    ACTIVE: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    SUBMITTED: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    IN_ACTIVE: {\r\n        label: 'Inactive',\r\n        dotClass: 'bg-red-500',\r\n        textClass: 'text-red-500',\r\n    },\r\n}\r\n\r\nconst CashBackTable = () => {\r\n    const [isDeactivate, setDeactivate] = useState(false)\r\n    const [row, setRow] = useState('')\r\n    const tableRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.offerCashback.data.cashbackTableData\r\n    )\r\n    const { loading, productCategories, cashbackList } = useSelector(\r\n        (state) => state.offerCashback.data\r\n    )\r\n    const data = cashbackList\r\n    const { unq_id } = useSelector((state) => state.auth.user)\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getProdCatList({ page_no: 0, page_size: 100, unqId: unq_id }))\r\n        dispatch(getCustCatList({ page_no: 0, page_size: 100, unqId: unq_id }))\r\n        dispatch(\r\n            getCashbacksList({\r\n                page_no: pageIndex - 1,\r\n                page_size: pageSize,\r\n                offer_type: 'CASHBACK',\r\n            })\r\n        )\r\n    }, [dispatch, pageIndex, pageSize])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n    const ActionColumn = ({ row }) => {\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n\r\n        const handleClick = () => {\r\n            setDeactivate(true)\r\n            setRow(row)\r\n        }\r\n        const onView = useCallback(() => {\r\n            navigate(`/cashback-view`, { state: { data: row } })\r\n        }, [navigate, row])\r\n        const onEdit = useCallback(() => {\r\n            navigate(`/create-cashback`, {\r\n                state: { data: row, mode: 'EDIT' },\r\n            })\r\n        }, [navigate, row])\r\n        const iconColor = row.offr_info_status != 'ACTIVE' ? 'green' : 'rose'\r\n        const IconComponent =\r\n            row.offr_info_status != 'ACTIVE'\r\n                ? RiCheckboxCircleFill\r\n                : RiCloseCircleFill\r\n        return (\r\n            <div className=\"flex text-lg\">\r\n                <Tooltip title=\"View\">\r\n                    <span\r\n                        className={`cursor-pointer text-blue-500 p-1 hover:${textTheme}`}\r\n                        onClick={onView}\r\n                    >\r\n                        <HiOutlineEye />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onEdit}\r\n                    >\r\n                        <MdModeEdit />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip\r\n                            title={`${row.offr_info_status !=  'ACTIVE'  ? 'Activate' : 'Deactivate'}`}\r\n                >\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-${iconColor}-800 hover:text-${iconColor}-800`}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <IconComponent />\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Cashback Title',\r\n                accessorKey: 'offr_name',\r\n            },\r\n            {\r\n                header: 'Offer Type ',\r\n                accessorKey: 'offr_type',\r\n            },\r\n            {\r\n                header: 'Product Category',\r\n                accessorKey: 'product_category',\r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <span>\r\n                                {\r\n                                    productCategories?.filter(\r\n                                        (i) =>\r\n                                            i?.id ==\r\n                                            props?.row.original\r\n                                                .rel_offr_prod_cat\r\n                                    )?.[0]?.prod_cat_title\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                header: 'Cashback Code',\r\n                accessorKey: 'offr_code',\r\n            },\r\n            {\r\n                header: 'Status',\r\n                accessorKey: 'status',\r\n\r\n                cell: (props) => {\r\n                    const { offr_info_status } = props.row.original\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <Badge className={ItemStatusColor[offr_info_status].dotClass} />\r\n                            <span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[offr_info_status].textClass}`}\r\n                            >\r\n                                {ItemStatusColor[offr_info_status].label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ],\r\n        [productCategories]\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const updateOfferStatus = async () => {\r\n        let isStatus =\r\n        row.offr_info_status === 'IN_ACTIVE' ? 'ACTIVE' : 'IN_ACTIVE'\r\n    const resp = await apiUpdateOfferStatus(row.id, isStatus)\r\n        setDeactivate(false)\r\n        if (resp.status === 'success') {\r\n            console.log(isStatus)\r\n            fetchData()\r\n            toast.push(\r\n                <Notification\r\n                    title={'Cashback Status'}\r\n                    type=\"success\"\r\n                    duration={2500}\r\n                >\r\n                  {isStatus == \"IN_ACTIVE\" ? \"Deactivated Successfully\": \"Activated Successfully\"}\r\n                </Notification>,\r\n                {\r\n                    placement: 'top-end',\r\n                }\r\n            )\r\n        } else if (resp.status === 'failed') {\r\n            const errorMsg = GetErrorMsg(resp) || 'Error'\r\n            toast.push(\r\n                <Notification title={'Failed'} type=\"danger\" duration={2500}>\r\n                    {errorMsg}\r\n                </Notification>,\r\n                {\r\n                    placement: 'top-end',\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <DataTable\r\n                ref={tableRef}\r\n                columns={columns}\r\n                data={data}\r\n                loading={loading}\r\n                pagingData={tableData}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n            />\r\n            <Dialog isOpen={isDeactivate} onClose={() => setDeactivate(false)}>\r\n                <h6\r\n                    style={{\r\n                        fontFamily: 'Roboto',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 700,\r\n                        fontSize: '18px',\r\n                        color: '#212121',\r\n                    }}\r\n                >\r\n                          {row.offr_info_status === 'ACTIVE'\r\n                        ? `Deactivate`\r\n                        : `Activate`}\r\n                </h6>\r\n                <hr className=\"text-gary-500 mt-4 mb-4\" />\r\n                <p\r\n                    style={{\r\n                        fontFamily: 'Roboto',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 400,\r\n                        fontSize: '15px',\r\n                        color: '#333333',\r\n                    }}\r\n                >\r\n                     {row.offr_info_status == 'ACTIVE'\r\n                        ? `Are you sure you want to deactivate this account ?`\r\n                        : `Are you sure you want to Activate this account ?`}\r\n                </p>\r\n                <div className=\"mt-6 text-end\">\r\n                    <Button\r\n                        style={{\r\n                            backgroundColor: '#4D4D4D',\r\n                            color: 'white',\r\n                            borderRadius: '2px',\r\n                        }}\r\n                        className=\"mr-3\"\r\n                        onClick={() => setDeactivate(false)}\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button variant=\"solid\" onClick={() => updateOfferStatus()}>\r\n                        Yes\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CashBackTable\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { getItems, setTableData } from '../store/dataSlice'\r\n// import debounce from 'lodash/debounce'\r\n// import cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst CashBackTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    // const searchInput = useRef()\r\n\r\n    // const tableData = useSelector(\r\n    //     (state) => state.itemsList.data.tableData\r\n    // )\r\n\r\n    // const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    // function handleDebounceFn(val) {\r\n        // const newTableData = cloneDeep(tableData)\r\n        // newTableData.query = val\r\n        // newTableData.pageIndex = 1\r\n    //     if (typeof val === 'string' && val.length > 1) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n\r\n    //     if (typeof val === 'string' && val.length === 0) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n    // }\r\n\r\n    // const fetchData = (data) => {\r\n    //     dispatch(setTableData(data))\r\n    //     dispatch(getItems(data))\r\n    // }\r\n\r\n    // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <Input\r\n            ref={{}}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search Cashback\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={\"\"}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CashBackTableSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst CashBackFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CashBackFilter\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Radio,\r\n    FormItem,\r\n    FormContainer,\r\n    Drawer,\r\n} from 'components/ui'\r\nimport CashBackTableSearch from './CashBackTableSearch'\r\nimport CashBackFilter from './CashBackFilter'\r\n\r\n\r\nconst CashBackTableTools = () => {\r\n    return (\r\n        \r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <CashBackTableSearch />\r\n           <CashBackFilter/>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                to=\"/create-cashback\"\r\n            >\r\n                <Button block variant=\"solid\" size=\"sm\" icon={<HiPlusCircle />}>\r\n                   Add Cashbacks\r\n                </Button>\r\n            </Link>\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashBackTableTools\r\n","import React from 'react'\r\nimport { Tabs } from 'components/ui'\r\n// import DiscountOrdersTableTools from './discountOrders/DiscountOrdersTableTools'\r\n// import DiscOrdersTable from './discountOrders/DiscountOrdersTables'\r\nimport OffersTableTools from './Offers/OffersTableTools'\r\nimport OffersTable from './Offers/OffersTable'\r\nimport CashBackTable from './cashbacks/CashBackTable'\r\nimport CashBackTableTools from './cashbacks/CashBackTableTool'\r\nimport { injectReducer } from 'store'\r\nimport reducer from '../store'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nconst { TabNav, TabList, TabContent } = Tabs\r\ninjectReducer('offerCashback', reducer)\r\nconst OfferCashBackTab = () => {\r\n    const {name}=useParams()\r\n    const navigate= useNavigate()\r\n    const breadCrumbList = [\r\n        {\r\n            name: 'Home',\r\n            link: '/home',\r\n        },\r\n        {\r\n            name: 'Offers & Cashback',\r\n        },\r\n    ]\r\n    return (\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n        <div>\r\n            <CustomBreadcrumbs list={breadCrumbList} />\r\n            <Tabs defaultValue={name} onChange={(val)=>navigate(`/offers-and-cashbacks/${val}`)}>\r\n                <TabList>\r\n                    <TabNav value=\"offers\">Offers</TabNav>\r\n                    <TabNav value=\"cashbacks\">Cashbacks</TabNav>\r\n                    {/* <TabNav value=\"discountorder\">Discounted Orders</TabNav> */}\r\n                </TabList>\r\n                <div>\r\n                    <TabContent value=\"offers\">\r\n                        <div className=\"lg:flex items-center justify-between mt-6 mb-6\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Offers</h3>\r\n                            <OffersTableTools />\r\n                        </div>\r\n                        <OffersTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"cashbacks\">\r\n                        <div className=\"lg:flex items-center justify-between mt-6 mb-6\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Cashbacks</h3>\r\n                            <CashBackTableTools />\r\n                        </div>\r\n                        <CashBackTable />\r\n                    </TabContent>\r\n                    {/* <TabContent value=\"discountorder\">\r\n                        <div className=\"lg:flex items-center justify-between mt-6 mb-6\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Discount Orders</h3>\r\n                            <DiscountOrdersTableTools />\r\n                        </div>\r\n                        <DiscOrdersTable />\r\n                    </TabContent> */}\r\n                </div>\r\n            </Tabs>\r\n        </div>\r\n        </AdaptableCard>\r\n    )\r\n}\r\n\r\nexport default OfferCashBackTab\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    apiGetCashBackDetails,\r\n    apiGetCustomerCategoryData,\r\n    apiGetOfferDetails,\r\n} from 'services/OfferService'\r\nimport { apiGetProductCategoryData } from 'services/ProductCategoryService'\r\n\r\nexport const getOffersList = createAsyncThunk(\r\n    'offerCashback/data/getOffersList',\r\n    async (data) => {\r\n        const response = await apiGetOfferDetails(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getCashbacksList = createAsyncThunk(\r\n    'offerCashback/data/getCashbacksList',\r\n    async (data) => {\r\n        const response = await apiGetCashBackDetails(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getProdCatList = createAsyncThunk(\r\n    'offerCashback/data/getProdCatList',\r\n    async (data) => {\r\n        const response = await apiGetProductCategoryData(data)\r\n        return response.data\r\n    }\r\n)\r\nexport const getCustCatList = createAsyncThunk(\r\n    'offerCashback/data/getCustCatList',\r\n    async (data) => {\r\n        const response = await apiGetCustomerCategoryData(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'offerCashback/data',\r\n    initialState: {\r\n        loading: false,\r\n        offerList: [],\r\n        tableData: initialTableData,\r\n        productCategories: [],\r\n        customerCategories: [],\r\n        //cashbacks\r\n        cashbackTableData: initialTableData,\r\n        cashbackList: [],\r\n    },\r\n    reducers: {\r\n        setOfferList: (state, action) => {\r\n            state.offerList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setCashbackTableData: (state, action) => {\r\n            state.cashbackTableData = action.payload\r\n        },\r\n        setCashbackList: (state, action) => {\r\n            state.cashbackList = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getOffersList.fulfilled]: (state, action) => {\r\n            state.offerList = action.payload.res\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOffersList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getProdCatList.fulfilled]: (state, action) => {\r\n            const modified=action.payload.res?.map((product)=> {\r\n                return {...product,\"value\":product?.id,\"label\":product?.prod_cat_title}\r\n            })\r\n        \r\n            state.productCategories = modified\r\n            state.loading = false\r\n        },\r\n        [getProdCatList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCustCatList.fulfilled]: (state, action) => {\r\n            const modified=action.payload.res?.map((customer)=> {\r\n                return {...customer,\"value\":customer?.id,\"label\":customer?.cust_cat_title}\r\n            })\r\n            state.customerCategories = modified\r\n            state.loading = false\r\n        },\r\n        [getCustCatList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        //cashback\r\n        [getCashbacksList.fulfilled]: (state, action) => {\r\n            state.cashbackList = action.payload.res\r\n            state.cashbackTableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getCashbacksList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setOfferList,\r\n    setTableData,\r\n    setCashbackTableData,\r\n    setCashbackList,\r\n} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'salesOrderList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n        newOrderDialog: false,\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowOrder: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowOrder: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n        toggleNewOrderDialog: (state, action) => {\r\n            state.newOrderDialog = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowOrder,\r\n    removeRowOrder,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n    toggleNewOrderDialog\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","apiGetOfferDetails","params","ApiService","url","method","apiGetCustomerCategoryData","apiGetCashBackDetails","apiCreateOfferCashback","resp","status","message","response","toString","apiUpdateOfferCashback","apiUpdateOfferStatus","id","apiGetProductCategoryData","apiProdCategoryCreateUser","apiUpdateProdCatAccStatus","apiUpdateProdCat","apiGetParentAccountProduct","enterAccount","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","searchInput","useRef","ref","className","size","placeholder","prefix","icon","onClick","target","download","block","variant","ItemStatusColor","ACTIVE","label","dotClass","textClass","SUBMITTED","IN_ACTIVE","useState","isDeactivate","setDeactivate","row","setRow","tableRef","dispatch","useDispatch","useSelector","offerCashback","tableData","pageIndex","pageSize","sort","query","total","loading","productCategories","offerList","unq_id","auth","user","fetchData","useCallback","getProdCatList","page_no","page_size","unqId","getCustCatList","getOffersList","offer_type","useEffect","useMemo","ActionColumn","textTheme","useThemeClass","navigate","useNavigate","onView","onEdit","mode","iconColor","offr_info_status","IconComponent","RiCheckboxCircleFill","RiCloseCircleFill","title","columns","header","cell","props","original","accessorKey","filter","i","rel_offr_prod_cat","prod_cat_title","updateOfferStatus","isStatus","console","log","toast","type","duration","placement","errorMsg","GetErrorMsg","pagingData","onPaginationChange","page","newTableData","cloneDeep","setTableData","onSelectChange","value","Number","onSort","isOpen","onClose","fontFamily","fontStyle","fontWeight","fontSize","backgroundColor","borderRadius","cashbackTableData","cashbackList","getCashbacksList","onChange","TabNav","Tabs","TabList","TabContent","injectReducer","reducer","useParams","bodyClass","defaultValue","CashBackTableTool","createAsyncThunk","initialTableData","order","key","dataSlice","createSlice","initialState","customerCategories","reducers","setOfferList","action","payload","setCashbackTableData","setCashbackList","extraReducers","fulfilled","res","pending","modified","product","customer","cust_cat_title","actions","stateSlice","selectedRows","selectedRow","deleteMode","newOrderDialog","setSelectedRows","setSelectedRow","addRowOrder","currentState","current","includes","removeRowOrder","setDeleteMode","toggleNewOrderDialog","toggleDeleteConfirmation","combineReducers"],"sourceRoot":""}