{"version":3,"file":"static/js/7921.ccc1549b.chunk.js","mappings":"2PA4DA,EAvDa,SAAH,GAAwC,IAAlCA,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAAYC,GAAI,YACtC,OACI,gBAAKC,UAAU,8BAA6B,UAExC,iBACIA,UAAU,wHACVC,MAAO,CACHC,gBAAgB,mCAClB,WAEF,iBAAKF,UAAU,wBAAuB,WAClC,gBAAKA,UAAU,OAAM,SAAEF,IACtBD,GAAWM,EAAAA,EAAAA,cAAaN,GAAS,UAAME,IAAU,SAGtD,gBAAKC,UAAU,4BAA2B,UACtC,iBAAKA,UAAU,OAAM,WACjB,kBAAMC,MAAO,CAAEG,MAAO,SAAU,6BACjB,IAAIC,MAAOC,eAAiB,KACvC,iBAAMN,UAAU,gBAAe,mBAAKO,EAAAA,MAAkB,oCAG1D,iBAAKP,UAAU,OAAOC,MAAO,CAAEG,MAAO,SAAU,WAC5C,cACIJ,UAAU,YACVQ,KAAK,8CACLC,OAAO,SAAQ,gCAOnB,iBAAMT,UAAU,kBAAiB,kBACjC,cACIA,UAAU,YACVQ,KAAK,KACLE,QAAS,SAACC,GAAC,OAAKA,EAAEC,gBAAgB,EAAC,0CAgBnE,E,iCClCA,EAhBmB,SAACC,GAChB,IAAMC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,MAAMC,OAAOC,IAAI,IAEjE,OACI,gBAAKnB,UAAU,qDAAoD,SAC9Dc,IAAeM,EAAAA,IACZ,SAAC,KAAI,UAAKP,KAEV,SAAC,EAAI,WACD,SAAC,KAAI,UAAKA,OAK9B,C,iHCbMQ,EAAO,SAACR,GACV,IAAQM,EAA8DN,EAA9DM,KAAMG,EAAwDT,EAAxDS,KAAMC,EAAkDV,EAAlDU,OAAQvB,EAA0Ca,EAA1Cb,UAAWwB,EAA+BX,EAA/BW,SAAUvB,EAAqBY,EAArBZ,MAAOwB,EAAcZ,EAAdY,UACxD,GACIV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMU,MAAM,IAD/BC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBC,EAAc,EAAdA,eAE9C,OACI,gBACI9B,UAAW+B,IAAW,OAAQ/B,EAAWuB,GACzCtB,OAAK,kBACEA,GACA,CAAE+B,MAAOP,IACd,SAEDE,GAAsB,SAATR,GAA4B,UAATG,GAC7B,gBACItB,UAAWwB,EACXS,IAAG,UAAKC,EAAAA,EAAAA,UAAmB,yBAAiBP,GAC5CQ,IAAI,eAERP,GAAsB,eAATT,GAAkC,UAATG,GACtC,gBACItB,UAAWwB,EACXS,IAAG,UAAKC,EAAAA,EAAAA,UAAmB,yBAAiBN,GAC5CO,IAAI,eAERN,GAA2B,SAATV,GAA4B,SAATG,GAMrCO,GAA2B,SAATV,GAA4B,SAATG,GALrC,gBACItB,UAAWwB,EACXS,IAAG,UAAKC,EAAAA,EAAAA,UAAmB,yBAAiBL,GAC5CM,IAAI,eAQRL,GAA2B,eAATX,GAAkC,SAATG,GAC3C,gBACItB,UAAWwB,EACXS,IAAG,UAAKC,EAAAA,EAAAA,UAAmB,yBAAiBJ,GAC5CK,IAAI,gBAGR,gBACInC,UAAWwB,EACXS,IAAG,UA/CD,aA+CmB,gBAAQX,EAAI,YAAIH,EAAI,QACzCgB,IAAG,UAAK5B,EAAAA,GAAQ,YAKpC,EAEAc,EAAKe,aAAe,CAChBd,KAAM,QACNH,KAAM,OACNM,UAAW,QAWf,K","sources":["components/layout/AuthLayout/Side.js","components/layout/AuthLayout/index.js","components/template/Logo.js"],"sourcesContent":["import React, { cloneElement } from 'react'\r\nimport { Avatar } from 'components/ui'\r\nimport Logo from 'components/template/Logo'\r\nimport { APP_NAME } from 'constants/app.constant'\r\n\r\nconst Side = ({ children, content, ...rest }) => {\r\n    return (\r\n        <div className=\"grid lg:grid-cols-3 h-full \"\r\n        >\r\n            <div\r\n                className=\"col-span-12 bg-no-repeat bg-cover flex  flex-col justify-center items-center bg-white dark:bg-gray-800 hidden lg:flex\"\r\n                style={{\r\n                    backgroundImage: `url('/img/avatars/loginbg.jpg')`,\r\n                }}\r\n            >\r\n                <div className=\"xl:min-w-[450px] px-8\">\r\n                    <div className=\"mb-4\">{content}</div>\r\n                    {children ? cloneElement(children, { ...rest }) : null}\r\n                </div>\r\n\r\n                <div className='mb-2 mt-3 position-fixed '>\r\n                    <div className='flex' >\r\n                        <span style={{ color: \"white\" }}>\r\n                            &copy; {`${new Date().getFullYear()}`}{' '}\r\n                            <span className=\"font-semibold\">{`${APP_NAME}`}</span> All\r\n                            rights reserved. (v1.10)\r\n                        </span>\r\n                        <div className=\"ml-8\" style={{ color: \"white\" }}>\r\n                            <a\r\n                                className=\"text-gray\"\r\n                                href='https://cmp.airlinq.com:7880/AQPrivacyTerms'\r\n                                target=\"_blank\"\r\n                                \r\n                            >\r\n                              \r\n                                Term & Conditions\r\n                                \r\n                            </a>\r\n                            <span className=\"mx-2 text-muted\"> | </span>\r\n                            <a\r\n                                className=\"text-gray\"\r\n                                href=\"/#\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                            >\r\n                                Privacy & Policy\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Side\r\n","import React from 'react'\r\nimport Side from './Side'\r\n// import Cover from './Cover'\r\n// import Simple from './Simple'\r\nimport View from 'views'\r\nimport { useSelector } from 'react-redux'\r\nimport { LAYOUT_TYPE_BLANK } from 'constants/theme.constant'\r\n\r\nconst AuthLayout = (props) => {\r\n    const layoutType = useSelector((state) => state.theme.layout.type)\r\n\r\n    return (\r\n        <div className=\"app-layout-blank flex flex-auto flex-col h-[100vh]\">\r\n            {layoutType === LAYOUT_TYPE_BLANK ? (\r\n                <View {...props} />\r\n            ) : (\r\n                <Side>\r\n                    <View {...props} />\r\n                </Side>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthLayout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { APP_NAME } from 'constants/app.constant'\r\nimport { useSelector } from 'react-redux'\r\nimport appConfig from 'configs/app.config'\r\n\r\nconst LOGO_SRC_PATH = '/img/logo/'\r\n\r\nconst Logo = (props) => {\r\n    const { type, mode, gutter, className, imgClass, style, logoWidth } = props\r\n    const { largeLogo, smallLogo, themeLargeLogo, themeSmallLogo } =\r\n        useSelector((state) => state.locale)\r\n    return (\r\n        <div\r\n            className={classNames('logo', className, gutter)}\r\n            style={{\r\n                ...style,\r\n                ...{ width: logoWidth },\r\n            }}\r\n        >\r\n            {largeLogo && type === 'full' && mode === 'light' ? (\r\n                <img\r\n                    className={imgClass}\r\n                    src={`${appConfig.apiPrefix}/media/uniqid/${largeLogo}`}\r\n                    alt=\"large logo\"\r\n                />\r\n            ) : smallLogo && type === 'streamline' && mode === 'light' ? (\r\n                <img\r\n                    className={imgClass}\r\n                    src={`${appConfig.apiPrefix}/media/uniqid/${smallLogo}`}\r\n                    alt=\"small logo\"\r\n                />\r\n            ) : themeLargeLogo && type === 'full' && mode === 'dark' ? (\r\n                <img\r\n                    className={imgClass}\r\n                    src={`${appConfig.apiPrefix}/media/uniqid/${themeLargeLogo}`}\r\n                    alt=\"small logo\"\r\n                />\r\n            ) : themeLargeLogo && type === 'full' && mode === 'dark' ? (\r\n                <img\r\n                    className={imgClass}\r\n                    src={`${appConfig.apiPrefix}/media/uniqid/${themeLargeLogo}`}\r\n                    alt=\"small logo\"\r\n                />\r\n            ) : themeSmallLogo && type === 'streamline' && mode === 'dark' ? (\r\n                <img\r\n                    className={imgClass}\r\n                    src={`${appConfig.apiPrefix}/media/uniqid/${themeSmallLogo}`}\r\n                    alt=\"small logo\"\r\n                />\r\n            ) : (\r\n                <img\r\n                    className={imgClass}\r\n                    src={`${LOGO_SRC_PATH}logo-${mode}-${type}.png`}\r\n                    alt={`${APP_NAME} logo`}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nLogo.defaultProps = {\r\n    mode: 'light',\r\n    type: 'full',\r\n    logoWidth: 'auto',\r\n}\r\n\r\nLogo.propTypes = {\r\n    mode: PropTypes.oneOf(['light', 'dark']),\r\n    type: PropTypes.oneOf(['full', 'streamline']),\r\n    gutter: PropTypes.string,\r\n    imgClass: PropTypes.string,\r\n    logoWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n}\r\n\r\nexport default Logo\r\n"],"names":["children","content","rest","className","style","backgroundImage","cloneElement","color","Date","getFullYear","APP_NAME","href","target","onClick","e","preventDefault","props","layoutType","useSelector","state","theme","layout","type","LAYOUT_TYPE_BLANK","Logo","mode","gutter","imgClass","logoWidth","locale","largeLogo","smallLogo","themeLargeLogo","themeSmallLogo","classNames","width","src","appConfig","alt","defaultProps"],"sourceRoot":""}