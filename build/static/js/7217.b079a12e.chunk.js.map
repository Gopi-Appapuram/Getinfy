{"version":3,"file":"static/js/7217.b079a12e.chunk.js","mappings":"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","sources":["mock/data/timezones.js","services/GenSettings.js","services/RetailService.js","views/settings/generalSettings/store/dataSlice.js"],"sourcesContent":["export const timeZone = [\r\n    { id: 1, value: '(UTC-10:00) Hawaii' },\r\n    { id: 2, value: '(UTC-09:00) Alaska' },\r\n    { id: 3, value: '(UTC-08:00) Baja California' },\r\n    { id: 4, value: '(UTC-08:00) Pacific Time (US & Canada)' },\r\n    { id: 5, value: '(UTC-07:00) Arizona' },\r\n    { id: 6, value: '(UTC-07:00) Chihuahua, La Paz, Mazatlan' },\r\n    { id: 7, value: '(UTC-07:00) Mountain Time (US & Canada)' },\r\n    { id: 8, value: '(UTC-06:00) Central America' },\r\n    { id: 9, value: '(UTC-06:00) Central Time (US & Canada)' },\r\n    { id: 10, value: '(UTC-06:00) Guadalajara, Mexico City, Monterrey' },\r\n    { id: 11, value: '(UTC-06:00) Saskatchewan' },\r\n    { id: 12, value: '(UTC-05:00) Bogota, Lima, Quito, Rio Branco' },\r\n    { id: 13, value: '(UTC-05:00) Eastern Time (US & Canada)' },\r\n    { id: 14, value: '(UTC-05:00) Indiana (East)' },\r\n    { id: 15, value: '(UTC-04:30) Caracas' },\r\n    { id: 16, value: '(UTC-04:00) Asuncion' },\r\n    { id: 17, value: '(UTC-04:00) Atlantic Time (Canada)' },\r\n    { id: 18, value: '(UTC-04:00) Cuiaba' },\r\n    { id: 19, value: '(UTC-04:00) Georgetown, La Paz, Manaus, San Juan' },\r\n    { id: 20, value: '(UTC-04:00) Santiago' },\r\n    { id: 21, value: '(UTC-03:30) Newfoundland' },\r\n    { id: 22, value: '(UTC-03:00) Brasilia' },\r\n    { id: 23, value: '(UTC-03:00) Buenos Aires' },\r\n    { id: 24, value: '(UTC-03:00) Cayenne, Fortaleza' },\r\n    { id: 25, value: '(UTC-03:00) Greenland' },\r\n    { id: 26, value: '(UTC-03:00) Montevideo' },\r\n    { id: 27, value: '(UTC-03:00) Salvador' },\r\n    { id: 28, value: '(UTC-02:00) Coordinated Universal Time-02' },\r\n    { id: 29, value: '(UTC-01:00) Azores' },\r\n    { id: 30, value: '(UTC-01:00) Cape Verde Is.' },\r\n    { id: 31, value: '(UTC) Casablanca' },\r\n    { id: 32, value: '(UTC) Coordinated Universal Time' },\r\n    { id: 33, value: '(UTC) Dublin, Edinburgh, Lisbon, London' },\r\n    { id: 34, value: '(UTC) Monrovia, Reykjavik' },\r\n    {\r\n        id: 35,\r\n        value: '(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',\r\n    },\r\n    {\r\n        id: 36,\r\n        value: '(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague',\r\n    },\r\n    { id: 37, value: '(UTC+01:00) Brussels, Copenhagen, Madrid, Paris' },\r\n    { id: 38, value: '(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb' },\r\n    { id: 39, value: '(UTC+01:00) West Central Africa' },\r\n    { id: 40, value: '(UTC+01:00) Windhoek' },\r\n    { id: 41, value: '(UTC+02:00) Amman' },\r\n    { id: 42, value: '(UTC+02:00) Athens, Bucharest' },\r\n    { id: 43, value: '(UTC+02:00) Beirut' },\r\n    { id: 44, value: '(UTC+02:00) Cairo' },\r\n    { id: 45, value: '(UTC+02:00) Damascus' },\r\n    { id: 46, value: '(UTC+02:00) E. Europe' },\r\n    { id: 47, value: '(UTC+02:00) Harare, Pretoria' },\r\n    {\r\n        id: 48,\r\n        value: '(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius',\r\n    },\r\n    { id: 49, value: '(UTC+02:00) Istanbul' },\r\n    { id: 50, value: '(UTC+02:00) Jerusalem' },\r\n    { id: 51, value: '(UTC+02:00) Kaliningrad (RTZ 1)' },\r\n    { id: 52, value: '(UTC+02:00) Tripoli' },\r\n    { id: 53, value: '(UTC+03:00) Baghdad' },\r\n    { id: 54, value: '(UTC+03:00) Kuwait, Riyadh' },\r\n    { id: 55, value: '(UTC+03:00) Minsk' },\r\n    { id: 56, value: '(UTC+03:00) Moscow, St. Petersburg, Volgograd (RTZ 2)' },\r\n    { id: 57, value: '(UTC+03:00) Nairobi' },\r\n    { id: 58, value: '(UTC+03:30) Tehran' },\r\n    { id: 59, value: '(UTC+04:00) Abu Dhabi, Muscat' },\r\n    { id: 60, value: '(UTC+04:00) Baku' },\r\n    { id: 61, value: '(UTC+04:00) Izhevsk, Samara (RTZ 3)' },\r\n    { id: 62, value: '(UTC+04:00) Port Louis' },\r\n    { id: 63, value: '(UTC+04:00) Tbilisi' },\r\n    { id: 64, value: '(UTC+04:00) Yerevan' },\r\n    { id: 65, value: '(UTC+04:30) Kabul' },\r\n    { id: 66, value: '(UTC+05:00) Ashgabat, Tashkent' },\r\n    { id: 67, value: '(UTC+05:00) Ekaterinburg (RTZ 4)' },\r\n    { id: 68, value: '(UTC+05:00) Islamabad, Karachi' },\r\n    { id: 69, value: '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi' },\r\n    { id: 70, value: '(UTC+05:30) Sri Jayawardenepura' },\r\n    { id: 71, value: '(UTC+05:45) Kathmandu' },\r\n    { id: 72, value: '(UTC+06:00) Astana' },\r\n    { id: 73, value: '(UTC+06:00) Dhaka' },\r\n    { id: 74, value: '(UTC+06:00) Novosibirsk (RTZ 5)' },\r\n    { id: 75, value: '(UTC+06:30) Yangon (Rangoon)' },\r\n    { id: 76, value: '(UTC+07:00) Bangkok, Hanoi, Jakarta' },\r\n    { id: 77, value: '(UTC+07:00) Krasnoyarsk (RTZ 6)' },\r\n    { id: 78, value: '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi' },\r\n    { id: 79, value: '(UTC+08:00) Irkutsk (RTZ 7)' },\r\n    { id: 80, value: '(UTC+08:00) Kuala Lumpur, Singapore' },\r\n    { id: 81, value: '(UTC+08:00) Perth' },\r\n    { id: 82, value: '(UTC+08:00) Taipei' },\r\n    { id: 83, value: '(UTC+08:00) Ulaanbaatar' },\r\n    { id: 84, value: '(UTC+09:00) Osaka, Sapporo, Tokyo' },\r\n    { id: 85, value: '(UTC+09:00) Seoul' },\r\n    { id: 86, value: '(UTC+09:00) Yakutsk (RTZ 8)' },\r\n    { id: 87, value: '(UTC+09:30) Adelaide' },\r\n    { id: 88, value: '(UTC+09:30) Darwin' },\r\n    { id: 89, value: '(UTC+10:00) Brisbane' },\r\n    { id: 90, value: '(UTC+10:00) Canberra, Melbourne, Sydney' },\r\n    { id: 91, value: '(UTC+10:00) Guam, Port Moresby' },\r\n    { id: 92, value: '(UTC+10:00) Hobart' },\r\n    { id: 93, value: '(UTC+10:00) Magadan' },\r\n    { id: 94, value: '(UTC+10:00) Vladivostok, Magadan (RTZ 9)' },\r\n    { id: 95, value: '(UTC+11:00) Chokurdakh (RTZ 10)' },\r\n    { id: 96, value: '(UTC+11:00) Solomon Is., New Caledonia' },\r\n    { id: 97, value: '(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky (RTZ 11)' },\r\n    { id: 98, value: '(UTC+12:00) Auckland, Wellington' },\r\n    { id: 99, value: '(UTC+12:00) Coordinated Universal Time+12' },\r\n    { id: 100, value: '(UTC+12:00) Fiji' },\r\n    { id: 101, value: '(UTC+12:00) Petropavlovsk-Kamchatsky - Old' },\r\n    { id: 102, value: \"(UTC+13:00) Nuku'alofa\" },\r\n    { id: 103, value: '(UTC+13:00) Samoa' },\r\n    { id: 104, value: '(UTC+14:00) Kiritimati Island' },\r\n]\r\n","import ApiService from \"./ApiService\";\r\n\r\nexport async function apiGetOperaters(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetOperaterByID(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/set-gens/unq-id/${data}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUpdateGenSettings(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/set-gens/${data.id}`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiCreateGenSettings(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/set-gens`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport async function apiUpdateRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: '/account/acc-operators',\r\n        method: 'put',\r\n        data,\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// export async function apiGetSalesOrders(params) {\r\n//     return ApiService.fetchData({\r\n//         url: '/retails/sales/orders',\r\n//         method: 'get',\r\n//         params,\r\n//     })\r\n// }\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n\r\n    return ApiService.fetchData({\r\n        //url: `/account/retail-customers?page_no=${params.pageIndex}&page_size=${params.pageSize}&sort_field=${params.sort.key}`,\r\n\r\n        url: `/account/retail-customers`,\r\n\r\n        method: 'get',\r\n        params\r\n\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateRetailAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/retail-customers?id=${id}&cust_status=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetCustomerCatRetail(data) {\r\n\r\n    return ApiService.fetchData({\r\n\r\n        url: `/account/cust-cats/unq-id-acc-type/drop-down/${data.enterAccount}/RetailCustomer`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetCurrency, apiGetOperaterByID, apiGetOperaters } from 'services/GenSettings'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders } from 'services/RetailService'\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'genSettings/data/getOrders',\r\n    async (data) => {\r\n        \r\n        const response = await apiGetSalesOrders()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\n\r\nexport const getOperaters = createAsyncThunk(\r\n    'genSettings/data/getOperater',\r\n    async (data) => {\r\n        const response = await apiGetOperaters(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getByOperaterId = createAsyncThunk(\r\n    \"genSettings/data/getOperaterById\",\r\n    async (data) => {\r\n        const response = await apiGetOperaterByID(data)\r\n        return response.data?.response\r\n    }\r\n)\r\n\r\nexport const getCurrency = createAsyncThunk(\r\n    'genSettings/data/getCurrency',\r\n    async (data) => {\r\n        const response = await apiGetCurrency(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'genSettings/data',\r\n    initialState: {\r\n        loading: false,\r\n        accountList: [],\r\n        tableData: initialTableData,\r\n        operatorsList : [],\r\n        opInfoByID : [],\r\n        currencyList:[],\r\n    },\r\n    reducers: {\r\n        setOrderList: (state, action) => {\r\n            state.accountList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setOperaterList: (state, action) => {\r\n            state.operatorsList = action.payload\r\n        },\r\n        setOpInfoByID: (state, action) => {\r\n            state.opInfoByID = action.payload\r\n        },\r\n        setCurrencyData: (state, action) => {\r\n            state.currencyList = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.accountList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getOperaters.fulfilled]: (state, action) => {\r\n            state.operatorsList = action.payload?.map((parent) => ({\r\n                value: parent.acc_unq_id,\r\n                label: parent.acc_name,\r\n            }))\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOperaters.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getByOperaterId.fulfilled]: (state, action) => {\r\n            state.opInfoByID = action.payload\r\n            state.loading = false\r\n        },\r\n        [getByOperaterId.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCurrency.fulfilled]: (state, action) => {\r\n            state.currencyList=action.payload.response?.map((currency) => ({\r\n                value: currency.id,\r\n                label: currency.cur_title,\r\n            }));\r\n            state.loading = false\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData ,setOperaterList,setOpInfoByID} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["timeZone","id","value","apiGetOperaters","data","ApiService","url","enterAccount","method","apiGetOperaterByID","apiGetCurrency","apiUpdateGenSettings","resp","status","message","response","toString","apiCreateGenSettings","apiSubmitRetail","apiUpdateRetail","apiGetSalesOrders","params","apiUpdateRetailAccStatus","apiGetParentAccount","apiGetCustomerCatRetail","apiGetUploadFileTypes","getOrders","createAsyncThunk","getOperaters","getByOperaterId","getCurrency","dataSlice","createSlice","name","initialState","loading","accountList","tableData","total","pageIndex","pageSize","query","sort","order","key","operatorsList","opInfoByID","currencyList","reducers","setOrderList","state","action","payload","setTableData","setOperaterList","setOpInfoByID","setCurrencyData","extraReducers","fulfilled","pending","map","parent","acc_unq_id","label","acc_name","currency","cur_title","actions"],"sourceRoot":""}