{"version":3,"file":"static/js/9025.10576bb5.chunk.js","mappings":"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","sources":["mock/data/timezones.js","services/OperatorsService.js","utils/hooks/useTimeOutMessage.js","views/accounts/Operators/store/dataSlice.js"],"sourcesContent":["export const timeZone = [\r\n    { id: 1, value: '(UTC-10:00) Hawaii' },\r\n    { id: 2, value: '(UTC-09:00) Alaska' },\r\n    { id: 3, value: '(UTC-08:00) Baja California' },\r\n    { id: 4, value: '(UTC-08:00) Pacific Time (US & Canada)' },\r\n    { id: 5, value: '(UTC-07:00) Arizona' },\r\n    { id: 6, value: '(UTC-07:00) Chihuahua, La Paz, Mazatlan' },\r\n    { id: 7, value: '(UTC-07:00) Mountain Time (US & Canada)' },\r\n    { id: 8, value: '(UTC-06:00) Central America' },\r\n    { id: 9, value: '(UTC-06:00) Central Time (US & Canada)' },\r\n    { id: 10, value: '(UTC-06:00) Guadalajara, Mexico City, Monterrey' },\r\n    { id: 11, value: '(UTC-06:00) Saskatchewan' },\r\n    { id: 12, value: '(UTC-05:00) Bogota, Lima, Quito, Rio Branco' },\r\n    { id: 13, value: '(UTC-05:00) Eastern Time (US & Canada)' },\r\n    { id: 14, value: '(UTC-05:00) Indiana (East)' },\r\n    { id: 15, value: '(UTC-04:30) Caracas' },\r\n    { id: 16, value: '(UTC-04:00) Asuncion' },\r\n    { id: 17, value: '(UTC-04:00) Atlantic Time (Canada)' },\r\n    { id: 18, value: '(UTC-04:00) Cuiaba' },\r\n    { id: 19, value: '(UTC-04:00) Georgetown, La Paz, Manaus, San Juan' },\r\n    { id: 20, value: '(UTC-04:00) Santiago' },\r\n    { id: 21, value: '(UTC-03:30) Newfoundland' },\r\n    { id: 22, value: '(UTC-03:00) Brasilia' },\r\n    { id: 23, value: '(UTC-03:00) Buenos Aires' },\r\n    { id: 24, value: '(UTC-03:00) Cayenne, Fortaleza' },\r\n    { id: 25, value: '(UTC-03:00) Greenland' },\r\n    { id: 26, value: '(UTC-03:00) Montevideo' },\r\n    { id: 27, value: '(UTC-03:00) Salvador' },\r\n    { id: 28, value: '(UTC-02:00) Coordinated Universal Time-02' },\r\n    { id: 29, value: '(UTC-01:00) Azores' },\r\n    { id: 30, value: '(UTC-01:00) Cape Verde Is.' },\r\n    { id: 31, value: '(UTC) Casablanca' },\r\n    { id: 32, value: '(UTC) Coordinated Universal Time' },\r\n    { id: 33, value: '(UTC) Dublin, Edinburgh, Lisbon, London' },\r\n    { id: 34, value: '(UTC) Monrovia, Reykjavik' },\r\n    {\r\n        id: 35,\r\n        value: '(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',\r\n    },\r\n    {\r\n        id: 36,\r\n        value: '(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague',\r\n    },\r\n    { id: 37, value: '(UTC+01:00) Brussels, Copenhagen, Madrid, Paris' },\r\n    { id: 38, value: '(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb' },\r\n    { id: 39, value: '(UTC+01:00) West Central Africa' },\r\n    { id: 40, value: '(UTC+01:00) Windhoek' },\r\n    { id: 41, value: '(UTC+02:00) Amman' },\r\n    { id: 42, value: '(UTC+02:00) Athens, Bucharest' },\r\n    { id: 43, value: '(UTC+02:00) Beirut' },\r\n    { id: 44, value: '(UTC+02:00) Cairo' },\r\n    { id: 45, value: '(UTC+02:00) Damascus' },\r\n    { id: 46, value: '(UTC+02:00) E. Europe' },\r\n    { id: 47, value: '(UTC+02:00) Harare, Pretoria' },\r\n    {\r\n        id: 48,\r\n        value: '(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius',\r\n    },\r\n    { id: 49, value: '(UTC+02:00) Istanbul' },\r\n    { id: 50, value: '(UTC+02:00) Jerusalem' },\r\n    { id: 51, value: '(UTC+02:00) Kaliningrad (RTZ 1)' },\r\n    { id: 52, value: '(UTC+02:00) Tripoli' },\r\n    { id: 53, value: '(UTC+03:00) Baghdad' },\r\n    { id: 54, value: '(UTC+03:00) Kuwait, Riyadh' },\r\n    { id: 55, value: '(UTC+03:00) Minsk' },\r\n    { id: 56, value: '(UTC+03:00) Moscow, St. Petersburg, Volgograd (RTZ 2)' },\r\n    { id: 57, value: '(UTC+03:00) Nairobi' },\r\n    { id: 58, value: '(UTC+03:30) Tehran' },\r\n    { id: 59, value: '(UTC+04:00) Abu Dhabi, Muscat' },\r\n    { id: 60, value: '(UTC+04:00) Baku' },\r\n    { id: 61, value: '(UTC+04:00) Izhevsk, Samara (RTZ 3)' },\r\n    { id: 62, value: '(UTC+04:00) Port Louis' },\r\n    { id: 63, value: '(UTC+04:00) Tbilisi' },\r\n    { id: 64, value: '(UTC+04:00) Yerevan' },\r\n    { id: 65, value: '(UTC+04:30) Kabul' },\r\n    { id: 66, value: '(UTC+05:00) Ashgabat, Tashkent' },\r\n    { id: 67, value: '(UTC+05:00) Ekaterinburg (RTZ 4)' },\r\n    { id: 68, value: '(UTC+05:00) Islamabad, Karachi' },\r\n    { id: 69, value: '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi' },\r\n    { id: 70, value: '(UTC+05:30) Sri Jayawardenepura' },\r\n    { id: 71, value: '(UTC+05:45) Kathmandu' },\r\n    { id: 72, value: '(UTC+06:00) Astana' },\r\n    { id: 73, value: '(UTC+06:00) Dhaka' },\r\n    { id: 74, value: '(UTC+06:00) Novosibirsk (RTZ 5)' },\r\n    { id: 75, value: '(UTC+06:30) Yangon (Rangoon)' },\r\n    { id: 76, value: '(UTC+07:00) Bangkok, Hanoi, Jakarta' },\r\n    { id: 77, value: '(UTC+07:00) Krasnoyarsk (RTZ 6)' },\r\n    { id: 78, value: '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi' },\r\n    { id: 79, value: '(UTC+08:00) Irkutsk (RTZ 7)' },\r\n    { id: 80, value: '(UTC+08:00) Kuala Lumpur, Singapore' },\r\n    { id: 81, value: '(UTC+08:00) Perth' },\r\n    { id: 82, value: '(UTC+08:00) Taipei' },\r\n    { id: 83, value: '(UTC+08:00) Ulaanbaatar' },\r\n    { id: 84, value: '(UTC+09:00) Osaka, Sapporo, Tokyo' },\r\n    { id: 85, value: '(UTC+09:00) Seoul' },\r\n    { id: 86, value: '(UTC+09:00) Yakutsk (RTZ 8)' },\r\n    { id: 87, value: '(UTC+09:30) Adelaide' },\r\n    { id: 88, value: '(UTC+09:30) Darwin' },\r\n    { id: 89, value: '(UTC+10:00) Brisbane' },\r\n    { id: 90, value: '(UTC+10:00) Canberra, Melbourne, Sydney' },\r\n    { id: 91, value: '(UTC+10:00) Guam, Port Moresby' },\r\n    { id: 92, value: '(UTC+10:00) Hobart' },\r\n    { id: 93, value: '(UTC+10:00) Magadan' },\r\n    { id: 94, value: '(UTC+10:00) Vladivostok, Magadan (RTZ 9)' },\r\n    { id: 95, value: '(UTC+11:00) Chokurdakh (RTZ 10)' },\r\n    { id: 96, value: '(UTC+11:00) Solomon Is., New Caledonia' },\r\n    { id: 97, value: '(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky (RTZ 11)' },\r\n    { id: 98, value: '(UTC+12:00) Auckland, Wellington' },\r\n    { id: 99, value: '(UTC+12:00) Coordinated Universal Time+12' },\r\n    { id: 100, value: '(UTC+12:00) Fiji' },\r\n    { id: 101, value: '(UTC+12:00) Petropavlovsk-Kamchatsky - Old' },\r\n    { id: 102, value: \"(UTC+13:00) Nuku'alofa\" },\r\n    { id: 103, value: '(UTC+13:00) Samoa' },\r\n    { id: 104, value: '(UTC+14:00) Kiritimati Island' },\r\n]\r\n","import ApiService from './ApiService'\r\nimport axios from 'axios'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators`,\r\n        //url: `/account/acc-operators?page_no=0&page_size=1000&sort_field=id`,\r\n\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitOperator(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/acc-operators',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/acc-operators',\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateOpAccStatus(id, status) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators?id=${id}&acc_status=${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetPublicRole(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/roles/master-roles/drop-down/${data.acc_mno_parent_unq_id}`,\r\n        //url: `/account/roles/master-roles/GL1`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetRolePermissions(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/role-permissions/role/${data.roleId}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n\r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders, apiGetCurrency, apiGetParentAccount, apiGetPublicRole, apiGetRolePermissions, apiGetUploadFileTypes } from 'services/OperatorsService'\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'salesProductList/data/getOrders',\r\n    async (data) => {\r\n        const response = await apiGetSalesOrders(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getCurrency = createAsyncThunk(\r\n    'salesProductList/data/getCurrency',\r\n    async (data) => {\r\n        const response = await apiGetCurrency(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getParentAccount = createAsyncThunk(\r\n    'salesProductList/data/getParentAccount',\r\n    async (data) => {\r\n        const response = await apiGetParentAccount(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getPublicRoles = createAsyncThunk(\r\n    'salesProductList/data/getPublicRoles',\r\n    async (data) => {\r\n        const response = await apiGetPublicRole(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\n\r\n\r\nexport const getRolePermissions = createAsyncThunk(\r\n    'salesProductList/data/getRolePermissions',\r\n    async (data) => {\r\n        const response = await apiGetRolePermissions(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getUploadFileType = createAsyncThunk(\r\n    'salesProductList/data/getUploadFileType',\r\n    async (data) => {\r\n        const response = await apiGetUploadFileTypes(data)\r\n        return response.data\r\n    }\r\n)\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'salesOrderList/data',\r\n    initialState: {\r\n        loading: false,\r\n        orderList: [],\r\n        tableData: initialTableData,\r\n        currencyList:[],\r\n        parentAccountList:[],\r\n        publicRolesList : [],\r\n        rolePermissions:{},\r\n        fileList:[]\r\n    },\r\n    reducers: {\r\n        setOrderList: (state, action) => {\r\n            state.orderList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setCurrencyData: (state, action) => {\r\n            state.currencyList = action.payload\r\n        },\r\n        setParentAccountData: (state, action) => {\r\n            state.parentAccountList = action.payload\r\n        },\r\n        setPublicRole : (state,action) => {\r\n            state.publicRolesList = action.payload\r\n        },\r\n\r\n        setRolePermissions : (state,action) => {\r\n            state.rolePermissions = action.payload\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.orderList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getCurrency.fulfilled]: (state, action) => {\r\n           \r\n           \r\n            state.currencyList=action.payload.response?.map((currency) => ({\r\n                value: currency.id,\r\n                label: currency.cur_title,\r\n            }));\r\n\r\n            state.loading = false\r\n        },\r\n        [getCurrency.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getParentAccount.fulfilled]: (state, action) => {\r\n            state.parentAccountList = action.payload?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.acc_name,\r\n            }))\r\n           \r\n            state.loading = false\r\n        },\r\n        [getParentAccount.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getPublicRoles.fulfilled]: (state,action) => {\r\n            state.publicRolesList = action.payload?.res?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.name,\r\n            }))\r\n        },\r\n        [getPublicRoles.pending]:(state,action)=> {\r\n            state.loading = true\r\n        },\r\n        [getRolePermissions.fulfilled]: (state, action) => {\r\n            state.rolePermissions = action.payload\r\n          \r\n            state.loading = false\r\n        },\r\n        [getRolePermissions.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getUploadFileType.fulfilled]: (state, action) => {\r\n            state.fileList = action.payload\r\n          \r\n            state.loading = false\r\n        },\r\n        [getUploadFileType.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setOrderList, setTableData,setCurrencyData,setParentAccountData,setPublicRole,setRolePermissions } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["timeZone","id","value","apiGetSalesOrders","params","ApiService","url","method","apiDeleteSalesOrders","data","apiSubmitOperator","resp","status","message","response","toString","apiUpdateOperator","apiUpdateOpAccStatus","apiGetCurrency","enterAccount","apiGetParentAccount","apiGetPublicRole","acc_mno_parent_unq_id","apiGetRolePermissions","roleId","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","apiGetUploadFileTypes","interval","useState","setMessage","useEffect","timeout","setTimeout","clearTimeout","getOrders","createAsyncThunk","getCurrency","getParentAccount","getPublicRoles","deleteOrders","getRolePermissions","getUploadFileType","dataSlice","createSlice","name","initialState","loading","orderList","tableData","total","pageIndex","pageSize","query","sort","order","key","currencyList","parentAccountList","publicRolesList","rolePermissions","fileList","reducers","setOrderList","state","action","payload","setTableData","setCurrencyData","setParentAccountData","setPublicRole","setRolePermissions","extraReducers","fulfilled","pending","map","currency","label","cur_title","parent","acc_name","res","actions"],"sourceRoot":""}