{"version":3,"file":"static/js/2957.17615d5a.chunk.js","mappings":"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","sources":["services/ProfileService.js","utils/hooks/useTimeOutMessage.js","views/profile/components/Password.js","views/profile/components/Profile.js","views/profile/components/ProfileTabs.js","views/profile/store/stateSlice.js","views/profile/store/index.js","views/profile/index.js","views/profile/store/dataSlice.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetProfileDetails(data) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/acc-users/${data?.acc_unq_id}`,\r\n        method: 'get',\r\n        data\r\n    })\r\n}\r\n\r\nexport async function apiSubmitProfileData(data) {\r\n\r\n    try {\r\n        \r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/acc-users`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    \r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n\r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage\r\n","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Input, FormItem, FormContainer, Button,Alert } from 'components/ui';\r\nimport { Link } from 'react-router-dom'\r\nimport PasswordInput from './../../../components/shared/PasswordInput';\r\nimport * as Yup from 'yup'\r\nimport { GetErrorMsg, OpenNotification } from 'views/Servicefile';\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { useSelector } from 'react-redux';\r\nimport { apiChangePassword } from 'services/AuthService';\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string().required('Please enter your  current password'),\r\n    newPassword: Yup.string().required('Please enter your password'),\r\n    confirmPassword: Yup.string().oneOf(\r\n        [Yup.ref('newPassword'), null],\r\n        'Your passwords do not match'\r\n    ),\r\n})\r\n\r\n\r\nconst Password = () => {\r\n    const {email } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n\r\n    const saveChangePassword = async (values,{resetForm,setSubmitting }) => {\r\n\r\n          setSubmitting(true)\r\n        const body = {\r\n            old_password: values.password,\r\n            new_password: values.newPassword,\r\n            confirm_password:values.confirmPassword,\r\n            user_id:email\r\n        };\r\n      \r\n         const resp = await apiChangePassword(body);\r\n         if (resp.status === 'success') {\r\n             setTimeout(() => {\r\n                 OpenNotification('success', 'SuccessFully Updated ')\r\n                 resetForm()\r\n             }, 2000)\r\n            \r\n         }\r\n\r\n         if (resp.status === 'failed') {\r\n             setMessage(GetErrorMsg(resp))\r\n         }\r\n    }\r\n    return (\r\n        <>\r\n   {message && (\r\n            <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                {Array.isArray(message) ? message.join(\", \") : message}\r\n            </Alert>\r\n        )}\r\n            <div>\r\n\r\n                <Formik\r\n                    initialValues={{\r\n                        password: '',\r\n                        newPassword: '',\r\n                        confirmPassword: '',\r\n                    }}\r\n\r\n                    validationSchema={validationSchema}\r\n                    // onSubmit={(values, { setSubmitting }) => {\r\n                    //     setSubmitting(true)\r\n                    //     saveChangePassword(values)\r\n\r\n                    // }}\r\n                    onSubmit={saveChangePassword}\r\n                >\r\n                    {({ values, touched, errors, isSubmitting, handleSubmit,resetForm  }) => {\r\n                        return (\r\n                            <>\r\n\r\n                                {/* md:grid grid-cols-2 gap-4 mx-4 */}\r\n                                <Form onSubmit={handleSubmit} >\r\n                                    <FormContainer>\r\n                                        <div style={{ backgroundColor: \"#F5F5F5\", padding: \"15px 15px \", marginTop: \"10px\" }}>\r\n\r\n                                            <div style={{ backgroundColor: \"white\", padding: \"14px 14px\", marginBelow: \"10px\" }}>\r\n\r\n                                                <div className='md:grid grid-cols-4 gap-4 mx-4 '>\r\n                                                    <FormItem\r\n                                                        label=\"Current Password\"\r\n                                                        invalid={errors.password && touched.password}\r\n                                                        errorMessage={errors.password}\r\n                                                    >\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"password\"\r\n                                                            placeholder=\"Enter Your Current Password\"\r\n                                                            component={PasswordInput}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"New Password\"\r\n                                                        invalid={errors.newPassword && touched.newPassword}\r\n                                                        errorMessage={errors.newPassword}\r\n                                                    >\r\n                                                        <Field\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"newPassword\"\r\n                                                            placeholder=\"Enter Your New Password\"\r\n                                                            component={PasswordInput}\r\n                                                        />\r\n                                                    </FormItem>\r\n                                                    <FormItem\r\n                                                        label=\"Confirm New Password\"\r\n                                                        invalid={errors.confirmPassword && touched.confirmPassword}\r\n                                                        errorMessage={errors.confirmPassword}\r\n                                                    >\r\n                                                        <Field\r\n\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"confirmPassword\"\r\n                                                            placeholder=\"Confirm New Password\"\r\n                                                            component={PasswordInput}\r\n                                                        />\r\n                                                    </FormItem>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormContainer>\r\n                                    <div className=\"mt-4 text-right\">\r\n                                        <>\r\n                                            <Link\r\n                                                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                                to=\"\">\r\n                                                <Button\r\n                                                    style={{ backgroundColor: \"#4D4D4D\" }}\r\n                                                    className=\"mx-2\"\r\n                                                    variant=\"solid\"\r\n                                                    type=\"button\"\r\n                                                    onClick={resetForm}\r\n                                                >\r\n                                                    Reset\r\n                                                </Button>\r\n                                            </Link>\r\n                                            {/* <Link\r\n\r\n\r\n                                                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                                to=\"views/Home\"\r\n                                                >\r\n\r\n\r\n                                                <Button\r\n                                                   \r\n                                                    className=\"mx-2\"\r\n                                                    variant=\"solid\"\r\n                                                >\r\n                                                    Save\r\n                                                </Button>\r\n                                            </Link> */}\r\n\r\n                                            <Button\r\n                                                className=\"mx-2\"\r\n                                                variant='solid'\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                        </>\r\n\r\n                                    </div>\r\n\r\n                                </Form>\r\n\r\n                            </>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Password","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Input, FormItem, FormContainer, Button, Select, Alert, Upload, Avatar } from 'components/ui';\r\nimport { Link } from 'react-router-dom'\r\nimport { MdModeEdit } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfileDetails } from '../store/dataSlice';\r\nimport { apiSubmitProfileData, apiUploadFiles } from 'services/ProfileService';\r\nimport { GetErrorMsg, OpenNotification } from 'views/Servicefile';\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage';\r\nimport { HiOutlineUser } from 'react-icons/hi';\r\nimport appConfig from 'configs/app.config';\r\n\r\nconst language = [\r\n    { label: 'English', value: 1 },\r\n    { label: 'Spanish', value: 2 },\r\n    { label: 'Arabic', value: 3 },\r\n    { label: 'Portugese', value: 4 },\r\n]\r\nconst saveFilesInAccounts = 1\r\n\r\nconst Profile = (props) => {\r\n    //console.log(props.profile,\"props.profile\")\r\n\r\n    const dispatch = useDispatch()\r\n    const profileDataForm = useSelector(\r\n        (state) => state.profile.data.profileData.response\r\n    )\r\n    const { acc_unq_id, acc_user_id } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [profileData, setProfileData] = useState()\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileDetails({ acc_unq_id }))\r\n\r\n    }, [acc_unq_id, dispatch,props,profileDataForm])\r\n  \r\n\r\n\r\n    const saveProfileData = async (values) => {\r\n\r\n        const body = { ...values };\r\n        setLoading(true);\r\n        if (props.profile !== 'ADD') {\r\n            delete body.acc_password;\r\n        }\r\n\r\n        const resp = await apiSubmitProfileData(body);\r\n        if (resp.status === 'success') {\r\n            setTimeout(() => {\r\n                OpenNotification('success', 'SuccessFully Updated ')\r\n                setLoading(false);\r\n            }, 2000)\r\n        }\r\n\r\n        if (resp.status === 'failed') {\r\n            setMessage(GetErrorMsg(resp))\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    if (!profileDataForm) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const beforeUpload = async (newFiles, files) => {\r\n        const file = newFiles[0];\r\n        const allowedTypes = ['image/jpeg', 'image/png'];\r\n\r\n        if (!allowedTypes.includes(file.type)) {\r\n            OpenNotification('warning', 'JPG/PNG files are allowed only!')\r\n          return false;\r\n        } \r\n        try { \r\n            const ress = await apiUploadFiles(newFiles[0], acc_user_id, saveFilesInAccounts)\r\n          return ress;\r\n        } catch (error) {\r\n          console.error('Error during file upload:', error);\r\n          return false;\r\n        }\r\n      };\r\n\r\n  \r\n    return (\r\n        <>\r\n            {message && (\r\n                <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                    {Array.isArray(message) ? message.join(\", \") : message}\r\n                </Alert>\r\n            )}\r\n            {profileDataForm && <Formik\r\n                initialValues={profileDataForm}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    console.log(values, \"values\")\r\n                    setSubmitting(true)\r\n                    saveProfileData(values)\r\n                }}\r\n            >\r\n                {({ values, touched, errors, isSubmitting, handleSubmit, resetForm, setFieldValue }) => {\r\n                    return (\r\n                        <>\r\n                            <Form onSubmit={handleSubmit} >\r\n                                <FormContainer>\r\n                                    <div style={{ backgroundColor: \"#F5F5F5\", padding: \"15px 15px \", marginTop: \"10px\" }}>\r\n\r\n                                        <div style={{ backgroundColor: \"white\", padding: \"14px 14px\", marginBelow: \"10px\" }}>\r\n\r\n                                            <div className=''>\r\n                                                <h6 className='font-bold '>BASIC DETAILS</h6>\r\n\r\n                                                <div className='mt-6'>\r\n                                                    <div className='h-24 bg-gradient-to-r from-sky-700 from-10% via-sky-500 via-30% to-sky-700 to-90% border-2 w-full items-center flex justify-center'>\r\n                                                        {/* <img className='h-24 w-24 rounded-full bg-gray-200 border-none absolute  mt-20 '\r\n                                                            src={`/img/avatars/profileimage.png`} />\r\n                                                        <div className=\"text-base text-black font-bold flex gap-1\" >\r\n                                                            <MdModeEdit className=\"mt-14 ml-3 z-40 absolute colo bg-white rounded-full h-9 w-9 p-2 text-sky-600 text-8xl border border-sky-600\" />\r\n                                                        </div>   */}\r\n\r\n                                                        <FormItem\r\n\r\n                                                        >\r\n                                                            <Field name={'profile_img'}>\r\n                                                                {({ field, form }) => (\r\n                                                                    <Upload\r\n\r\n                                                                        className=\"cursor-pointer h-[0px]\"\r\n                                                                        beforeUpload={beforeUpload}\r\n                                                                        onChange={(updatedFiles, files, uploadRes, filesDetails) => {\r\n                                                                            setFieldValue(field.name, uploadRes?.data.fileUnqId);\r\n                                                                        }\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {/*   <img className='h-24 w-24 rounded-full'\r\n                                                                            src={`${appConfig.apiPrefix}/media/uniqid/${field.value}`} />\r\n\r\n                                                                        <div className=\"absolute top-10 right-0  mt-0 mr-0\">\r\n                                                                            <MdModeEdit className=\" colo bg-white rounded-full h-9 w-9 p-2 text-sky-600 text-8xl border border-sky-600\" />\r\n\r\n                                                                        </div> */}\r\n\r\n\r\n                                                                        <div className=\"relative\">\r\n                                                                            <img className=\"h-24 w-24 rounded-full\" src={`${appConfig.apiPrefix}/media/uniqid/${field.value}`} />\r\n                                                                            <div className=\"absolute top-1/2 right-0 transform -translate-y-1/4 translate-x-1/2\">\r\n                                                                                <MdModeEdit className=\"colo bg-white rounded-full h-9 w-9 p-2 text-sky-600 text-8xl border border-sky-600\" />\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n\r\n\r\n                                                                    </Upload>\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FormItem>\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className='md:grid grid-cols-2 gap-x-7  mt-16  '>\r\n                                                <FormItem\r\n                                                    label=\"First Name\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"first_name\"\r\n                                                        placeholder=\"Esther Howard\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n\r\n                                                    />\r\n                                                </FormItem>\r\n\r\n                                                <FormItem\r\n                                                    label=\"Last Name\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"last_name\"\r\n                                                        placeholder=\"Robert Fox\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Email ID\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Esther Howard@gmail.com\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Phone Number\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"phone\"\r\n                                                        placeholder=\"(316) 555-0116\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Address Line-1\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"add_line1\"\r\n                                                        placeholder=\"3517 W. Gray St. Utica, Pennsylvania 57867\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Address Line-2\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"add_line2\"\r\n                                                        placeholder=\"8502 Preston Rd. Inglewood, Maine 98380\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                            </div>\r\n                                            <div className='grid grid-cols-4 gap-7'>\r\n                                                <FormItem\r\n                                                    label=\"Country\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"country\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"City\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"city\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"State\"\r\n\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"state\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Zip-Code\"\r\n                                                >\r\n                                                    <Field className='bg-gray-100'\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"zipcode\"\r\n                                                        component={Input}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                </FormItem>\r\n\r\n                                            </div>\r\n                                            <div>\r\n                                                <h6>PREFERENCES</h6>\r\n                                                <div className='grid grid-cols-2 gap-7 mt-4'>\r\n\r\n\r\n                                                    <FormItem\r\n                                                        label={<p>Language <span style={{ color: 'red' }}>{'*'}</span></p>}\r\n                                                    >\r\n                                                        <Field name=\"language\">\r\n                                                            {({ field, form }) => (\r\n                                                                <Select\r\n                                                                    value={language.find(lang => lang.value === field.value)}\r\n                                                                    placeholder=\"Select Language\"\r\n                                                                    field={field}\r\n                                                                    form={form}\r\n                                                                    options={language}\r\n                                                                    onChange={lang => form.setFieldValue(field.name, lang.value)}\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FormItem>\r\n\r\n\r\n                                                    <FormItem\r\n                                                        label=\"Time-Zone\"\r\n                                                    >\r\n                                                        <Field className='bg-gray-100'\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            name=\"time_zone\"\r\n                                                            placeholder=\"(UTC-08:00) Coordinated Universal Time-08\"\r\n                                                            component={Input}\r\n                                                        />\r\n                                                    </FormItem>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </FormContainer>\r\n                                <div className=\"mt-4 text-right\">\r\n                                    <>\r\n                                        <Link\r\n                                            className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                            to=\"\">\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                onClick={resetForm}\r\n                                                className=\"mx-2\"\r\n                                                variant=\"solid\"\r\n                                                style={{ backgroundColor: \"#4D4D4D\" }}\r\n                                            >\r\n                                                Reset\r\n                                            </Button>\r\n                                        </Link>\r\n\r\n                                        <Button\r\n                                            className=\"mx-2\"\r\n                                            variant='solid'\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n\r\n                        </>\r\n                    )\r\n                }}\r\n            </Formik>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react'\r\nimport { Tabs } from 'components/ui'\r\nimport Password from './Password'\r\nimport Profile from './Profile'\r\nconst { TabNav, TabList, TabContent } = Tabs\r\nconst ProfileTabs = () => {\r\n    const [profile, setProfile] = useState('ADD')\r\n\r\n    return (\r\n        <div>\r\n            <p className='mb-4 ml-3'>Home / My Profile / Password </p>\r\n            <Tabs defaultValue=\"profile\">\r\n                <TabList>\r\n                    <TabNav value=\"profile\">Profile</TabNav>\r\n                    <TabNav value=\"password\">Change Password</TabNav>\r\n                </TabList>\r\n                <div className=\"p-4\">\r\n                    <TabContent value=\"profile\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Profile</h3>\r\n                        </div>\r\n                        <Profile profile={profile} setProfile={setProfile}/>\r\n                    </TabContent>\r\n                    <TabContent value=\"password\">\r\n                        <div className=\"lg:flex items-center justify-between my-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Change password </h3>\r\n                        </div>\r\n                        <Password />\r\n                    </TabContent>\r\n                </div>\r\n\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileTabs","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'profile/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React from 'react'\r\nimport AdaptableCard from './../../components/shared/AdaptableCard';\r\nimport ProfileTabs from './components/ProfileTabs';\r\nimport { injectReducer } from 'store';\r\nimport reducer from './store';\r\n\r\ninjectReducer('profile', reducer)\r\nconst Profile = () => {\r\n    return (\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n            <ProfileTabs />\r\n        </AdaptableCard>\r\n    )\r\n}\r\n\r\nexport default Profile","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetProfileDetails } from 'services/ProfileService'\r\n\r\n\r\nexport const getProfileDetails = createAsyncThunk(\r\n    'profile/data/getProfileDetails',\r\n    async (data) => {\r\n        const response = await apiGetProfileDetails(data)\r\n        \r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'profile/data',\r\n    initialState: {\r\n        loading: false,\r\n        profileData: [],\r\n        \r\n    },\r\n    reducers: {\r\n         setProfileData: (state, action) => {\r\n            state.profileData = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        \r\n        [getProfileDetails.fulfilled]: (state, action) => {\r\n            \r\n            state.profileData = action.payload\r\n            state.loading = false\r\n        },\r\n        [getProfileDetails.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setProfileData\r\n} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["apiGetProfileDetails","data","ApiService","url","acc_unq_id","method","apiSubmitProfileData","resp","status","message","response","toString","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","interval","useState","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","password","required","newPassword","confirmPassword","oneOf","email","useSelector","state","auth","user","useTimeOutMessage","saveChangePassword","values","resetForm","setSubmitting","body","old_password","new_password","confirm_password","user_id","apiChangePassword","OpenNotification","GetErrorMsg","className","type","showIcon","Array","isArray","join","initialValues","onSubmit","touched","errors","handleSubmit","isSubmitting","style","backgroundColor","padding","marginTop","marginBelow","label","invalid","errorMessage","autoComplete","name","placeholder","component","PasswordInput","to","variant","onClick","language","value","props","dispatch","useDispatch","profileDataForm","profile","profileData","acc_user_id","setLoading","getProfileDetails","saveProfileData","acc_password","beforeUpload","newFiles","files","includes","ress","console","error","log","setFieldValue","field","form","onChange","updatedFiles","uploadRes","filesDetails","fileUnqId","src","appConfig","Input","disabled","color","find","lang","options","TabNav","Tabs","TabList","TabContent","setProfile","defaultValue","Password","stateSlice","createSlice","initialState","selectedRows","selectedRow","deleteMode","reducers","setSelectedRows","action","payload","setSelectedRow","addRowItem","currentState","current","removeRowItem","filter","id","setDeleteMode","actions","toggleDeleteConfirmation","combineReducers","injectReducer","reducer","AdaptableCard","bodyClass","createAsyncThunk","dataSlice","loading","setProfileData","extraReducers","fulfilled","pending"],"sourceRoot":""}