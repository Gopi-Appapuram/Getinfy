{"version":3,"file":"static/js/2267.04d76046.chunk.js","mappings":"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","sources":["services/InventoryService.js","services/ItemsService.js","services/WareHouseService.js","services/WorkOrderService.js","views/wareHouse/WareHouse/store/dataSlice.js","views/wareHouse/WareHouse/store/index.js","views/wareHouse/WareHouse/store/stateSlice.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetInventoryDataForWarehouse(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/admin/product/inventories',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateInventory(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-prod-intry-info`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateInventory(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-prod-intry-info`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateInventoryStatus(id, status) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info/${id}/${status}`,\r\n            method: 'patch',\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-cat-items-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariants(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/items/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariantsByItemId(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/item/variant/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n\r\nexport async function apiDeleteSalesItems(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/catalogs/dgl-cat-items-info',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetTemplates(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-tp-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiProductCategoryItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-items-info/items',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategory(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats?page_no=1&page_size=4`,\r\n        method: 'get',\r\n        data\r\n    })\r\n}\r\n\r\nexport async function apiUpdateItemAccStatus(params,status) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/dgl-cat-items-info/${params}/${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTableData(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-pageable`,\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${params.unq_id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetTemplatesInItems(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/templates/${params.unq_id}/${params.category}/${params.type}?tpStatus=ACTIVE`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTemplateComponents(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-tax/${params}`,\r\n        method: 'get',\r\n    })\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetWarehouseData(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-wh-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetWarehouseDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/dgl-wh-info-pageable`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateWarehouse(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateWarehouse(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateWarehouseStatus(id, status) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info/${id}/${status}`,\r\n            method: 'patch',\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetAllWorkOrders(params) {\r\n    return ApiService.fetchData({\r\n        url: `/order/dgl-wo-infos`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\nexport async function apiGetWorkOrderById(id) {\r\n    return ApiService.fetchData({\r\n        url: `/order/dgl-wo-infos/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n\r\nexport async function apiCreateWorkOrderLabelling(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-label-infos`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiCreateWorkOrderLabellingItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-label-items`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateWorkOrderLabellingItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-label-items`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiDeleteWorkOrderLabellingItem(Id) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-label-items/${Id}`,\r\n            method: 'delete'\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function apiCreateWorkOrderPackagingItemsBulk(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-package-infos/bulk`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiGetPickUpTimeSlots(params) {\r\n    return ApiService.fetchData({\r\n        url: `/order/integrate/fedex`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\n\r\nexport async function apiCreateWorkOrderShipment(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-ship-infos`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateWorkOrderShipment(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `order/dgl-wo-ship-infos`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetInventoryDataForWarehouse } from 'services/InventoryService'\r\nimport { apiGetSalesItemVariants, apiGetSalesItemVariantsByItemId, apiGetSalesItems } from 'services/ItemsService'\r\nimport {  apiGetWarehouseData, apiGetWarehouseDetails } from 'services/WareHouseService'\r\nimport { apiGetAllWorkOrders, apiGetWorkOrderById } from 'services/WorkOrderService'\r\n\r\nexport const getWarehouseDetails = createAsyncThunk(\r\n    'wareHouse/data/getWarehouseDetails',\r\n    async (data) => {\r\n        const response = await apiGetWarehouseDetails(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getInventoryDetails = createAsyncThunk(\r\n    'wareHouse/data/getInventoryDetails',\r\n    async (data) => {\r\n        const response = await apiGetInventoryDataForWarehouse(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getWareHouseList = createAsyncThunk(\r\n    'wareHouse/data/getWareHouseList',\r\n    async (data) => {\r\n        const response = await apiGetWarehouseData(data);\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getItems = createAsyncThunk(\r\n    'wareHouse/data/getItems',\r\n    async (data) => {\r\n        const response = await apiGetSalesItems()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getItemVariants = createAsyncThunk(\r\n    'wareHouse/data/getItemVariants',\r\n    async (id) => {\r\n        const response = await apiGetSalesItemVariants(id)\r\n        return response.data\r\n    }\r\n)\r\nexport const getSalesItemVariantsByItemId = createAsyncThunk(\r\n    'wareHouse/data/ItemVariantsByItemId',\r\n    async (id) => {\r\n        const response = await apiGetSalesItemVariantsByItemId(id)\r\n        return response.data\r\n    }\r\n)\r\n//work orders\r\nexport const getAllWorkOrders = createAsyncThunk(\r\n    'wareHouse/data/getAllWorkOrders',\r\n    async (data) => {\r\n        const response = await apiGetAllWorkOrders(data)\r\n        return response.data\r\n    }\r\n)\r\nexport const getWorkOrderById = createAsyncThunk(\r\n    'wareHouse/data/getWorkOrderById',\r\n    async (id) => {\r\n        const response = await apiGetWorkOrderById(id)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'wareHouse/data',\r\n    initialState: {\r\n        loading: false,\r\n        wareHouseList: [],\r\n        tableData: initialTableData,\r\n        inventoryList: [],\r\n        inventoryTableData: initialTableData,\r\n        whList: [],\r\n        itemList: [],\r\n        productItems: [],//similar to itemList\r\n        itemVariants: [],\r\n        selectedItem: {},\r\n        workOrderTableData:initialTableData,\r\n        allWorkOrdersList:[],\r\n        workOrderItem:null\r\n    },\r\n    reducers: {\r\n        setWareHouseList: (state, action) => {\r\n            state.wareHouseList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setInventoryTableData: (state, action) => {\r\n            state.inventoryTableData = action.payload\r\n        },\r\n        setWorkOrderTableData: (state, action) => {\r\n            state.workOrderTableData = action.payload\r\n        },\r\n        setWhList: (state, action) => {\r\n            state.whList = action.payload\r\n        },\r\n        setSelectedItem: (state, action) => {\r\n            state.selectedItem = action.payload;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getWarehouseDetails.fulfilled]: (state, action) => {\r\n            state.wareHouseList = action.payload.content\r\n            state.tableData.total = action.payload.total_elements\r\n            state.loading = false\r\n        },\r\n        [getWarehouseDetails.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getInventoryDetails.fulfilled]: (state, action) => {\r\n            state.inventoryList = action.payload.content\r\n            state.inventoryTableData.total = action.payload.total_elements\r\n            state.loading = false\r\n        },\r\n        [getInventoryDetails.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getWareHouseList.fulfilled]: (state, action) => {\r\n            state.whList = action.payload?.response?.map((wh) => ({\r\n                value: wh.id,\r\n                label: wh.wh_title,\r\n            }));\r\n            state.loading = false\r\n        },\r\n        [getWareHouseList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getItems.fulfilled]: (state, action) => {\r\n            state.itemList = action.payload?.response?.map((itm) => ({\r\n                value: itm.id,\r\n                label: itm.item_title,\r\n            }));\r\n            state.loading = false\r\n        },\r\n        [getItems.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getItemVariants.fulfilled]: (state, action) => {\r\n            state.itemVariants = action.payload?.response?.map((itm) => ({\r\n                value: itm.id,\r\n                label: itm.item_var_title,\r\n            }));\r\n            // state.productItems=action.payload?.response\r\n            state.loading = false\r\n        },\r\n        [getItemVariants.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getAllWorkOrders.fulfilled]: (state, action) => {\r\n            state.allWorkOrdersList = action.payload.res\r\n            state.workOrderTableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getAllWorkOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getWorkOrderById.fulfilled]: (state, action) => {\r\n            state.workOrderItem = action.payload.response\r\n            state.loading = false\r\n        },\r\n        [getWorkOrderById.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\n\r\n\r\nexport const { setOrderList, setTableData, setInventoryTableData,  setWhList, setWareHouseList, setSelectedItem,setWorkOrderTableData } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'wareHouse/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n"],"names":["apiGetInventoryDataForWarehouse","params","ApiService","url","method","apiCreateInventory","data","resp","status","message","response","toString","apiUpdateInventory","apiGetSalesItems","apiGetSalesItemVariants","id","apiGetSalesItemVariantsByItemId","apiDeleteSalesItems","apiCreateItem","apiGetTemplates","apiUpdateItemAccStatus","apiGetItemsTableData","apiGetProductCategoryData","unq_id","apiGetTemplatesInItems","category","type","apiGetItemsTemplateComponents","apiGetWarehouseData","apiGetWarehouseDetails","apiCreateWarehouse","apiUpdateWarehouse","apiUpdateWarehouseStatus","apiGetAllWorkOrders","apiGetWorkOrderById","apiCreateWorkOrderLabelling","apiCreateWorkOrderLabellingItem","apiUpdateWorkOrderLabellingItem","apiDeleteWorkOrderLabellingItem","Id","apiCreateWorkOrderPackagingItemsBulk","apiGetPickUpTimeSlots","apiCreateWorkOrderShipment","apiUpdateWorkOrderShipment","getWarehouseDetails","createAsyncThunk","getInventoryDetails","getWareHouseList","getItems","getItemVariants","getAllWorkOrders","getWorkOrderById","initialTableData","total","pageIndex","pageSize","query","sort","order","key","dataSlice","createSlice","name","initialState","loading","wareHouseList","tableData","inventoryList","inventoryTableData","whList","itemList","productItems","itemVariants","selectedItem","workOrderTableData","allWorkOrdersList","workOrderItem","reducers","setWareHouseList","state","action","payload","setTableData","setInventoryTableData","setWorkOrderTableData","setWhList","setSelectedItem","extraReducers","fulfilled","content","total_elements","pending","map","wh","value","label","wh_title","itm","item_title","item_var_title","res","actions","setOrderList","reducer","combineReducers","stateSlice","selectedRows","selectedRow","deleteMode","setSelectedRows","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","setDeleteMode","toggleDeleteConfirmation"],"sourceRoot":""}