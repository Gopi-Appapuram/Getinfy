{"version":3,"file":"static/js/4140.0b7fc473.chunk.js","mappings":"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","sources":["views/orders/components/OrdersSolutionDetails.js","views/orders/components/OrderShipAndDelivery.js","views/orders/components/OrdersPaymentDetails.js","views/orders/components/OrderDetailsTabs.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/toNumber.js"],"sourcesContent":["import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport NumberFormat from 'react-number-format'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowOrder,\r\n    removeRowOrder,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport dayjs from 'dayjs'\r\n\r\nconst OrderStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\nexport const orderSolutionsOrdersData = [\r\n    {\r\n        itemName: 'Amazon Echo Show 5',\r\n        itemId: '#ID23012',\r\n        quantity: '100 pcs.',\r\n        price:'5,499.00',\r\n        discountCode :'GYUTEW',\r\n        discountInr :'1200.00',\r\n        taxAmount :'5,499.00',\r\n        taxPercApplicable :'2.5% CGST + 2.5% SGST',\r\n        taxAmountPayableInr :'5,44,401.00',\r\n        status: 'In Transit',\r\n       \r\n    },\r\n    {\r\n        itemName: 'Amazon Fire TV Stick Lite',\r\n        itemId: '#ID23013',\r\n        quantity: '200 pcs',\r\n        price:'2,299.00',\r\n        discountCode :'JUYQQW',\r\n        discountInr :'1200.00',\r\n        taxAmount :'4,598.00',\r\n        taxPercApplicable :'2.5% CGST + 2.5% SGST',\r\n        taxAmountPayableInr :'4,59,800.00',\r\n        status: 'In-progress',\r\n       \r\n    },   \r\n    {\r\n        itemName: '2,999 INR Jio data plan',\r\n        itemId: '#ID23014',\r\n        quantity: '100 plans',\r\n        price:'2,999.00',\r\n        discountCode :'N/A',\r\n        discountInr :'1200.00',\r\n        taxAmount :'120.00',\r\n        taxPercApplicable :'2.5% CGST + 2.5% SGST',\r\n        taxAmountPayableInr :'2,99,900.00',\r\n        status: 'Not Activated',\r\n    },   \r\n    {\r\n        itemName: 'Prime Monthly subscriptions',\r\n        itemId: '#ID23015',\r\n        quantity: '100 plans',\r\n        price:'179.00',\r\n        discountCode :'N/A',\r\n        discountInr :'1200.00',\r\n        taxAmount :'30.00',\r\n        taxPercApplicable :'2.5% CGST + 2.5% SGST',\r\n        taxAmountPayableInr :'17,900.00',\r\n        status: 'Not Activated',\r\n       \r\n    },     \r\n]\r\n\r\nconst OrderColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Order-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst ActionColumn = ({ row }) => {\r\n    const dispatch = useDispatch()\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onDelete = () => {\r\n        dispatch(setDeleteMode('single'))\r\n        dispatch(setSelectedRow([row.id]))\r\n    }\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Order-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <div className=\"flex justify-end text-lg\">\r\n            <Tooltip title=\"View\">\r\n                <span\r\n                    className={`cursor-pointer p-2 hover:${textTheme}`}\r\n                    onClick={onView}\r\n                >\r\n                    <HiOutlineEye />\r\n                </span>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <span\r\n                    className=\"cursor-pointer p-2 hover:text-red-500\"\r\n                    onClick={onDelete}\r\n                >\r\n                    <HiOutlineTrash />\r\n                </span>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst OrdersSolutionTable = () => {\r\n    const location = useLocation()\r\n\r\n    const data = location?.state?.rowData;\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.salesOrderList.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state.salesOrderList.data.loading)\r\n\r\n    //const data = useSelector((state) => state.salesOrderList.data.ItemList)\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getOrders())\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [orderSolutionsOrdersData])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            // {\r\n            //     header: 'Actions',\r\n            //     flex:1,\r\n            //     id: 'action',\r\n            //     cell: (props) => <ActionColumn row={props.row.original} />,\r\n            // },\r\n            // {\r\n            //     header: 'Order ID',\r\n            //     accessorKey: 'ordId',\r\n            //     flex:1,\r\n            //     cell: (props) => {\r\n                    \r\n            //         const { ordId } = props.row.original\r\n            //         return (\r\n            //             <Link className='underline decoration-blue-500 text-blue-500' to=\"/order-details\" state={{rowData:props.row.original} }>\r\n            //                 {ordId}\r\n            //             </Link>\r\n            //         )\r\n            //     },\r\n                \r\n            // },\r\n            {\r\n                header: 'Solution Name',\r\n                accessorKey: 'rel_itemid',\r\n                flex:1,\r\n                cell: () => {\r\n                    return <span>Solution Name</span>\r\n                }\r\n            },\r\n            {\r\n                header: 'Item Name',\r\n                accessorKey: 'rel_itemid',\r\n                flex:1,\r\n               \r\n            },\r\n            {\r\n                header: 'Item ID',\r\n                accessorKey: 'rel_itemid',\r\n                flex:1,\r\n            },\r\n            {\r\n                header: 'Quantity',\r\n                accessorKey: 'ord_sol_qty',\r\n                flex:1,\r\n                cell: (props) => {\r\n                    return <span>{data?.dgl_ord_sols[0]?.ord_sol_qty}</span>\r\n                }\r\n            \r\n            },\r\n            {\r\n                header: 'Price(INR)',\r\n                accessorKey: 'ord_var_amt',\r\n                flex:1,\r\n                \r\n            },\r\n            {\r\n                header: 'Discount Code',\r\n                accessorKey: 'discountCode',\r\n                flex:1,\r\n               \r\n            },\r\n            {\r\n                header: 'Discount (INR)',\r\n                accessorKey: 'discountInr',\r\n                flex:1,\r\n               \r\n            },\r\n            {\r\n                header: 'Tax amount (INR)',\r\n                accessorKey: 'ord_var_tax_amt',\r\n                flex:1,\r\n               \r\n            },{\r\n                header: 'Tax Percentage applicable',\r\n                accessorKey: 'taxPercApplicable',\r\n                flex:1,\r\n               \r\n            },\r\n            {\r\n                header: 'Tax Amount payable(INR)',\r\n                accessorKey: 'taxAmountPayableInr',\r\n                flex:1,\r\n               \r\n            },\r\n            // {\r\n            //     header: 'Status',\r\n            //     accessorKey: 'ord_status',\r\n            //     flex:1,\r\n            //     cell: (props) => {\r\n            //         return <span>{data?.ord_status}</span>\r\n            //     }\r\n            //     // cell: cell => {\r\n            //     //     return (\r\n            //     //         <div className=''>\r\n            //     //             <p>In Transit</p>\r\n            //     //         </div>\r\n            //     //     )\r\n            //     // }\r\n               \r\n            // },\r\n         \r\n           \r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowOrder([row.id]))\r\n        } else {\r\n            dispatch(removeRowOrder(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data.dgl_ord_sols?.map(val => val.dgl_ord_solitems)?.flat(1)}\r\n            loading={false}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n        />\r\n    )\r\n}\r\n\r\nexport default OrdersSolutionTable\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport NumberFormat from 'react-number-format'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowOrder,\r\n    removeRowOrder,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport dayjs from 'dayjs'\r\n\r\nconst OrderStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\nconst OrderColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Order-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst ActionColumn = ({ row }) => {\r\n    const dispatch = useDispatch()\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onDelete = () => {\r\n        dispatch(setDeleteMode('single'))\r\n        dispatch(setSelectedRow([row.id]))\r\n    }\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Order-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <div className=\"flex justify-end text-lg\">\r\n            <Tooltip title=\"View\">\r\n                <span\r\n                    className={`cursor-pointer p-2 hover:${textTheme}`}\r\n                    onClick={onView}\r\n                >\r\n                    <HiOutlineEye />\r\n                </span>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <span\r\n                    className=\"cursor-pointer p-2 hover:text-red-500\"\r\n                    onClick={onDelete}\r\n                >\r\n                    <HiOutlineTrash />\r\n                </span>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst orderShipAndDel = [\r\n    {\r\n        workOrderId : \"#W023012\",\r\n        wareHouse : \"Warehouse-1\",\r\n        packageDetails : \"Amazon Echo Show\",\r\n        shippingPatner : \"Showzee Retailers\",\r\n        trackingId : \"#231200001\",\r\n        dispatchDate : \"24th December 2022(expected)\",\r\n        estimatedTimeOfDelivery : \"Not Yet Delivered\",\r\n        deliveryStatus : \"Not Yet Delivered\"\r\n    },\r\n    {\r\n        workOrderId : \"#W023013\",\r\n        wareHouse : \"Warehouse-2\",\r\n        packageDetails : \"Amazon Fire TV Stick Lite\",\r\n        shippingPatner : \"Hellfire Retailers\",\r\n        trackingId : \"#231200002\",\r\n        dispatchDate : \"23rd December 2022\",\r\n        estimatedTimeOfDelivery : \"Not Yet Delivered\",\r\n        deliveryStatus : \"shipped\"\r\n    }\r\n]\r\n\r\nconst OrdersShipAndDelivery = () => {\r\n    const location = useLocation()\r\n\r\n    const dataItem = location?.state?.rowData;\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.salesOrderList.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state.salesOrderList.data.loading)\r\n\r\n    const data = useSelector((state) => state.salesOrderList.data.ItemList)\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getOrders())\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [data])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            // {\r\n            //     header: 'Actions',\r\n            //     flex:1,\r\n            //     id: 'action',\r\n            //     cell: (props) => <ActionColumn row={props.row.original} />,\r\n            // },\r\n            // {\r\n            //     header: 'Order ID',\r\n            //     accessorKey: 'ordId',\r\n            //     flex:1,\r\n            //     cell: (props) => {\r\n                    \r\n            //         const { ordId } = props.row.original\r\n            //         return (\r\n            //             <Link className='underline decoration-blue-500 text-blue-500' to=\"/order-details\" state={{rowData:props.row.original} }>\r\n            //                 {ordId}\r\n            //             </Link>\r\n            //         )\r\n            //     },\r\n                \r\n            // },\r\n            {\r\n                header: 'Work Order ID',\r\n                accessorKey: 'wo_desc',\r\n                flex:1,\r\n               \r\n            },\r\n            {\r\n                header: 'Warehouse',\r\n                accessorKey: 'wh_id',\r\n                flex:1,\r\n            },\r\n            {\r\n                header: 'Package Details',\r\n                accessorKey: 'package_id',\r\n                flex:1,\r\n                cell: (props) => {\r\n                    const prop = props.row.original\r\n                    return <div>{prop.dgl_work_order_packaging?.map(val => val?.package_id)?.join(\",\")}</div>\r\n                }\r\n            \r\n            },\r\n            {\r\n                header: 'Shipping Partner',\r\n                accessorKey: 'delivery_partner',\r\n                flex:1,\r\n                cell: (props) => {\r\n                    const prop = props.row.original\r\n                    return <div>{prop.dgl_wo_shippment_details?.delivery_partner}</div>\r\n                }\r\n                \r\n            },\r\n            {\r\n                header: 'Tracking ID',\r\n                accessorKey: 'tracking_number',\r\n                flex:1,\r\n                cell: (props) => {\r\n                    const prop = props.row.original\r\n                    return <div>{prop.dgl_wo_shippment_details?.tracking_number}</div>\r\n                }\r\n               \r\n            },\r\n            {\r\n                header: 'Dispatch Date',\r\n                accessorKey: 'dispatchdate',\r\n                flex:1,\r\n                cell: (props) => {\r\n                    const prop = props.row.original\r\n                    return <div>{prop.dgl_wo_shippment_details?.dispatchdate}</div>\r\n                }\r\n               \r\n            },\r\n            {\r\n                header: 'Estimated Time Of Delivery',\r\n                accessorKey: 'estimatedTimeOfDelivery',\r\n                flex:1,\r\n               \r\n            },{\r\n                header: 'Status',\r\n                accessorKey: 'wo_shippment_status',\r\n                flex:1,\r\n                cell: (props) => {\r\n                    const prop = props.row.original\r\n                    return <div>{prop.dgl_wo_shippment_details?.wo_shippment_status}</div>\r\n                }\r\n            }           \r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowOrder([row.id]))\r\n        } else {\r\n            dispatch(removeRowOrder(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={dataItem?.dgl_wo_infos}\r\n            loading={false}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n        />\r\n    )\r\n}\r\n\r\nexport default OrdersShipAndDelivery\r\n","import React, { useState } from 'react'\r\nimport OrderAccountInfo from './OrderAccountInfo'\r\nimport OrderContactInfo from './OrderContactInfo'\r\nimport OrderAddressInfo from './OrderAddressInfo'\r\nimport OrderUploadFiles from './OrderUploadFiles'\r\nimport OrderBillingInfo from './OrderBillingInfo'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport { Card } from 'components/ui'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nconst OrderPaymentDetails = (props) => {\r\n    const location = useLocation()\r\n\r\n    const data = location?.state?.rowData;\r\n    const paymentDetails = data?.dgl_ord_payments?.[0];\r\n    // console.log(\"navya\",location?.state?.rowData)\r\n    return (\r\n        <>\r\n        <AdaptableCard className=\"h-full\" bodyClass=\"h-full\" >\r\n        <Card className=\"mb-4\">\r\n                <div className=\"md:grid grid-cols-2 mb-4\">\r\n                    <h5 className=\"mb-4 mt-1 font-bold\">\r\n                        PAYMENT DETAILS{' '}\r\n                    </h5>\r\n                </div>\r\n                <div className=\"md:grid grid-cols-4\">\r\n                    <div className='mb-4 mr-2'>\r\n                        <p className=\"text-base text-black font-bold decoration-2 mb-0\">Bundle Name:</p>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 text-base break-words mr-2\">Amazon Echo show with Fire TV Stick Lite, data & subscription plans</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mb-4 mr-2'>\r\n                        <p className=\"text-base text-black font-bold decoration-2 mb-0\">Payment Date & Time:</p>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 mr-2 text-base\">{paymentDetails?.pay_dttime}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mb-4 mr-2'>\r\n                        <p className=\"text-base text-black font-bold decoration-2 mb-0\">Payment Status:</p>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 mr-2 text-base\">{paymentDetails?.pay_status}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mb-4 mr-2'>\r\n                        <p className=\"text-base text-black font-bold decoration-2 mb-0\">Mode of payment:</p>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 mr-2 text-base\">{paymentDetails?.pay_mode}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mb-4 mr-2'>\r\n                        <p className=\"text-base text-black font-bold decoration-2 mb-0\">Totla amount payable:</p>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 mr-2 text-base\">{data?.ord_cart_tot_amount}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mb-4 mr-2'>\r\n                        <p className=\"text-base text-black font-bold decoration-2 mb-0\">Transaction ID:</p>\r\n                        <div className=\"md:grid grid-cols-1 gap-2\">\r\n                            <p className=\"mt-2 mr-2 text-base\">{paymentDetails?.transaction_id}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n          </AdaptableCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderPaymentDetails\r\n","\r\nimport React from 'react'\r\nimport { Tabs } from 'components/ui'\r\nimport OrdersTable from './OrdersTable'\r\nimport OrdersTableTools from './OrdersTableTools'\r\nimport CancelledOrdersTable from './CancelledOrdersTable'\r\nimport ReplacedOrdersTable from './ReplacedOrdersTable'\r\nimport OrderDeleteConfirmation from './OrdersDeleteConfirmation'\r\nimport OrderDetails from './OrderDetails'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport OrderOverviewHeaderActions from './OrderOverviewHeaderActions'\r\nimport OrdersSolutionTable from './OrdersSolutionDetails'\r\nimport OrdersShipAndDelivery from './OrderShipAndDelivery'\r\nimport OrderPaymentDetails from './OrdersPaymentDetails'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\n\r\nconst { TabNav, TabList, TabContent } = Tabs\r\n\r\nconst Default = () => {\r\n    const breadCrumbList=[{\r\n        name:'Home',\r\n        link:\"/home\"\r\n        },{\r\n            name:'Orders',\r\n            link:\"/orders\"\r\n        },{\r\n          name:'Order Details'\r\n        }]\r\n    return (\r\n        <>\r\n            <CustomBreadcrumbs list={breadCrumbList}/>\r\n            {/* <div>Home/Orders/Order Details</div> */}\r\n                <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n                    <div>\r\n                        <Tabs defaultValue=\"orderDetails\">\r\n                            <TabList>\r\n                                <TabNav value=\"orderDetails\">Order Details</TabNav>\r\n                                <TabNav value=\"workOrders\">Work Orders</TabNav>\r\n                                <TabNav value=\"orderFulfillment\">Order Fulfillment</TabNav>\r\n                                <TabNav value=\"conflicts\">Conflicts</TabNav>\r\n                            </TabList>\r\n                            <div className=\"p-4\">\r\n                                <TabContent value=\"orderDetails\">\r\n                                <div className=\"lg:flex items-center justify-between mb-4\">\r\n                                    <h3 className=\"mb-4 lg:mb-0\">Order Details</h3>\r\n                                        <OrderOverviewHeaderActions/>\r\n                                </div>\r\n                                <OrderDetails />\r\n                                <div className='my-4 pb-6 border-b'>\r\n                                    <h5 className=\"mb-4 mx-4 font-bold\">SOLUTION DETAILS</h5>\r\n                                    <OrdersSolutionTable />\r\n                                </div>\r\n                                <div className='mb-8 pb-6 border-b'>\r\n                                    <h5 className=\"mb-4 mx-4 font-bold\">SHIPMENT & DELIVERY</h5>\r\n                                    <OrdersShipAndDelivery />\r\n                                </div>\r\n                                <OrderPaymentDetails />\r\n                                    {/* <OrdersTable /> */}\r\n                                    {/* <OrderDeleteConfirmation /> */}\r\n                                </TabContent>\r\n                                <TabContent value=\"workOrders\">\r\n                                    <div className=\"lg:flex items-center justify-between mb-4\">\r\n                                        <h3 className=\"mb-4 lg:mb-0\">Work Orders</h3>\r\n                                        <OrdersTableTools />\r\n                                    </div>\r\n                                    <CancelledOrdersTable />\r\n                                    <OrderDeleteConfirmation />\r\n                                </TabContent>\r\n                                <TabContent value=\"orderFulfillment\">\r\n                                    <div className=\"lg:flex items-center justify-between mb-4\">\r\n                                        <h3 className=\"mb-4 lg:mb-0\">Order Fulfillment</h3>\r\n                                        <OrdersTableTools />\r\n                                    </div>\r\n                                    <ReplacedOrdersTable />\r\n                                    <OrderDeleteConfirmation />\r\n                                </TabContent>\r\n                                <TabContent value=\"conflicts\">\r\n                                    <div className=\"lg:flex items-center justify-between mb-4\">\r\n                                        <h3 className=\"mb-4 lg:mb-0\">Conflicts</h3>\r\n                                        <OrdersTableTools />\r\n                                    </div>\r\n                                    <ReplacedOrdersTable />\r\n                                    <OrderDeleteConfirmation />\r\n                                </TabContent>\r\n                            </div>\r\n                        </Tabs>\r\n                    </div>\r\n                </AdaptableCard>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Default\r\n\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["orderSolutionsOrdersData","itemName","itemId","quantity","price","discountCode","discountInr","taxAmount","taxPercApplicable","taxAmountPayableInr","status","location","useLocation","data","state","rowData","tableRef","useRef","dispatch","useDispatch","useSelector","salesOrderList","tableData","pageIndex","pageSize","sort","query","total","fetchData","loading","useCallback","getOrders","useEffect","setSelectedRows","current","resetSelected","useMemo","columns","header","accessorKey","flex","cell","props","dgl_ord_sols","ord_sol_qty","checked","rows","originalRows","map","row","original","selectedIds","forEach","push","id","ref","val","dgl_ord_solitems","flat","pagingData","onPaginationChange","page","newTableData","cloneDeep","setTableData","onSelectChange","value","Number","onSort","dataItem","ItemList","prop","dgl_work_order_packaging","package_id","join","dgl_wo_shippment_details","delivery_partner","tracking_number","dispatchdate","wo_shippment_status","dgl_wo_infos","paymentDetails","dgl_ord_payments","className","bodyClass","pay_dttime","pay_status","pay_mode","ord_cart_tot_amount","transaction_id","TabNav","Tabs","TabList","TabContent","list","name","link","defaultValue","OrderOverviewHeaderActions","OrderDetails","OrdersTableTools","CancelledOrdersTable","ReplacedOrdersTable","trimmedEndIndex","require","reTrimStart","module","exports","string","slice","replace","reWhitespace","index","length","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}