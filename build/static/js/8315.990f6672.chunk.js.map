{"version":3,"file":"static/js/8315.990f6672.chunk.js","mappings":"6iBAEO,SAAeA,EAAoB,GAAD,+BAMxC,8CANM,WAAmCC,GAAM,+FACrCC,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,mBACJC,OAAQ,MACRH,OAAAA,KACF,4CACL,sBACM,SAAeI,EAAc,GAAD,+BAiBlC,8CAjBM,WAA6BC,GAAI,uGAEbJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAK,qBACLC,OAAQ,MACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAeC,EAAgB,GAAD,+BAMpC,8CANM,WAA+BX,GAAM,+FACjCC,EAAAA,EAAAA,UAAqB,CACxBC,IAAK,qBACLC,OAAQ,MACRH,OAAAA,KACF,4CACL,sBACM,SAAeY,EAAc,GAAD,+BAiBlC,8CAjBM,WAA6BP,GAAI,uGAEbJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAK,qBACLC,OAAQ,OACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAeG,EAAuB,EAAD,kCAK3C,8CALM,WAAsCC,EAAIP,GAAM,+FAC5CN,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,yBAAD,OAA2BY,EAAE,uBAAeP,GAC/CJ,OAAQ,WACV,4CACL,sBAEM,SAAeY,EAAa,GAAD,+BAKjC,8CALM,WAA4BV,GAAI,+FAC5BJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,wCAAD,OAA0CG,EAAKW,cAClDb,OAAQ,SACV,4CACL,sBAEM,SAAec,EAAsB,GAAD,+BAM1C,8CANM,WAAqCjB,GAAM,+FACvCC,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,6BAAD,OAA+BF,GAClCG,OAAQ,SAEV,4CACL,sBAEM,SAAee,EAAmB,GAAD,+BAiBvC,8CAjBM,WAAkCb,GAAI,uGAElBJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,kBACJC,OAAQ,OACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAeS,EAAmB,GAAD,+BAiBvC,8CAjBM,WAAkCd,GAAI,uGAElBJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,kBACJC,OAAQ,MACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAeU,EAAqB,GAAD,+BAKzC,8CALM,WAAoCf,GAAI,+FACpCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,0BAAD,OAA4BG,EAAKW,cACpCb,OAAQ,SACV,4CACL,sBAEM,SAAekB,EAAiB,EAAD,kCAMrC,8CANM,WAAgChB,EAAKL,GAAM,+FACvCC,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,yCAAD,OAA2CG,EAAKiB,uBACnDnB,OAAQ,MACRH,OAAAA,KACF,4CACL,sBAEM,SAAeuB,EAAgB,EAAD,kCAiBpC,8CAjBM,WAA+BlB,EAAMW,GAAY,uGAE7Bf,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,wBAAD,OAA0Bc,GAC7Bb,OAAQ,OACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAec,EAAkB,EAAD,kCAiBtC,8CAjBM,WAAiCnB,EAAKW,GAAY,uGAE9Bf,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,wBAAD,OAA0Bc,GAC7Bb,OAAQ,OACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAee,EAA4B,EAAD,kCAKhD,8CALM,WAA2CX,EAAIP,GAAM,+FACjDN,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,uBAAD,OAAyBY,EAAE,2BAAmBP,GACjDJ,OAAQ,WACV,4CACL,sBAEM,SAAeuB,EAAkB,GAAD,+BAMtC,8CANM,WAAiC1B,GAAM,+FACnCC,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,wBAAD,OAA0BF,EAAOgB,cACpCb,OAAQ,MACRH,OAAAA,KACF,4CACL,sBAEM,SAAe2B,EAAyB,EAAD,kCAM7C,8CANM,WAAwCb,EAAIP,GAAM,+FAE9CN,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,qBAAD,OAAuBY,EAAE,yBAAiBP,GAC7CJ,OAAQ,WACV,4CACL,sBAEM,SAAeyB,EAAe,EAAD,oCAqBnC,8CArBM,WAA8BC,EAAKC,EAAMC,GAAI,gFAGd,OAHc,UAEtCC,EAAW,IAAIC,UACZC,OAAO,OAAQL,GAAM,SACX5B,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,UAAD,OAAY4B,EAAI,YAAIC,GACvB5B,OAAQ,OACRE,KAAM2B,EACNG,QAAQ,CAAC,eAAgB,yBAC3B,OALQ,OAAJ7B,EAAI,yBAMH,CACHC,OAAQ,UACRF,KAAMC,EAAKD,OACd,yDAGM,CACHE,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sB,sVChKM,SAAe0B,EAAkB,GAAD,+BAQtC,8CARM,WAAiCpC,GAAM,+FACnCC,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,yBAGJC,OAAQ,MACRH,OAAAA,KACF,4CACL,sBAEM,SAAeqC,EAAqB,GAAD,+BAMzC,8CANM,WAAoChC,GAAI,+FACpCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAK,uBACLC,OAAQ,SACRE,KAAAA,KACF,4CACL,sBAUM,SAAeiC,EAAkB,GAAD,+BAiBtC,8CAjBM,WAAiCjC,GAAI,uGAEjBJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAK,yBACLC,OAAQ,OACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAe6B,EAAkB,GAAD,+BAiBtC,8CAjBM,WAAiClC,GAAI,uGAEjBJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAK,yBACLC,OAAQ,MACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAEM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAe8B,EAAqB,EAAD,kCAKzC,8CALM,WAAoC1B,EAAIP,GAAM,+FAC1CN,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,6BAAD,OAA+BY,EAAE,uBAAeP,GACnDJ,OAAQ,WACV,4CACL,sBAEM,SAAesC,EAAe,GAAD,+BAKnC,8CALM,WAA8BpC,GAAI,+FAC9BJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,sCAAD,OAAwCG,EAAKW,cAChDb,OAAQ,SACV,4CACL,sBAEM,SAAeuC,EAAoB,GAAD,+BAKxC,8CALM,WAAmCrC,GAAI,+FACnCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,mCAAD,OAAqCG,EAAKW,cAC7Cb,OAAQ,SACV,4CACL,sBAEM,SAAekB,EAAiB,GAAD,+BAMrC,8CANM,WAAgChB,GAAI,+FAChCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,yCAAD,OAA2CG,EAAKiB,uBAEnDnB,OAAQ,SACV,4CACL,sBAEM,SAAewC,EAAsB,GAAD,+BAK1C,8CALM,WAAqCtC,GAAI,+FACrCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,kCAAD,OAAoCG,EAAKuC,QAC5CzC,OAAQ,SACV,4CACL,sBAEM,SAAeyB,EAAe,EAAD,oCAqBnC,8CArBM,WAA8BC,EAAKC,EAAMC,GAAI,gFAGd,OAHc,UAEtCC,EAAW,IAAIC,UACZC,OAAO,OAAQL,GAAM,SACX5B,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,UAAD,OAAY4B,EAAI,YAAIC,GACvB5B,OAAQ,OACRE,KAAM2B,EACNG,QAAQ,CAAC,eAAgB,yBAC3B,OALQ,OAAJ7B,EAAI,yBAMH,CACHC,OAAQ,UACRF,KAAMC,EAAKD,OACd,yDAGM,CACHE,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAQ,KAAOK,aAC7C,0DAER,sBAEM,SAAemC,EAAsB,GAAD,+BAK1C,8CALM,WAAqCxC,GAAI,+FACrCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,iEAAD,OAAmEG,GACtEF,OAAQ,SACV,4CACL,sB,sQCzIM,SAAe2C,EAAgB,GAAD,+BAoBpC,8CApBM,WAA+BzC,GAAI,uGAGfJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,4BACJC,OAAQ,OACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAGM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAO,KAAOK,aAC5C,0DAGR,sBAEM,SAAeqC,EAAgB,GAAD,+BAqBpC,8CArBM,WAA+B1C,GAAI,uGAGfJ,EAAAA,EAAAA,UAAqB,CACpCC,IAAI,4BACJC,OAAQ,MACRE,KAAAA,IACF,OAJQ,OAAJC,EAAI,yBAKH,CACHC,OAAQ,UACRF,KAAMC,IACT,yDAGM,CACHC,OAAQ,SACRC,SAAS,4BAAgB,QAAhB,OAAQC,gBAAQ,WAAhB,IAAkBJ,OAAO,KAAOK,aAC5C,0DAIR,sBAsBM,SAAe0B,EAAkB,GAAD,+BAWtC,8CAXM,WAAiCpC,GAAM,+FAEnCC,EAAAA,EAAAA,UAAqB,CAGxBC,IAAI,4BAEJC,OAAQ,MACRH,OAAAA,KAEF,4CACL,sBAkBM,SAAegD,EAAyB,EAAD,kCAO7C,8CAPM,WAAwClC,EAAIP,GAAM,+FAE9CN,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,gCAAD,OAAkCY,EAAE,wBAAgBP,GACvDJ,OAAQ,WAEV,4CACL,sBAEM,SAAesC,EAAe,GAAD,+BAMnC,8CANM,WAA8BpC,GAAI,+FAC9BJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,sCAAD,OAAwCG,EAAKW,cAChDb,OAAQ,SAEV,4CACL,sBAEM,SAAeuC,EAAoB,GAAD,+BAOxC,8CAPM,WAAmCrC,GAAI,+FAEnCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,mCAAD,OAAqCG,EAAKW,cAC7Cb,OAAQ,SAEV,4CACL,sBACM,SAAe8C,EAAwB,GAAD,+BAQ5C,8CARM,WAAuC5C,GAAI,+FAEvCJ,EAAAA,EAAAA,UAAqB,CAExBC,IAAI,gDAAD,OAAkDG,EAAKW,aAAY,mBACtEb,OAAQ,SAEV,4CACL,sBACM,SAAe0C,EAAsB,GAAD,+BAK1C,8CALM,WAAqCxC,GAAI,+FACrCJ,EAAAA,EAAAA,UAAqB,CACxBC,IAAI,iEAAD,OAAmEG,GACtEF,OAAQ,SACV,4CACL,sB,0UCjKY+C,GAAYC,EAAAA,EAAAA,IACrB,+BAA8B,yCAC9B,WAAO9C,GAAI,6FACgBqB,EAAAA,EAAAA,IAAkBrB,GAAK,OAAhC,OAARI,EAAQ,yBACPA,EAASJ,MAAI,2CACvB,mDAJ6B,IAOrB+C,GAAmBD,EAAAA,EAAAA,IAC5B,sCAAqC,yCACrC,WAAO9C,GAAI,6FACgBN,EAAAA,EAAAA,IAAoBM,GAAK,OAAlC,OAARI,EAAQ,yBACPA,EAASJ,MAAI,2CACvB,mDAJoC,IAO5BgD,GAAeF,EAAAA,EAAAA,IACxB,kCAAiC,yCACjC,WAAO9C,GAAI,6FACgBM,EAAAA,EAAAA,IAAgBN,GAAK,OAA9B,OAARI,EAAQ,yBAEPA,EAASJ,MAAI,2CACvB,mDALgC,IAQxBiD,GAAeH,EAAAA,EAAAA,IACxB,kCAAiC,yCACjC,WAAO9C,GAAI,6FACgBU,EAAAA,EAAAA,IAAaV,GAAK,OAA3B,OAARI,EAAQ,yBACPA,EAASJ,MAAI,2CACvB,mDAJgC,IAOxBkD,GAAqBJ,EAAAA,EAAAA,IAC9B,wCAAuC,yCACvC,WAAO9C,GAAI,6FACgBY,EAAAA,EAAAA,IAAsBZ,GAAK,OAApC,OAARI,EAAQ,yBACPA,EAASJ,KAAKI,UAAQ,2CAChC,mDAJsC,IAO9B+C,GAAiBL,EAAAA,EAAAA,IAC1B,oCAAmC,yCACnC,WAAO9C,GAAI,6FACgBgB,EAAAA,EAAAA,IAAiBhB,GAAK,OAA/B,OAARI,EAAQ,yBACPA,EAASJ,MAAI,2CACvB,mDAJkC,IAO1BoD,GAAqBN,EAAAA,EAAAA,IAC9B,wCAAuC,yCACvC,WAAO9C,GAAI,6FACgBsC,EAAAA,EAAAA,IAAsBtC,GAAK,OAApC,OAARI,EAAQ,yBACPA,EAASJ,MAAI,2CACvB,mDAJsC,IAO9BqD,GAAoBP,EAAAA,EAAAA,IAC7B,uCAAsC,yCACtC,WAAO9C,GAAI,6FACgBe,EAAAA,EAAAA,IAAqBf,GAAK,OAAnC,OAARI,EAAQ,yBACPA,EAASJ,MAAI,2CACvB,mDAJqC,IAuBpCsD,GAAYC,EAAAA,EAAAA,IAAY,CAC1BC,KAAM,qBACNC,aAAc,CACVC,SAAS,EACTC,YAAa,GACbC,UAhBwB,CAC5BC,MAAO,EACPC,UAAW,EACXC,SAAU,GACVC,MAAO,GACPC,KAAM,CACFC,MAAO,GACPC,IAAK,KAULC,cAAe,GACfC,UAAW,GACXC,oBAAqB,GACrBC,gBAAiB,GACjBC,gBAAiB,CAAC,EAClBC,UAAW,GACXC,sBAAuB,IAE3BC,SAAU,CACNC,aAAc,SAACC,EAAOC,GAClBD,EAAMH,sBAAwBI,EAAOC,QAAQC,GACjD,EACAC,aAAc,SAACJ,EAAOC,GAClBD,EAAMjB,UAAYkB,EAAOC,OAC7B,EACAG,iBAAkB,SAACL,EAAOC,GACtBD,EAAMT,cAAgBU,EAAOC,OACjC,EACAI,aAAc,SAACN,EAAOC,GAClBD,EAAMR,UAAYS,EAAOC,OAC7B,EACAK,uBAAwB,SAACP,EAAOC,GAC5BD,EAAMP,oBAAsBQ,EAAOC,OACvC,EACAM,cAAe,SAACR,EAAOC,GACnBD,EAAMN,gBAAkBO,EAAOC,OACnC,EAEAO,mBAAoB,SAACT,EAAOC,GACxBD,EAAML,gBAAkBM,EAAOC,OACnC,EACAQ,aAAc,SAACV,EAAOC,GAClBD,EAAMJ,UAAYK,EAAOC,OAC7B,GAEJS,eAAa,eACR3C,EAAU4C,WAAY,SAACZ,EAAOC,GAC3BD,EAAMH,sBAAwBI,EAAOC,QACrCF,EAAMjB,UAAUC,MAAQiB,EAAOC,QAAQlB,MACvCgB,EAAMnB,SAAU,CACpB,KAAC,SACAb,EAAU6C,SAAU,SAACb,GAClBA,EAAMnB,SAAU,CACpB,KAAC,SAEAX,EAAiB0C,WAAY,SAACZ,EAAOC,GAClCD,EAAMT,cAAgBU,EAAOC,QAC7BF,EAAMnB,SAAU,CACpB,KAAC,SACAX,EAAiB2C,SAAU,SAACb,EAAOC,GAChCD,EAAMnB,SAAU,CACpB,KAAC,SACAV,EAAayC,WAAY,SAACZ,EAAOC,GAC9BD,EAAMR,UAAYS,EAAOC,QACzBF,EAAMnB,SAAU,CACpB,KAAC,SACAV,EAAa0C,SAAU,SAACb,EAAOC,GAC5BD,EAAMnB,SAAU,CACpB,KAAC,SACAR,EAAmBuC,WAAY,SAACZ,EAAOC,GAAY,IAAD,EAC/CD,EAAMP,oBAAoC,QAAjB,EAAGQ,EAAOC,eAAO,aAAd,EAAgBY,KAAI,SAACC,GAAM,MAAM,CACzDC,MAAOD,EAAOnF,GACdqF,MAAOF,EAAOG,eACjB,IACDlB,EAAMnB,SAAU,CACpB,KAAC,SACAR,EAAmBwC,SAAU,SAACb,EAAOC,GAClCD,EAAMnB,SAAU,CACpB,KAAC,SACAP,EAAesC,WAAY,SAACZ,EAAOC,GAAY,IAAD,IAC3CD,EAAMN,gBAAgC,QAAjB,EAAGO,EAAOC,eAAO,OAAK,QAAL,EAAd,EAAgBC,WAAG,WAAL,EAAd,EAAqBW,KAAI,SAACC,GAAM,MAAM,CAC1DC,MAAOD,EAAOnF,GACdqF,MAAOF,EAAOpC,KACjB,GACL,KAAC,SACAL,EAAeuC,SAAU,SAACb,EAAOC,GAC9BD,EAAMnB,SAAU,CACpB,KAAC,SACAN,EAAmBqC,WAAY,SAACZ,EAAOC,GACpCD,EAAML,gBAAkBM,EAAOC,QAE/BF,EAAMnB,SAAU,CACpB,KAAC,SACAN,EAAmBsC,SAAU,SAACb,GAC3BA,EAAMnB,SAAU,CACpB,KAAC,SACAL,EAAkBoC,WAAY,SAACZ,EAAOC,GACnCD,EAAMlB,YAAcmB,EAAOC,QAC3BF,EAAMnB,SAAU,CACpB,KAAC,SACAL,EAAkBqC,SAAU,SAACb,EAAOC,GACjCD,EAAMnB,SAAU,CACpB,KAAC,SACAT,EAAawC,WAAY,SAACZ,EAAOC,GAAY,IAAD,EACzCD,EAAMJ,UAA8B,QAArB,EAAGK,EAAOC,QAAQC,WAAG,aAAlB,EAAoBW,KAAI,SAAClB,GAAS,MAAM,CACtDoB,MAAOpB,EAAUhE,GACjBqF,MAAOrB,EAAUjB,KACpB,IACDqB,EAAMnB,SAAU,CACpB,KAAC,SACAT,EAAayC,SAAU,SAACb,EAAOC,GAC5BD,EAAMnB,SAAU,CACpB,IAAC,KAIF,EASHJ,EAAU0C,QAPVf,GADY,EAAZL,aACY,EAAZK,cACgB,EAAhBC,iBACY,EAAZC,aACsB,EAAtBC,uBACa,EAAbC,cACkB,EAAlBC,mBACY,EAAZC,aAGJ,KAAejC,EAAiB,O","sources":["services/MyAccountService.js","services/OperatorsService.js","services/RetailService.js","views/accounts/MyAccounts/store/dataSlice.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetDocPolicyData(params) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\nexport async function apiUpdateUser(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/acc-users',\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetUsersData(params) {\r\n    return ApiService.fetchData({\r\n        url: '/account/acc-users',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\nexport async function apiCreateUser(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/acc-users',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateUserAccStatus(id, status) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-users?id=${id}&userStatus=${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiUserRoles(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/roles/child-roles/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetDocTypeDropDown(params) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-types/unq-id/${params}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiCreateDocPolicy(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `account/doc-pol`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateDocPolicy(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `account/doc-pol`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetAccountDetails(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetPublicRole(data,params) {\r\n    return ApiService.fetchData({\r\n        url: `/account/roles/master-roles/drop-down/${data.acc_mno_parent_unq_id}`,\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport async function apiPostUserRole(data, enterAccount) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/roles?unqId=${enterAccount}`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateUserRole(data,enterAccount) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/roles?unqId=${enterAccount}`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateDocPolicyAccStatus(id, status) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?id=${id}&mdDocPolStatus=${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetAllUserRole(params) {\r\n    return ApiService.fetchData({\r\n        url: `/account/roles/unqId/${params.enterAccount}`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateChildRoleStatus(id, status) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/roles?id=${id}&mdRoleStatus=${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n","import ApiService from './ApiService'\r\nimport axios from 'axios'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators`,\r\n        //url: `/account/acc-operators?page_no=0&page_size=1000&sort_field=id`,\r\n\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitOperator(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/acc-operators',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/account/acc-operators',\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateOpAccStatus(id, status) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators?id=${id}&acc_status=${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetPublicRole(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/roles/master-roles/drop-down/${data.acc_mno_parent_unq_id}`,\r\n        //url: `/account/roles/master-roles/GL1`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetRolePermissions(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/role-permissions/role/${data.roleId}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiUploadFiles(file,loc1, loc2) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const resp = await ApiService.fetchData({\r\n            url: `/media/${loc1}/${loc2}`,\r\n            method: 'post',\r\n            data: formData,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp.data,\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiSubmitRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport async function apiUpdateRetail(data) {\r\n    \r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `/account/retail-customers`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp, // Include the response data if needed\r\n        };\r\n\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data|| errors.toString(),\r\n        };\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport async function apiUpdateOperator(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: '/account/acc-operators',\r\n        method: 'put',\r\n        data,\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// export async function apiGetSalesOrders(params) {\r\n//     return ApiService.fetchData({\r\n//         url: '/retails/sales/orders',\r\n//         method: 'get',\r\n//         params,\r\n//     })\r\n// }\r\n\r\nexport async function apiGetSalesOrders(params) {\r\n\r\n    return ApiService.fetchData({\r\n        //url: `/account/retail-customers?page_no=${params.pageIndex}&page_size=${params.pageSize}&sort_field=${params.sort.key}`,\r\n\r\n        url: `/account/retail-customers`,\r\n\r\n        method: 'get',\r\n        params\r\n\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesOrders(data) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesOrderDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/retails/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiUpdateRetailAccStatus(id, status) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/retail-customers?id=${id}&cust_status=${status}`,\r\n        method: 'patch',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetCurrency(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/currency/unq-id/drop-down/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\n\r\nexport async function apiGetParentAccount(data) {\r\n\r\n    return ApiService.fetchData({\r\n        url: `/account/acc-operators/dropdown/${data.enterAccount}`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetCustomerCatRetail(data) {\r\n\r\n    return ApiService.fetchData({\r\n\r\n        url: `/account/cust-cats/unq-id-acc-type/drop-down/${data.enterAccount}/RetailCustomer`,\r\n        method: 'get',\r\n\r\n    })\r\n}\r\nexport async function apiGetUploadFileTypes(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/doc-pol?page_no=0&page_size=100&sort_feild=id&unq_id=${data}`,\r\n        method: 'get',\r\n    })\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    apiCreateUser,\r\n    apiGetDocPolicyData,\r\n    apiGetUsersData,\r\n    apiGetDocTypeDropDown,\r\n    apiGetAccountDetails,\r\n    apiGetPublicRole,\r\n    apiUserRoles,\r\n    apiGetAllUserRole,\r\n} from 'services/MyAccountService'\r\nimport { apiGetSalesOrders, apiDeleteSalesOrders } from 'services/RetailService'\r\nimport { apiGetRolePermissions } from 'services/OperatorsService'\r\n\r\nexport const getOrders = createAsyncThunk(\r\n    'myaccountList/data/getOrders',\r\n    async (data) => {\r\n        const response = await apiGetAllUserRole(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getDocPolicyList = createAsyncThunk(\r\n    'myaccountList/data/getDocPolicyList',\r\n    async (data) => {\r\n        const response = await apiGetDocPolicyData(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getUsersList = createAsyncThunk(\r\n    'myaccountList/data/getUsersList',\r\n    async (data) => {\r\n        const response = await apiGetUsersData(data)\r\n\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getUserRoles = createAsyncThunk(\r\n    'myaccountList/data/getUserRoles',\r\n    async (data) => {\r\n        const response = await apiUserRoles(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getDocTypeDropdown = createAsyncThunk(\r\n    'myaccountList/data/getDocTypeDropdown',\r\n    async (data) => {\r\n        const response = await apiGetDocTypeDropDown(data)\r\n        return response.data.response\r\n    }\r\n)\r\n\r\nexport const getPublicRoles = createAsyncThunk(\r\n    'myaccountList/data/getPublicRoles',\r\n    async (data) => {\r\n        const response = await apiGetPublicRole(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getRolePermissions = createAsyncThunk(\r\n    'myaccountList/data/getRolePermissions',\r\n    async (data) => {\r\n        const response = await apiGetRolePermissions(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getAccountDetails = createAsyncThunk(\r\n    'myaccountList/data/getAccountDetails',\r\n    async (data) => {\r\n        const response = await apiGetAccountDetails(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteOrders = async (data) => {\r\n    const response = await apiDeleteSalesOrders(data)\r\n    return response.data\r\n}\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'myaccountList/data',\r\n    initialState: {\r\n        loading: false,\r\n        accountList: [],\r\n        tableData: initialTableData,\r\n        docPolicyList: [],\r\n        usersList: [],\r\n        docTypeDropdownList: [],\r\n        publicRolesList: [],\r\n        rolePermissions: {},\r\n        userRoles: [],\r\n        userRoleAndPermitList: [],\r\n    },\r\n    reducers: {\r\n        setOrderList: (state, action) => {\r\n            state.userRoleAndPermitList = action.payload.res\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setDocPolicyList: (state, action) => {\r\n            state.docPolicyList = action.payload\r\n        },\r\n        setUsersList: (state, action) => {\r\n            state.usersList = action.payload\r\n        },\r\n        setDocTypeDropdownList: (state, action) => {\r\n            state.docTypeDropdownList = action.payload\r\n        },\r\n        setPublicRole: (state, action) => {\r\n            state.publicRolesList = action.payload\r\n        },\r\n\r\n        setRolePermissions: (state, action) => {\r\n            state.rolePermissions = action.payload\r\n        },\r\n        setUserRoles: (state, action) => {\r\n            state.userRoles = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getOrders.fulfilled]: (state, action) => {\r\n            state.userRoleAndPermitList = action.payload\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getOrders.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n\r\n        [getDocPolicyList.fulfilled]: (state, action) => {\r\n            state.docPolicyList = action.payload\r\n            state.loading = false\r\n        },\r\n        [getDocPolicyList.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n        [getUsersList.fulfilled]: (state, action) => {\r\n            state.usersList = action.payload\r\n            state.loading = false\r\n        },\r\n        [getUsersList.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n        [getDocTypeDropdown.fulfilled]: (state, action) => {\r\n            state.docTypeDropdownList = action.payload?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.doc_type_title,\r\n            }))\r\n            state.loading = false\r\n        },\r\n        [getDocTypeDropdown.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n        [getPublicRoles.fulfilled]: (state, action) => {\r\n            state.publicRolesList = action.payload?.res?.map((parent) => ({\r\n                value: parent.id,\r\n                label: parent.name,\r\n            }))\r\n        },\r\n        [getPublicRoles.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n        [getRolePermissions.fulfilled]: (state, action) => {\r\n            state.rolePermissions = action.payload\r\n\r\n            state.loading = false\r\n        },\r\n        [getRolePermissions.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getAccountDetails.fulfilled]: (state, action) => {\r\n            state.accountList = action.payload\r\n            state.loading = false\r\n        },\r\n        [getAccountDetails.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n        [getUserRoles.fulfilled]: (state, action) => {\r\n            state.userRoles = action.payload.res?.map((userRoles) => ({\r\n                value: userRoles.id,\r\n                label: userRoles.name,\r\n            }))\r\n            state.loading = false\r\n        },\r\n        [getUserRoles.pending]: (state, action) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setOrderList,\r\n    setTableData,\r\n    setDocPolicyList,\r\n    setUsersList,\r\n    setDocTypeDropdownList,\r\n    setPublicRole,\r\n    setRolePermissions,\r\n    setUserRoles,\r\n} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n"],"names":["apiGetDocPolicyData","params","ApiService","url","method","apiUpdateUser","data","resp","status","message","response","toString","apiGetUsersData","apiCreateUser","apiUpdateUserAccStatus","id","apiUserRoles","enterAccount","apiGetDocTypeDropDown","apiCreateDocPolicy","apiUpdateDocPolicy","apiGetAccountDetails","apiGetPublicRole","acc_mno_parent_unq_id","apiPostUserRole","apiUpdateUserRole","apiUpdateDocPolicyAccStatus","apiGetAllUserRole","apiUpdateChildRoleStatus","apiUploadFiles","file","loc1","loc2","formData","FormData","append","headers","apiGetSalesOrders","apiDeleteSalesOrders","apiSubmitOperator","apiUpdateOperator","apiUpdateOpAccStatus","apiGetCurrency","apiGetParentAccount","apiGetRolePermissions","roleId","apiGetUploadFileTypes","apiSubmitRetail","apiUpdateRetail","apiUpdateRetailAccStatus","apiGetCustomerCatRetail","getOrders","createAsyncThunk","getDocPolicyList","getUsersList","getUserRoles","getDocTypeDropdown","getPublicRoles","getRolePermissions","getAccountDetails","dataSlice","createSlice","name","initialState","loading","accountList","tableData","total","pageIndex","pageSize","query","sort","order","key","docPolicyList","usersList","docTypeDropdownList","publicRolesList","rolePermissions","userRoles","userRoleAndPermitList","reducers","setOrderList","state","action","payload","res","setTableData","setDocPolicyList","setUsersList","setDocTypeDropdownList","setPublicRole","setRolePermissions","setUserRoles","extraReducers","fulfilled","pending","map","parent","value","label","doc_type_title","actions"],"sourceRoot":""}