{"version":3,"file":"static/js/9007.5f4d5404.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","services/BillingService.js","services/ItemsService.js","views/billing/Charge&Bills/components/ChargeAndBillsTableSearch.js","views/billing/Charge&Bills/components/ChargeAndBillsTableFilter.js","views/billing/Charge&Bills/components/ChargeAndBillsTableTools.js","views/billing/Charge&Bills/store/dataSlice.js","views/billing/Charge&Bills/store/stateSlice.js","views/billing/Charge&Bills/components/ChargeAndBillsTable.js","views/billing/Charge&Bills/components/EnterPriseTableSearch.js","views/billing/Charge&Bills/components/EnterPriseTableFilter.js","views/billing/Charge&Bills/components/EnterPriseTableTools.js","views/billing/Charge&Bills/components/EnterPriseCustTable.js","views/billing/Charge&Bills/components/RetailCustTableTools.js","views/billing/Charge&Bills/components/RetaiCustTable.js","views/billing/Charge&Bills/store/index.js","views/billing/Charge&Bills/BillingTabs.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import ApiService from \"./ApiService\";\r\n\r\n\r\nexport async function apiGetBillingInvoices(params) {\r\n    return ApiService.fetchData({\r\n        url: '/billing/invoice/paging',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetBillingBill(params) {\r\n    return ApiService.fetchData({\r\n        url: '/billing/bill/paging',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetOrderPayment(params) {\r\n    return ApiService.fetchData({\r\n        url: '/billing/order-payment',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetBillingInvoice(id) {\r\n    return ApiService.fetchData({\r\n        url: `/billing/billing-invoice/${id}`,\r\n        method: 'get',\r\n    })\r\n}","import ApiService from './ApiService'\r\n\r\nexport async function apiGetSalesDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/dashboard',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteSalesProducts(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesProduct(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/product',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiPutSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/update',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiCreateSalesProduct(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/products/create',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-cat-items-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariants(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/items/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemVariantsByItemId(id) {\r\n    return ApiService.fetchData({\r\n        url: `catalogs/admin/item/variant/${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\n\r\nexport async function apiDeleteSalesItems(data) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetSalesItemDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/sales/orders-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateItem(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: '/catalogs/dgl-cat-items-info',\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiGetTemplates(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-tp-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiProductCategoryItems(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/cat-items-info/items',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategory(data) {\r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats?page_no=1&page_size=4`,\r\n        method: 'get',\r\n        data\r\n    })\r\n}\r\n\r\nexport async function apiUpdateItemAccStatus(params,status) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/dgl-cat-items-info/${params}/${status}`,\r\n        method: 'patch',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTableData(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-pageable`,\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport async function apiGetProductCategoryData(params) {\r\n    \r\n    return ApiService.fetchData({\r\n        url: `/account/prod-cats/unq-id/drop-down/${params.unq_id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetTemplatesInItems(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/templates/${params.unq_id}/${params.category}/${params.type}?tpStatus=ACTIVE`,\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetItemsTemplateComponents(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/items-tax/${params}`,\r\n        method: 'get',\r\n    })\r\n}","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst ChargeAndBillsTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    // const searchInput = useRef()\r\n\r\n    // const tableData = useSelector(\r\n    //     (state) => state.salesOrderList.data.tableData\r\n    // )\r\n \r\n    // const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    // function handleDebounceFn(val) {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.query = val\r\n    //     newTableData.pageIndex = 1\r\n    //     if (typeof val === 'string' && val.length > 1) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n\r\n    //     if (typeof val === 'string' && val.length === 0) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n    // }\r\n\r\n    // const fetchData = (data) => {\r\n    //     dispatch(setTableData(data))\r\n    //     dispatch(getOrders(data))\r\n    // }\r\n\r\n    // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <Input\r\n            ref={{}}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={''}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChargeAndBillsTableSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst ChargeAndBillsFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChargeAndBillsFilter\r\n","import React from 'react'\r\nimport ChargeAndBillsTableSearch from './ChargeAndBillsTableSearch'\r\nimport ChargeAndBillsFilter from './ChargeAndBillsTableFilter'\r\nimport { Link } from 'react-router-dom'\r\nimport { HiDownload } from 'react-icons/hi'\r\nimport { Button } from 'components/ui'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\n\r\nfunction ChargeAndBillsTableTools() {\r\n  return (\r\n    <>\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <ChargeAndBillsTableSearch />\r\n            <ChargeAndBillsFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Import\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link> \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChargeAndBillsTableTools","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { apiGetBillingInvoices, apiGetBillingBill } from 'services/BillingService'\r\nimport { apiGetSalesItems, apiDeleteSalesItems } from 'services/ItemsService'\r\n\r\nexport const getItems = createAsyncThunk(\r\n    'salesProductList/data/getItems',\r\n    async (data) => {\r\n        const response = await apiGetBillingInvoices(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getBillingBill = createAsyncThunk(\r\n    'salesProductList/data/getBillingBill',\r\n    async (data) => {\r\n        const response = await apiGetBillingBill(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const deleteItems = async (data) => {\r\n    const response = await apiDeleteSalesItems(data)\r\n    return response.data\r\n}\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        Item: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'salesProductList/data',\r\n    initialState: {\r\n        loading: false,\r\n        ItemList: [],\r\n        tableData: initialTableData,\r\n    },\r\n    reducers: {\r\n        setItemList: (state, action) => {\r\n            state.ItemList = action.payload\r\n        },\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getItems.fulfilled]: (state, action) => {\r\n            state.ItemList = action.payload.content\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getItems.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getBillingBill.fulfilled]: (state, action) => {\r\n            state.ItemList = action.payload.content\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getBillingBill.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setItemList, setTableData } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'itemsList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport NumberFormat from 'react-number-format'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems, setTableData } from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport dayjs from 'dayjs'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\n// const ItemColumn = ({ row }) => {\r\n    \r\n\r\n//     const onView = useCallback(() => {\r\n//         navigate(`/app/sales/Item-details/${row.id}`)\r\n//     }, [navigate, row])\r\n\r\n//     return (\r\n//         <span\r\n//             className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n//             onClick={onView}\r\n//         >\r\n//             #{row.id}\r\n//         </span>\r\n//     )\r\n// }\r\n\r\n\r\n\r\nconst ChargeAndBillsTable = () => {\r\n\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.billing.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state.billing.data.loading)\r\n\r\n    const data = useSelector((state) => state.billing.data.ItemList)\r\n    const userData = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getItems({ page: pageIndex - 1, size: pageSize, accId: userData.enterAccount }))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            // {\r\n            //     header: 'Actions',\r\n            //     id: 'action',\r\n            //     cell: (props) => <ActionColumn row={props.row.original} />,\r\n            // },\r\n        \r\n          \r\n            {\r\n                header: 'Customer ID',\r\n                accessorKey: 'relCustId',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Customer Name',\r\n                accessorKey: 'relCustId',\r\n            },\r\n            \r\n            \r\n           \r\n            {\r\n                header: 'Customer Category',\r\n                accessorKey: 'relCustId',\r\n               \r\n            },\r\n            {\r\n                header: 'Order ID',\r\n                accessorKey: 'orderId',\r\n               \r\n            },\r\n            {\r\n                header: 'Order Date & Time',\r\n                accessorKey: 'orderDate',\r\n               \r\n            },\r\n            {\r\n                header: 'Invoice ID',\r\n                accessorKey: 'id',\r\n               \r\n            },\r\n            {\r\n                header: 'Amount',\r\n                accessorKey: 'orderAmount',\r\n               \r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'invoiceStatus',\r\n               \r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            {/* <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            /> */}\r\n                            {props.row.original.invoiceStatus == 'UN_PAID' ? (<span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[2].textClass}`}\r\n                            >\r\n                                {props.row.original.invoiceStatus}\r\n                            </span>):(<span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {props.row.original.invoiceStatus}\r\n                            </span>\r\n     \r\n      )}\r\n                            \r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n         \r\n          \r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    // const onRowSelect = (checked, row) => {\r\n    //     if (checked) {\r\n    //         dispatch(addRowItem([row.id]))\r\n    //     } else {\r\n    //         dispatch(removeRowItem(row.id))\r\n    //     }\r\n    // }\r\n\r\n    // const onAllRowSelect = useCallback(\r\n    //     (checked, rows) => {\r\n    //         if (checked) {\r\n    //             const originalRows = rows.map((row) => row.original)\r\n    //             const selectedIds = []\r\n    //             originalRows.forEach((row) => {\r\n    //                 selectedIds.push(row.id)\r\n    //             })\r\n    //             dispatch(setSelectedRows(selectedIds))\r\n    //         } else {\r\n    //             dispatch(setSelectedRows([]))\r\n    //         }\r\n    //     },\r\n    //     [dispatch]\r\n    // )\r\n\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            loading={loading}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n            // onCheckBoxChange={onRowSelect}\r\n            // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            // selectable\r\n        />\r\n    )\r\n}\r\n\r\nexport default ChargeAndBillsTable\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst EnterPriseTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    // const searchInput = useRef()\r\n\r\n    // const tableData = useSelector(\r\n    //     (state) => state.salesOrderList.data.tableData\r\n    // )\r\n \r\n    // const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    // function handleDebounceFn(val) {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.query = val\r\n    //     newTableData.pageIndex = 1\r\n    //     if (typeof val === 'string' && val.length > 1) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n\r\n    //     if (typeof val === 'string' && val.length === 0) {\r\n    //         fetchData(newTableData)\r\n    //     }\r\n    // }\r\n\r\n    // const fetchData = (data) => {\r\n    //     dispatch(setTableData(data))\r\n    //     dispatch(getOrders(data))\r\n    // }\r\n\r\n    // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <Input\r\n            ref={{}}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={''}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EnterPriseTableSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst EnterPriseFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EnterPriseFilter\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { HiDownload } from 'react-icons/hi'\r\nimport { Button } from 'components/ui'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\nimport EnterPriseTableSearch from './EnterPriseTableSearch'\r\nimport EnterPriseFilter from './EnterPriseTableFilter'\r\n\r\n\r\nfunction EnterPriseTableTools() {\r\n  return (\r\n    <>\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <EnterPriseTableSearch />\r\n            <EnterPriseFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Import\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link> \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EnterPriseTableTools","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport {\r\n    Badge,\r\n    Button,\r\n    DatePicker,\r\n    Dialog,\r\n    Input,\r\n    Select,\r\n    TimeInput,\r\n    Tooltip,\r\n} from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport NumberFormat from 'react-number-format'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems, setTableData, getBillingBill} from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport dayjs from 'dayjs'\r\nimport { MdModeEdit, MdOutlineSend } from 'react-icons/md'\r\nimport { AiOutlinePercentage } from 'react-icons/ai'\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n// const ItemColumn = ({ row }) => {\r\n\r\n//     const onView = useCallback(() => {\r\n//         navigate(`/app/sales/Item-details/${row.id}`)\r\n//     }, [navigate, row])\r\n\r\n//     return (\r\n//         <span\r\n//             className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n//             onClick={onView}\r\n//         >\r\n//             #{row.id}\r\n//         </span>\r\n//     )\r\n// }\r\n\r\nconst statusOptions = [\r\n    { label: 'Generated', value: 'generated' },\r\n    { label: 'Paid', value: 'paid' },\r\n]\r\n\r\nconst EnterPriseCustTable = () => {\r\n    const [changeStatus, setChangeStatus] = useState()\r\n    const [percentPopUp, setPercentPopUp] = useState()\r\n    const [invoicePopUp, setInvoicePopUp] = useState()\r\n    const [actionEdit, setActionEdit] = useState(false)\r\n\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.billing.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state.billing.data.loading)\r\n    const userData = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    const data = useSelector((state) => state.billing.data.ItemList)\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getBillingBill({ page: pageIndex - 1, size: pageSize, accId: userData.enterAccount }))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    // useEffect(() => {\r\n    //     if (tableRef) {\r\n    //         tableRef.current?.resetSelected()\r\n    //     }\r\n    // }, [data])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const ActionColumn = ({ row }) => {\r\n        // const dispatch = useDispatch()\r\n        const { textTheme } = useThemeClass()\r\n        // const navigate = useNavigate()\r\n\r\n        // const onDelete = () => {\r\n        //     dispatch(setDeleteMode('single'))\r\n        //     dispatch(setSelectedRow([row.id]))\r\n        // }\r\n\r\n        // const onView = useCallback(() => {\r\n        //     navigate(`/order-details`)\r\n        // }, [navigate])\r\n\r\n        return (\r\n            <div className=\"flex text-lg\">\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={() => setActionEdit(true)}\r\n                    >\r\n                        <MdModeEdit />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"Send\">\r\n                    <span className={`cursor-pointer p-1 hover:${textTheme}`}>\r\n                        <Link to=\"/settings-menu-send-notifications\">\r\n                            <MdOutlineSend />\r\n                        </Link>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"Percnetage\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 hover:${textTheme}`}\r\n                        onClick={() => setPercentPopUp(true)}\r\n                    >\r\n                        <AiOutlinePercentage />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"View\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500  hover:${textTheme}`}\r\n                        onClick={() => setInvoicePopUp(true)}\r\n                    >\r\n                        <HiOutlineEye />\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                flex: 1,\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Customer ID',\r\n                accessorKey: 'relCustId',\r\n            },\r\n            {\r\n                header: 'Customer Category',\r\n                accessorKey: 'relCustId',\r\n            },\r\n            {\r\n                header: 'Bill ID',\r\n                accessorKey: 'id',\r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <Link to=\"/billing-enterprise-invoice\" state={{rowData:props.row.original.id}}>\r\n                                <span\r\n                                    className={`ml-2 rtl:mr-2 capitalize font-semibold text-blue-500 cursor-pointer`}\r\n                                >\r\n                                    {props.row.original.id}\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                header: 'Bill Date & Time',\r\n                accessorKey: 'createdDate',\r\n            },\r\n            {\r\n                header: 'Due Date',\r\n                accessorKey: 'payDttime',\r\n            },\r\n            {\r\n                header: 'Amount',\r\n                accessorKey: 'payAmt',\r\n            },\r\n            {\r\n                header: 'Payment Date & TIme',\r\n                accessorKey: 'payDttime',\r\n            },\r\n            {\r\n                header: 'Reference ID',\r\n                accessorKey: 'relMnoId',\r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'billStatus',\r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            {/* <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            /> */}\r\n                            {props.row.original.billStatus == 'UN_PAID' ? (<span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[2].textClass}`}\r\n                            >\r\n                                {props.row.original.billStatus}\r\n                            </span>):(<span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {props.row.original.billStatus}\r\n                            </span>\r\n     \r\n      )}\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const popupdata = [\r\n        {\r\n            itemId: \"#ID567\",\r\n            item: \"Sensor\",\r\n            description: \"Counting Steps\",\r\n            unitPrice: \"12.15 USD\",\r\n            qunatity: \"100\",\r\n            amount: \"1214.73 USD\",\r\n            taxComponent1: \"139.69 USD\",\r\n            taxComponent2: \"115.40 USD\",\r\n            totalItemValue : \"1469.82 USD\"\r\n        },\r\n        {\r\n            itemId: \"#ID567\",\r\n            item: \"Sensor\",\r\n            description: \"Counting Steps\",\r\n            unitPrice: \"12.15 USD\",\r\n            qunatity: \"100\",\r\n            amount: \"1214.73 USD\",\r\n            taxComponent1: \"139.69 USD\",\r\n            taxComponent2: \"115.40 USD\",\r\n            totalItemValue : \"1469.82 USD\"\r\n        },\r\n        {\r\n            itemId: \"#ID567\",\r\n            item: \"Sensor\",\r\n            description: \"Counting Steps\",\r\n            unitPrice: \"12.15 USD\",\r\n            qunatity: \"100\",\r\n            amount: \"1214.73 USD\",\r\n            taxComponent1: \"139.69 USD\",\r\n            taxComponent2: \"115.40 USD\",\r\n            totalItemValue : \"1469.82 USD\"\r\n        },\r\n\r\n    ]\r\n\r\n    const popupcolumns = useMemo(\r\n        () => [\r\n\r\n            {\r\n                header: 'ITEM ID',\r\n                accessorKey: 'itemId',\r\n            },\r\n            {\r\n                header: 'ITEM',\r\n                accessorKey: 'item',\r\n            },\r\n            {\r\n                header: 'DESCRIPTION',\r\n                accessorKey: 'description',\r\n            },\r\n            {\r\n                header: 'UNIT PRICE',\r\n                accessorKey: 'unitPrice',\r\n            },\r\n            {\r\n                header: 'QUANTITY',\r\n                accessorKey: 'qunatity',\r\n            },\r\n            {\r\n                header: 'AMOUNT',\r\n                accessorKey: 'amount',\r\n            },\r\n            {\r\n                header: 'TAX COMPONENT 1',\r\n                accessorKey: 'taxComponent1',\r\n            },\r\n            {\r\n                header: 'TAX COMPONENT 2',\r\n                accessorKey: 'taxComponent2',\r\n            },\r\n            {\r\n                header: 'TOTAL ITEM VALUE',\r\n                accessorKey: 'totalItemValue',\r\n            },\r\n\r\n        ],\r\n        []\r\n    )\r\n\r\n    \r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    // const onRowSelect = (checked, row) => {\r\n    //     if (checked) {\r\n    //         dispatch(addRowItem([row.id]))\r\n    //     } else {\r\n    //         dispatch(removeRowItem(row.id))\r\n    //     }\r\n    // }\r\n\r\n    // const onAllRowSelect = useCallback(\r\n    //     (checked, rows) => {\r\n    //         if (checked) {\r\n    //             const originalRows = rows.map((row) => row.original)\r\n    //             const selectedIds = []\r\n    //             originalRows.forEach((row) => {\r\n    //                 selectedIds.push(row.id)\r\n    //             })\r\n    //             dispatch(setSelectedRows(selectedIds))\r\n    //         } else {\r\n    //             dispatch(setSelectedRows([]))\r\n    //         }\r\n    //     },\r\n    //     [dispatch]\r\n    // )\r\n\r\n    const onCloseStatusDialog = () => {\r\n        setChangeStatus('')\r\n        setActionEdit(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DataTable\r\n                ref={tableRef}\r\n                columns={columns}\r\n                data={data}\r\n                loading={loading}\r\n                pagingData={tableData}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n                // onCheckBoxChange={onRowSelect}\r\n                // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n                // selectable\r\n            />\r\n\r\n            <Dialog\r\n                isOpen={actionEdit}\r\n                onClose={onCloseStatusDialog}\r\n                width=\"30%\"\r\n            >\r\n                <div>\r\n                    <h5 className=\"pb-2 border-b-2\">Change Status</h5>\r\n                    <div className=\"mt-4\">\r\n                        <label>Update Status</label>\r\n                        <Select\r\n                            className=\"mt-1\"\r\n                            placeholder=\"Select Parent Account\"\r\n                            options={statusOptions}\r\n                            value={statusOptions.filter(\r\n                                (e) => e.value === changeStatus\r\n                            )}\r\n                            onChange={(e) => setChangeStatus(e.value)}\r\n                        />\r\n                    </div>\r\n                    {changeStatus === 'paid' && (\r\n                        <>\r\n                            <div className=\"mt-4\">\r\n                                <div>\r\n                                    <label>Payment Reference ID</label>\r\n                                    <Input\r\n                                        className=\"mt-1\"\r\n                                        placeholder=\"Enter Reference ID\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mt-4\">\r\n                                    <label>Payment Mode</label>\r\n                                    <Select\r\n                                        className=\"mt-1\"\r\n                                        placeholder=\"Enter Mode Of Payment\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"flex gap-4 mt-4\">\r\n                                    <div className=\"w-48\">\r\n                                        <label>Date</label>\r\n                                        <DatePicker\r\n                                            className=\"mt-1\"\r\n                                            placeholder=\"Select Date\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"w-48\">\r\n                                        <label>Time</label>\r\n                                        <TimeInput\r\n                                            className=\"mt-1\"\r\n                                            placeholder=\"Select Time\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <div className=\"mt-8 flex gap-4 justify-end \">\r\n                        <Button onClick={onCloseStatusDialog}>Cancel</Button>\r\n                        <Button\r\n                            disabled={changeStatus === 'paid' ? false : true}\r\n                            variant=\"solid\"\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Dialog\r\n                isOpen={percentPopUp}\r\n                onClose={() => setPercentPopUp(false)}\r\n                width='30%'\r\n            >\r\n                <div className=\"mt-12 bg-gray-100 p-4 text-black  font-bold \">\r\n                    Distrubution Of Payement\r\n                </div>\r\n                <div className=\"p-6\">\r\n                    <div className=\"flex justify-between text-black \">\r\n                        <p>Invoice ID:</p>\r\n                        <p>INV96662</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between my-2 text-black\">\r\n                        <p>Total Amount</p>\r\n                        <p>4824.91 USD</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between my-2 text-black\">\r\n                        <p>Operator</p>\r\n                        <p>2429.46 USD</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between my-2 text-black\">\r\n                        <p>Provider</p>\r\n                        <p>1809.95 USD</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between my-2 text-black\">\r\n                        <p>Partner</p>\r\n                        <p>2.43 USD</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between my-2 text-black\">\r\n                        <p>Tax</p>\r\n                        <p>461.60 USD</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between my-2 text-black\">\r\n                        <p>Cashback</p>\r\n                        <p>121.47USD</p>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Dialog isOpen={invoicePopUp} onClose={() => setInvoicePopUp(false)}\r\n                    width=\"90%\"\r\n                >\r\n                    <div className='mt-4' >\r\n                    <p className='mx-6'> <span className='bg-gray-200 p-4 font-bold text-black'>Bill</span></p>\r\n                    <div className='flex justify-between '>\r\n                        <div className='mt-6 ml-6 text-black'>\r\n                            <p className='text-black font-bold '>Bill Detail</p>\r\n                            <p>Issue Date: June 1,2023</p>\r\n                            <p>Bill ID: IHV93N674</p>\r\n                            <p>Order ID:5967654874504</p>\r\n                        </div>\r\n                        <div className='mt-6 ml-6 text-black'>\r\n                            <p className='text-black font-bold '>Bill To</p>\r\n                            <p>Issue Date: June 1,2023</p>\r\n                            <p>Bill ID: IHV93N674</p>\r\n                            <p>Order ID:5967654874504</p>\r\n                        </div>\r\n                        <div className='mt-6 ml-6 text-black'>\r\n                            <p className='text-black font-bold '>Company Address:</p>\r\n                            <p>Issue Date: June 1,2023</p>\r\n                            <p>Bill ID: IHV93N674</p>\r\n                            <p>Order ID:5967654874504</p>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p className='text-black font-bold m-4 '>Bill Details</p>\r\n\r\n                        <div>\r\n                            <DataTable\r\n                                // ref={tableRef}\r\n                                columns={popupcolumns}\r\n                                data={data}\r\n                            loading={loading}\r\n                            pagingData={tableData}\r\n                            onPaginationChange={onPaginationChange}\r\n                            onSelectChange={onSelectChange}\r\n                            onSort={onSort}\r\n                            // onCheckBoxChange={onRowSelect}\r\n                            // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n                            // selectable\r\n                            />\r\n                        </div>\r\n                        <div className='grid grid-cols-3 mt-4'>\r\n                            <div className='col-span-2'>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <div className='flex justify-between my-1'>\r\n                                    <p className='text-black font-semibold'>Subtotal </p>\r\n                                    <div className=''>\r\n                                        <p className='text-black font-semibold'>4239.41 USD</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='flex justify-between my-1'>\r\n                                    <p className='text-black font-semibold'>Overall Tax Amount </p>\r\n                                    <div className=''>\r\n                                        <p className='text-black font-semibold'>461.60 USD</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='flex justify-between my-1'>\r\n                                    <p className='text-black font-semibold'>Discount Amount</p>\r\n                                    <div className=''>\r\n                                        <p className='text-black font-semibold'>- 121.47 USD</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='flex justify-between my-1'>\r\n                                    <p className='text-black font-semibold'>Shipping Charges</p>\r\n                                    <div className=''>\r\n                                        <p className='text-black font-semibold'>2.43 USD</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='flex justify-between my-1'>\r\n                                    <p className='text-black font-semibold'>Total Payable Amount </p>\r\n                                    <div className=''>\r\n                                        <p className='text-black font-semibold'>4824.91 USD</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className='flex justify-end  p-6 gap-48'>\r\n                            <div className='text-black'>\r\n                                <p>Subtotal</p>\r\n                                <p>Overall Tax Amount</p>\r\n                                <p>Discount Amount</p>\r\n                                <p>Shipping Charges</p>\r\n                                <p>Total Payable Amount</p>\r\n                            </div>\r\n                            <div className='text-black'>\r\n                                <p>4239.41 USD</p>\r\n                                <p>461.60 USD</p>\r\n                                <p>- 121.47 USD</p>\r\n                                <p>2.43 USD</p>\r\n                                <p>4824.91 USD</p>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                    </div>\r\n                </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EnterPriseCustTable\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { HiDownload } from 'react-icons/hi'\r\nimport { Button } from 'components/ui'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\nimport EnterPriseTableSearch from './EnterPriseTableSearch'\r\nimport EnterPriseFilter from './EnterPriseTableFilter'\r\n\r\n\r\nfunction RetailCustTableTools() {\r\n  return (\r\n    <>\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <EnterPriseTableSearch />\r\n            <EnterPriseFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Import\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link> \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RetailCustTableTools","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport NumberFormat from 'react-number-format'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems, setTableData, getBillingBill} from '../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport dayjs from 'dayjs'\r\nimport { MdModeEdit, MdOutlineSend } from 'react-icons/md'\r\nimport { AiFillCopy, AiOutlinePercentage } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\n// const ItemColumn = ({ row }) => {\r\n    \r\n\r\n//     const onView = useCallback(() => {\r\n//         navigate(`/app/sales/Item-details/${row.id}`)\r\n//     }, [navigate, row])\r\n\r\n//     return (\r\n//         <span\r\n//             className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n//             onClick={onView}\r\n//         >\r\n//             #{row.id}\r\n//         </span>\r\n//     )\r\n// }\r\n\r\n\r\n\r\nconst RetaiCustTable = () => {\r\n\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.billing.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state.billing.data.loading)\r\n\r\n    const data = useSelector((state) => state.billing.data.ItemList);\r\n    \r\n    const userData = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getBillingBill({ page: pageIndex - 1, size: pageSize, accId: userData.enterAccount }))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        fetchData()\r\n    }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    // useEffect(() => {\r\n    //     if (tableRef) {\r\n    //         tableRef.current?.resetSelected()\r\n    //     }\r\n    // }, [data])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const ActionColumn = ({ row }) => {\r\n        // const dispatch = useDispatch()\r\n        const { textTheme } = useThemeClass()\r\n        // const navigate = useNavigate()\r\n    \r\n        // const onDelete = () => {\r\n        //     dispatch(setDeleteMode('single'))\r\n        //     dispatch(setSelectedRow([row.id]))\r\n        // }\r\n    \r\n        // const onView = useCallback(() => {\r\n        //     navigate(`/order-details`)\r\n        // }, [navigate])\r\n    \r\n        return (\r\n            <div className=\"flex text-lg\">\r\n            <Tooltip title=\"Send\">\r\n                <span\r\n                    className={`cursor-pointer p-1 hover:${textTheme}`}\r\n                >\r\n                    <Link to = \"/settings-menu-send-notifications\"><MdOutlineSend /></Link>\r\n                </span>\r\n            </Tooltip>\r\n            <Tooltip title=\"Percnetage\">\r\n            <span\r\n                className={`cursor-pointer p-1 hover:${textTheme}`}\r\n                //onClick={onView}\r\n            >\r\n               <AiOutlinePercentage/>\r\n               \r\n            </span>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"View\">\r\n            <span\r\n                className={`cursor-pointer p-1 text-blue-500  hover:${textTheme}`}\r\n                //onClick={onView}\r\n            >\r\n              <HiOutlineEye/>\r\n            </span>\r\n        </Tooltip>\r\n        </div>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                flex: 1,\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Customer ID',\r\n                accessorKey: 'relCustId',\r\n            },\r\n            {\r\n                header: 'Customer Category',\r\n                accessorKey: 'relCustId',\r\n            },\r\n            {\r\n                header: 'Bill ID',\r\n                accessorKey: 'id',\r\n            },\r\n            {\r\n                header: 'Bill Date & Time',\r\n                accessorKey: 'createdDate',\r\n            },\r\n            {\r\n                header: 'Due Date',\r\n                accessorKey: 'payDttime',\r\n            }, \r\n            {\r\n                header: 'Amount',\r\n                accessorKey: 'payAmt',\r\n            },\r\n            {\r\n                header: 'Payment Date & TIme',\r\n                accessorKey: 'payDttime',\r\n            },\r\n            {\r\n                header: 'Reference ID',\r\n                accessorKey: 'relMnoId',\r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'billStatus',\r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            {/* <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            /> */}\r\n                           {props.row.original.billStatus == 'UN_PAID' ? (<span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[2].textClass}`}\r\n                            >\r\n                                {props.row.original.billStatus}\r\n                            </span>):(<span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {props.row.original.billStatus}\r\n                            </span>\r\n     \r\n      )}\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n         \r\n          \r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    // const onRowSelect = (checked, row) => {\r\n    //     if (checked) {\r\n    //         dispatch(addRowItem([row.id]))\r\n    //     } else {\r\n    //         dispatch(removeRowItem(row.id))\r\n    //     }\r\n    // }\r\n\r\n    // const onAllRowSelect = useCallback(\r\n    //     (checked, rows) => {\r\n    //         if (checked) {\r\n    //             const originalRows = rows.map((row) => row.original)\r\n    //             const selectedIds = []\r\n    //             originalRows.forEach((row) => {\r\n    //                 selectedIds.push(row.id)\r\n    //             })\r\n    //             dispatch(setSelectedRows(selectedIds))\r\n    //         } else {\r\n    //             dispatch(setSelectedRows([]))\r\n    //         }\r\n    //     },\r\n    //     [dispatch]\r\n    // )\r\n\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            loading={loading}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n            // onCheckBoxChange={onRowSelect}\r\n            // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            // selectable\r\n        />\r\n    )\r\n}\r\n\r\nexport default RetaiCustTable\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React from 'react'\r\nimport { Tabs } from 'components/ui'\r\nimport ChargeAndBillsTableTools from './components/ChargeAndBillsTableTools'\r\nimport ChargeAndBillsTable from './components/ChargeAndBillsTable'\r\nimport EnterPriseTableTools from './components/EnterPriseTableTools'\r\nimport EnterPriseCustTable from './components/EnterPriseCustTable'\r\nimport RetailCustTableTools from './components/RetailCustTableTools'\r\nimport RetaiCustTable from './components/RetaiCustTable'\r\nimport { injectReducer } from 'store'\r\nimport reducer from './store'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nconst { TabNav, TabList, TabContent } = Tabs\r\ninjectReducer('billing', reducer)\r\nconst BillingTab = () => {\r\n    const {name}=useParams()\r\n    const navigate= useNavigate()\r\n    const breadCrumbList=[{\r\n        name:'Home',\r\n        link:\"/home\"\r\n    },{\r\n        name:'billing'\r\n    }]\r\n    return (\r\n        <div>\r\n            <CustomBreadcrumbs list={breadCrumbList}/>\r\n            {/* <div className='mb-4'>Billing/ChargeAndBills</div> */}\r\n            <Tabs defaultValue={name || \"unbilled-invoice\"} onChange={(val)=>navigate(`/billing/${val}`)}>\r\n                <TabList>\r\n                    <TabNav value=\"unbilled-invoice\">Unbilled Invoice</TabNav>\r\n                    <TabNav value=\"enterprise-customers\">Enterprise Customer</TabNav>\r\n                    <TabNav value=\"retail-customers\">Retails Customer</TabNav>\r\n                </TabList>\r\n                <div>\r\n                    <TabContent value=\"unbilled-invoice\">\r\n                        <div className=\"lg:flex items-center justify-between mt-6 mb-6\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Unbilled Invoice</h3>\r\n                            <ChargeAndBillsTableTools />\r\n                        </div>\r\n                        <ChargeAndBillsTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"enterprise-customers\">\r\n                        <div className=\"lg:flex items-center justify-between mt-6 mb-6\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Enterprise Customer</h3>\r\n                            <EnterPriseTableTools />\r\n                        </div>\r\n                        <EnterPriseCustTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"retail-customers\">\r\n                        <div className=\"lg:flex items-center justify-between mt-6 mb-6\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Retails Customer</h3>\r\n                            <RetailCustTableTools />\r\n                        </div>\r\n                        <RetaiCustTable />\r\n                    </TabContent>\r\n                </div>\r\n\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillingTab\r\n\r\n"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","apiGetBillingInvoices","params","ApiService","url","method","apiGetBillingBill","apiGetOrderPayment","apiGetBillingInvoice","id","apiGetSalesItems","apiGetSalesItemVariants","apiGetSalesItemVariantsByItemId","apiDeleteSalesItems","apiCreateItem","resp","status","message","response","toString","apiGetTemplates","apiUpdateItemAccStatus","apiGetItemsTableData","apiGetProductCategoryData","unq_id","apiGetTemplatesInItems","category","type","apiGetItemsTemplateComponents","ref","className","size","placeholder","prefix","onChange","icon","onClick","target","download","block","getItems","createAsyncThunk","getBillingBill","dataSlice","createSlice","initialState","loading","ItemList","tableData","total","pageIndex","pageSize","query","sort","Item","key","reducers","setItemList","action","payload","setTableData","extraReducers","fulfilled","content","pending","actions","stateSlice","selectedRows","selectedRow","deleteMode","setSelectedRows","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","setDeleteMode","toggleDeleteConfirmation","ItemStatusColor","label","dotClass","textClass","useThemeClass","textTheme","useNavigate","tableRef","useRef","dispatch","useDispatch","useSelector","billing","userData","auth","user","fetchData","useCallback","page","accId","enterAccount","useEffect","useMemo","columns","header","accessorKey","cell","props","row","original","invoiceStatus","pagingData","onPaginationChange","newTableData","cloneDeep","onSelectChange","value","Number","onSort","statusOptions","useState","changeStatus","setChangeStatus","percentPopUp","setPercentPopUp","invoicePopUp","setInvoicePopUp","actionEdit","setActionEdit","ActionColumn","title","flex","rowData","billStatus","popupcolumns","onCloseStatusDialog","isOpen","onClose","width","options","e","disabled","variant","combineReducers","TabNav","Tabs","TabList","TabContent","injectReducer","reducer","useParams","navigate","defaultValue"],"sourceRoot":""}