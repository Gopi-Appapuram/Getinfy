{"version":3,"file":"static/js/6327.75e7c0d9.chunk.js","mappings":"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","sources":["views/accounts/MyAccounts/store/stateSlice.js","views/accounts/MyAccounts/store/index.js","views/accounts/MyAccounts/components/Document/DocumentFilter.js","views/accounts/MyAccounts/components/Document/DocumentTableSearch.js","views/accounts/MyAccounts/components/Document/DocumentTableTools.js","views/accounts/MyAccounts/components/UserRoles/UserRoleFilter.js","views/accounts/MyAccounts/components/UserRoles/UserRoleTableSearch.js","views/accounts/MyAccounts/components/UserRoles/UserRoleTableTools.js","views/accounts/MyAccounts/components/Users/UsersFilter.js","views/accounts/MyAccounts/components/Users/UsersTableSearch.js","views/accounts/MyAccounts/components/Users/UsersTableTools.js","views/accounts/MyAccounts/components/UserRoles/UsersRolesTable.js","views/accounts/MyAccounts/components/Users/UserTable.js","views/accounts/MyAccounts/components/Document/DocumentTable.js","views/accounts/MyAccounts/components/Accounts/index.js","views/accounts/MyAccounts/components/Users/D3HierarchyChart.js","views/accounts/MyAccounts/components/AccountTabs.js","views/accounts/MyAccounts/index.js"],"sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'myaccountList/state',\r\n    initialState: {\r\n        selectedRows: [],\r\n        selectedRow: [],\r\n        deleteMode: '',\r\n    },\r\n    reducers: {\r\n        setSelectedRows: (state, action) => {\r\n            state.selectedRows = action.payload\r\n        },\r\n        setSelectedRow: (state, action) => {\r\n            state.selectedRow = action.payload\r\n        },\r\n        addRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (!currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: [...currentState.selectedRows, ...payload],\r\n                }\r\n            }\r\n        },\r\n        removeRowItem: (state, { payload }) => {\r\n            const currentState = current(state)\r\n            if (currentState.selectedRows.includes(payload)) {\r\n                return {\r\n                    selectedRows: currentState.selectedRows.filter(\r\n                        (id) => id !== payload\r\n                    ),\r\n                }\r\n            }\r\n        },\r\n        setDeleteMode: (state, action) => {\r\n            state.deleteMode = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedRows,\r\n    setSelectedRow,\r\n    addRowItem,\r\n    removeRowItem,\r\n    toggleDeleteConfirmation,\r\n    setDeleteMode,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst DocummentFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocummentFilter\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../../store/dataSlice'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst DocummentTableSearch = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n    const tableData = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n\r\n    const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    function handleDebounceFn(val) {\r\n        const newTableData = cloneDeep(tableData)  \r\n        newTableData.page_no = tableData.pageIndex-1\r\n        newTableData.page_size = tableData.pageSize\r\n        newTableData.unq_id=enterAccount\r\n        newTableData.sort_field=tableData.sort_field\r\n        if (typeof val === 'string' && val.length > 1) {\r\n            fetchData(newTableData)\r\n        }\r\n\r\n        if (typeof val === 'string' && val.length === 0) {\r\n            fetchData(newTableData)\r\n        }\r\n    }\r\n\r\n    const fetchData = (data) => {\r\n        dispatch(setTableData(data))\r\n        dispatch(getOrders(data))\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        debounceFn(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DocummentTableSearch\r\n","import React, { useEffect } from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport AccountFilter from './DocumentFilter'\r\nimport AccountTableSearch from './DocumentTableSearch'\r\nimport {\r\n    Button,\r\n\r\n} from 'components/ui'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\nimport { getDocPolicyList } from '../../store/dataSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\n\r\nconst DocumentTableTools = () => {\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector((state) => state.auth.user)\r\n    const dispatch = useDispatch()\r\n    const data = useSelector((state) => state.myaccountList.data.docPolicyList?.res)\r\n    useEffect(() => {\r\n        dispatch(getDocPolicyList({ page_no: 0, page_size: 10, sort_field: 'id', unq_id: enterAccount }))\r\n    }, [])\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <AccountTableSearch />\r\n            <AccountFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                to=\"/accounts-new-document\" >\r\n                <Button block variant='solid' disabled={data && data.length < 5 ? false : true} size=\"sm\" icon={<HiPlusCircle />}>\r\n                    Create\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocumentTableTools\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst UserRoleFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserRoleFilter\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../../store/dataSlice'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst UserRoleTableSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    const searchInput = useRef()\r\n\r\n    const tableData = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n\r\n    const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    function handleDebounceFn(val) {\r\n        const newTableData = cloneDeep(tableData)  \r\n        newTableData.page_no = tableData.pageIndex-1\r\n        newTableData.page_size = tableData.pageSize\r\n        newTableData.unq_id=enterAccount\r\n        newTableData.sort_field=tableData.sort_field\r\n        if (typeof val === 'string' && val.length > 1) {\r\n            fetchData(newTableData)\r\n        }\r\n\r\n        if (typeof val === 'string' && val.length === 0) {\r\n            fetchData(newTableData)\r\n        }\r\n    }\r\n\r\n    const fetchData = (data) => {\r\n        dispatch(setTableData(data))\r\n        dispatch(getOrders(data))\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        debounceFn(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserRoleTableSearch\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport AccountFilter from './UserRoleFilter'\r\nimport AccountTableSearch from './UserRoleTableSearch'\r\nimport {\r\n   Button,\r\n \r\n} from 'components/ui'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\n\r\n\r\n\r\nconst UserRoleTableTools = () => {\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <AccountTableSearch />\r\n            <AccountFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link>\r\n            <Link to='/accounts-new-user-roles'\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"  >\r\n                <Button block variant='solid' size=\"sm\" icon={<HiPlusCircle />}>\r\n                   Create\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserRoleTableTools\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst UsersFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersFilter\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../../store/dataSlice'\r\nimport debounce from 'lodash/debounce'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst UsersTableSearch = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n    const tableData = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n\r\n    const debounceFn = debounce(handleDebounceFn, 500)\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    function handleDebounceFn(val) {\r\n        const newTableData = cloneDeep(tableData)  \r\n        newTableData.page_no = tableData.pageIndex-1\r\n        newTableData.page_size = tableData.pageSize\r\n        newTableData.unq_id=enterAccount\r\n        newTableData.sort_field=tableData.sort_field\r\n\r\n        if (typeof val === 'string' && val.length > 1) {\r\n            fetchData(newTableData)\r\n        }\r\n\r\n        if (typeof val === 'string' && val.length === 0) {\r\n            fetchData(newTableData)\r\n        }\r\n    }\r\n\r\n    const fetchData = (data) => {\r\n        dispatch(setTableData(data))\r\n        dispatch(getOrders(data))\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        debounceFn(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UsersTableSearch\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport AccountFilter from './UsersFilter'\r\nimport AccountTableSearch from './UsersTableSearch'\r\nimport {\r\n   Button,\r\n \r\n} from 'components/ui'\r\nimport { MdOutlineSettings } from 'react-icons/md'\r\n\r\n\r\n\r\nconst UsersTableTools = () => {\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <AccountTableSearch />\r\n            <AccountFilter />\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<MdOutlineSettings />}>\r\n                    Columns\r\n                </Button>\r\n            </Link>\r\n            <Link to='/accounts-new-users'\r\n                className=\"block lg:inline-block md:mb-0 mb-4\"  >\r\n                <Button block variant='solid' size=\"sm\" icon={<HiPlusCircle />}>\r\n                   Create\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Badge, Button, Dialog, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrders, setTableData } from '../../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from 'react-icons/ai'\r\nimport { RiCheckboxCircleFill, RiCloseCircleFill } from 'react-icons/ri'\r\nimport { BsPause } from 'react-icons/bs'\r\nimport { apiUpdateChildRoleStatus } from 'services/MyAccountService'\r\nimport { OpenNotification, snakeToCamel } from 'views/Servicefile'\r\n\r\nconst orderStatusColor = {\r\n    ACTIVE: {\r\n        label: 'Active',\r\n        dotClass: 'bg-black-400',\r\n        textClass: 'text-black-400',\r\n        backgroundColor: 'bg-[#F5F5F5]',\r\n    },\r\n    PENDING_APPROVAL: {\r\n        label: 'Pending Approval',\r\n        dotClass: 'bg-blue-400',\r\n        textClass: 'text-black-400',\r\n        backgroundColor: 'bg-[#F0F7FF]',\r\n    },\r\n    IN_ACTIVE: {\r\n        label: 'Inactive',\r\n        dotClass: 'bg-blue-400',\r\n        textClass: 'text-black-400',\r\n        backgroundColor: 'bg-[#F5F5F5]',\r\n    },\r\n}\r\n\r\n/* const ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n} */\r\n\r\nconst UsersRolesTable = () => {\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [isDeactivate, setDeactivate] = useState(false)\r\n    const [row, setRow] = useState('')\r\n\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    const { pageIndex, pageSize, sort, query, total, sort_field, order } = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state?.myaccountList?.data?.loading)\r\n\r\n    const data = useSelector(\r\n        (state) => state.myaccountList.data.userRoleAndPermitList?.response?.res\r\n    )\r\n\r\n    const totalCount = useSelector(\r\n        (state) => state.myaccountList.data.userRoleAndPermitList?.response?.total\r\n    )\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            dispatch(\r\n                getOrders({\r\n                    enterAccount,\r\n                    page_no: pageIndex - 1,\r\n                    page_size: pageSize,\r\n                    sort_field: sort_field ? sort_field : 'id',\r\n                    order:order\r\n\r\n                })\r\n            )\r\n        }\r\n        dispatch(setSelectedRows([]))\r\n\r\n        fetchData()\r\n    }, [isDeactivate, dispatch, query, enterAccount, pageIndex, pageSize, sort_field, order])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [data])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total:totalCount }),\r\n        [pageIndex, pageSize, sort, query, totalCount]\r\n    )\r\n\r\n    const updateUserRolesAndPermitStatus = async () => {\r\n        let isStatus = row.status === 'ACTIVE' ? 'IN_ACTIVE' : 'ACTIVE'\r\n        const resp = await apiUpdateChildRoleStatus(row.id, isStatus);\r\n\r\n        if (resp.data.success) {\r\n            if (isStatus === 'ACTIVE') {\r\n            \r\n                    setDeactivate(false)\r\n                    OpenNotification('success', 'Activated successfully')\r\n             \r\n            } else {\r\n                \r\n                    setDeactivate(false)\r\n                    OpenNotification('success', 'Deactivated successfully')\r\n            \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const ActionColumn = ({ row }) => {\r\n        const dispatch = useDispatch()\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n\r\n        const onDelete = () => {\r\n            dispatch(setDeleteMode('single'))\r\n            dispatch(setSelectedRow([row.id]))\r\n        }\r\n\r\n        const onView = useCallback(() => {\r\n            navigate(`/app/sales/Item-details/${row.id}`)\r\n        }, [navigate, row])\r\n\r\n        const onEdit = useCallback(() => {\r\n            navigate(`/accounts-new-user-roles`, {\r\n                state: { data: row, mode: 'EDIT' },\r\n            })\r\n        }, [navigate, row])\r\n\r\n        const onClone = useCallback(() => {\r\n            navigate(`/accounts-new-user-roles`, {\r\n                state: { data: row, mode: 'ADD' },\r\n            })\r\n        }, [navigate, row])\r\n\r\n        const handleClick = () => {\r\n            setDeactivate(true)\r\n            setRow(row)\r\n        }\r\n\r\n        const iconColor = row.status != 'ACTIVE' ? 'green' : 'rose'\r\n        const IconComponent =\r\n            row.status != 'ACTIVE' ? RiCheckboxCircleFill : RiCloseCircleFill\r\n\r\n        return (\r\n            <div className=\"text-lg\">\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onEdit}\r\n                    >\r\n                        <MdModeEdit />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Clone\">\r\n                    <span\r\n                        className={`cursor-pointer p-1  hover:${textTheme}`}\r\n                        onClick={onClone}\r\n                    >\r\n                        <AiFillCopy />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title=\"View\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onView}\r\n                    >\r\n                        <HiOutlineEye />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip\r\n                    title={`${row.status != 'ACTIVE' ? 'Activate' : 'Deactivate'\r\n                        }`}\r\n                >\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-${iconColor}-800 hover:text-${iconColor}-800`}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <IconComponent />\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Role ID',\r\n                accessorKey: 'role_unq_id',\r\n            },\r\n            {\r\n                header: 'Role Name',\r\n                accessorKey: 'role_name',\r\n            },\r\n            // {\r\n            //     header: 'Last Updated',\r\n            //     accessorKey: 'tp',\r\n            // },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'status',\r\n\r\n                cell: (props) => {\r\n                    const { status } = props.row.original\r\n\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <span\r\n                                className={`flex whitespace-nowrap ml-2 rtl:mr-2 capitalize font-semibold rounded-full border ${orderStatusColor[status]?.backgroundColor} mt-4 px-2 py-1 text-${orderStatusColor[status]?.dotClass}`}\r\n                            >\r\n                                {status === 'ACTIVE' && (\r\n                                    <RiCheckboxCircleFill className=\"mt-1 mr-2 text-[#3B8C59]\" />\r\n                                )}\r\n                                {status === 'IN_ACTIVE' && (\r\n                                    <RiCloseCircleFill className=\"mt-1 mr-2 text-[#FF0000]\" />\r\n                                )}\r\n                                {status === 'PENDING_APPROVAL' && (\r\n                                    <BsPause className=\"mt-1 mr-2 text-blue-500\" />\r\n                                )}\r\n                                {orderStatusColor[status]?.label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        const sortfield = snakeToCamel(sort.key)\r\n        newTableData[\"sort_field\"] = sortfield;\r\n        newTableData[\"order\"] = sort.order;\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowItem([row.id]))\r\n        } else {\r\n            dispatch(removeRowItem(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <DataTable\r\n                ref={tableRef}\r\n                columns={columns}\r\n                data={data}\r\n                loading={loading}\r\n                pagingData={tableData}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n                onCheckBoxChange={onRowSelect}\r\n                onIndeterminateCheckBoxChange={onAllRowSelect}\r\n                selectable\r\n            />\r\n            <Dialog isOpen={isDeactivate} onClose={() => setDeactivate(false)}>\r\n                <h6\r\n                    style={{\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 700,\r\n                        fontSize: '18px',\r\n                    }}\r\n                >\r\n                    {row.status === 'ACTIVE' ? `Deactivate` : `Activate`}\r\n                </h6>\r\n                <hr className=\"text-gary-500 mt-4 mb-4\" />\r\n                <p\r\n                    style={{\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 400,\r\n                        fontSize: '15px',\r\n                    }}\r\n                >\r\n                    {row.status === 'ACTIVE'\r\n                        ? `Are you sure you want to deactivate this user roles & permissions ?`\r\n                        : `Are you sure you want to Activate this user roles & permissions ?`}\r\n                </p>\r\n                <div className=\"mt-6 text-end\">\r\n                    <Button\r\n                        style={{\r\n                            backgroundColor: '#4D4D4D',\r\n                            color: 'white',\r\n                            borderRadius: '2px',\r\n                        }}\r\n                        className=\"mr-3\"\r\n                        onClick={() => setDeactivate(false)}\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        onClick={() => updateUserRolesAndPermitStatus()}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersRolesTable\r\n","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Badge, Tooltip, Dialog, Button, Alert } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye, HiOutlineTrash } from 'react-icons/hi'\r\nimport NumberFormat from 'react-number-format'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setTableData, getUsersList, getUserRoles } from '../../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from './../../store/stateSlice'\r\n\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport dayjs from 'dayjs'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from 'react-icons/ai'\r\nimport {\r\n    RiCheckboxBlankCircleFill,\r\n    RiCheckboxCircleFill,\r\n    RiCloseCircleFill,\r\n} from 'react-icons/ri'\r\nimport { BsPatchCheckFill } from 'react-icons/bs'\r\nimport { apiUpdateUserAccStatus } from 'services/MyAccountService'\r\nimport GetDropdownLabel, { snakeToCamel } from 'views/Servicefile'\r\nimport { OpenNotification } from 'views/Servicefile'\r\n\r\nconst ItemStatusColor = {\r\n    ACTIVE: {\r\n        label: 'Active',\r\n        dotClass: 'bg-black-500',\r\n        textClass: 'text-black-500',\r\n        backgroundColor: 'bg-[#F5F5F5]',\r\n    },\r\n    SUBMITTED: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-black-500',\r\n        backgroundColor: 'bg-[#F0F7FF]',\r\n    },\r\n    IN_ACTIVE: {\r\n        label: 'Inactive',\r\n        dotClass: 'bg-red-500',\r\n        textClass: 'text-red-500',\r\n        backgroundColor: 'bg- #F5F5F5',\r\n    },\r\n}\r\n\r\nconst ItemColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n    const onView = () => {\r\n        navigate(`/accounts-users-preview`,{state: { data: row, mode: 'EDIT' },})\r\n    }\r\n\r\n    return (\r\n        <span\r\n            className={`cursor-pointer select-none font-semibold hover:${textTheme}`}\r\n            onClick={onView}\r\n        >\r\n            #{row.id}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst UserTable = () => {\r\n    const [isDeactivate, setDeactivate] = useState(false)\r\n    const tableRef = useRef(null)\r\n    const [row, setRow] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const { pageIndex, pageSize, sort, query, total, sort_field, order } = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n    const loading = useSelector((state) => state.myaccountList.data.loading)\r\n    const data = useSelector(\r\n        (state) => state.myaccountList?.data?.usersList?.res\r\n    )\r\n\r\n    const totalCount = useSelector(\r\n        (state) => state.myaccountList.data.usersList.total\r\n    )\r\n\r\n    const { enterAccount, unq_id,acc_user_id, acc_unq_id } = useSelector((state) => state.auth.user)\r\n    const userRoles = useSelector((state) => state.myaccountList?.data?.userRoles)\r\n\r\n    const fetchData = useCallback(() => {\r\n        //dispatch(getItems())\r\n    }, [])\r\n    const ActionColumn = ({ row }) => {\r\n        const dispatch = useDispatch()\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n\r\n        const onDelete = () => {\r\n            dispatch(setDeleteMode('single'))\r\n            dispatch(setSelectedRow([row.id]))\r\n        }\r\n\r\n        const onView = () => {\r\n            if(acc_unq_id ===  row?.acc_user_unq_id) {\r\n                OpenNotification(\"warning\", \"you can not view this user\") \r\n            }\r\n        }\r\n\r\n        const onEdit = () => {\r\n            if(acc_unq_id ===  row?.acc_user_unq_id) {\r\n                OpenNotification(\"warning\", \"you can not edit this user\") \r\n            }\r\n            else{\r\n            navigate(`/accounts-new-users`, {\r\n                state: { data: row, mode: 'EDIT'},\r\n            })\r\n        }\r\n        }\r\n        const handleClick = () => {\r\n            if(acc_unq_id ===  row?.acc_user_unq_id) {\r\n                OpenNotification(\"warning\", \"you can not deactivate this user\") \r\n                setDeactivate(false)\r\n                setRow(row)\r\n            } else {\r\n                setDeactivate(true)\r\n                setRow(row)\r\n            }\r\n           \r\n        }\r\n\r\n        const iconColor = row.status !== 'ACTIVE' ? 'green' : 'rose'\r\n        const IconComponent =\r\n            row.status !== 'ACTIVE' ? RiCheckboxCircleFill : RiCloseCircleFill\r\n\r\n        return (\r\n            <div className=\"text-lg\">\r\n                <Tooltip title=\"Edit\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onEdit}\r\n                    >\r\n                        <MdModeEdit />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"View\">\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                        onClick={onView}\r\n                    >\r\n                        <HiOutlineEye />\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip\r\n                    title={`${row.status != 'ACTIVE' ? 'Activate' : 'Deactivate'\r\n                        }`}\r\n                >\r\n                    <span\r\n                        className={`cursor-pointer p-1 text-${iconColor}-800 hover:text-${iconColor}-800`}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <IconComponent />\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total: totalCount }),\r\n        [pageIndex, pageSize, sort, query, totalCount]\r\n    )\r\n\r\n    const updateUserAccStatus = async () => {\r\n        let isStatus = row.status === 'ACTIVE' ? 'IN_ACTIVE' : 'ACTIVE'\r\n        const resp = await apiUpdateUserAccStatus(row.id, isStatus)\r\n        if (resp.data.success) {\r\n\r\n            if (isStatus === 'ACTIVE') {\r\n               \r\n                    setDeactivate(false)\r\n                    OpenNotification('success', 'Activated successfully')\r\n               \r\n            } else {\r\n              \r\n                    setDeactivate(false)\r\n                    OpenNotification('success', 'Deactivated successfully')\r\n                \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n\r\n        const fetchData = async () => {\r\n            dispatch(\r\n                getUsersList({\r\n                    page_no: pageIndex - 1,\r\n                    page_size: pageSize,\r\n                    sort_field: sort_field ? sort_field : 'id',\r\n                    order:order,\r\n                    unq_id: enterAccount,\r\n                })\r\n            )\r\n        }\r\n\r\n        fetchData()\r\n        dispatch(getUserRoles({ enterAccount }))\r\n    }, [isDeactivate, dispatch, query, enterAccount, pageIndex, pageSize, sort_field, order])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [data])\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props?.row?.original} />,\r\n            },\r\n            {\r\n                header: 'User Id',\r\n                accessorKey: 'acc_user_unq_id',\r\n            },\r\n            {\r\n                header: 'User Role',\r\n                accessorKey: 'dgl_roles_id',\r\n                cell: (props) => {\r\n                    const { dgl_roles_id } = props.row.original\r\n                    return (\r\n                        <span>\r\n                            {GetDropdownLabel(dgl_roles_id, userRoles)}\r\n                        </span>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                header: 'Email Id',\r\n                accessorKey: 'email',\r\n            },\r\n            {\r\n                header: 'Phone Number',\r\n                accessorKey: 'phone',\r\n            },\r\n            {\r\n                header: 'Status',\r\n                accessorKey: 'status',\r\n                flex: 1,\r\n\r\n                cell: (props) => {\r\n                    const { status } = props.row.original\r\n\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <span\r\n                                className={`flex ml-2 rtl:mr-2 capitalize font-semibold rounded-full border ${ItemStatusColor[status]?.backgroundColor} mt-4 px-2 py-1 text-${ItemStatusColor[status]?.dotClass}`}\r\n                            >\r\n                                {status === 'ACTIVE' && (\r\n                                    <RiCheckboxCircleFill className=\"mt-1 mr-2 text-[#3B8C59]\" />\r\n                                )}\r\n                                {status === 'IN_ACTIVE' && (\r\n                                    <RiCloseCircleFill className=\"mt-1 mr-2 text-[#FF0000]\" />\r\n                                )}\r\n                                {status === 'SUBMITTED' && (\r\n                                    <BsPatchCheckFill className=\"mt-1 mr-2 text-blue-500\" />\r\n                                )}\r\n                                {ItemStatusColor[status]?.label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ],\r\n        [userRoles]\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        const sortfield = snakeToCamel(sort.key)\r\n        newTableData[\"sort_field\"] = sortfield;\r\n        newTableData[\"order\"] = sort.order;\r\n\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowItem([row.id]))\r\n        } else {\r\n            dispatch(removeRowItem(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n    return (\r\n        <>\r\n            <DataTable\r\n                ref={tableRef}\r\n                columns={columns}\r\n                data={data}\r\n                loading={loading}\r\n                pagingData={tableData}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n                onCheckBoxChange={onRowSelect}\r\n                onIndeterminateCheckBoxChange={onAllRowSelect}\r\n                selectable\r\n            />\r\n            <Dialog isOpen={isDeactivate} onClose={() => setDeactivate(false)}>\r\n                <h6\r\n                    style={{\r\n                        fontStyle: 'normal',\r\n                        fontSize: 700,\r\n                        fontSize: '18px',\r\n                    }}\r\n                >\r\n                    {row.status != 'ACTIVE' ? `Activate` : `Deactivate`}\r\n                </h6>\r\n                <hr className=\"text-gary-500 mt-4 mb-4\" />\r\n                <p>\r\n                    {row.status != 'ACTIVE'\r\n                        ? `Are you sure you want to activate this user ? `\r\n                        : `Are you sure you want to deactivate this user ? `}\r\n                </p>\r\n                <div className=\"mt-6 text-end\">\r\n                    <Button\r\n                        style={{ backgroundColor: '#4D4D4D', color: 'white' }}\r\n                        className=\"mr-3\"\r\n                        onClick={() => setDeactivate(false)}\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        onClick={() => updateUserAccStatus()}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserTable\r\n","import React, { useEffect, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Badge, Button, Dialog, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDocPolicyList, getItems, setTableData } from '../../store/dataSlice'\r\nimport {\r\n    setSelectedRows,\r\n    addRowItem,\r\n    removeRowItem,\r\n    setDeleteMode,\r\n    setSelectedRow,\r\n} from '../../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport { MdModeEdit } from 'react-icons/md'\r\nimport { AiFillCopy } from \"react-icons/ai\"\r\nimport { RiCheckboxCircleFill, RiCloseCircleFill } from 'react-icons/ri'\r\nimport { BsPause } from 'react-icons/bs'\r\nimport { apiUpdateDocPolicyAccStatus } from 'services/MyAccountService'\r\nimport { OpenNotification, snakeToCamel } from 'views/Servicefile'\r\n\r\nconst orderStatusColor = {\r\n    'ACTIVE': {\r\n        label: 'Active',\r\n        dotClass: 'bg-black-400',\r\n        textClass: 'text-black-400',\r\n        backgroundColor: 'bg-[#F5F5F5]'\r\n    },\r\n    'PENDING_APPROVAL': {\r\n        label: 'Pending Approval',\r\n        dotClass: 'bg-blue-400',\r\n        textClass: 'text-black-400',\r\n        backgroundColor: 'bg-[#F0F7FF]'\r\n    },\r\n    'IN_ACTIVE': { label: 'Inactive', dotClass: 'bg-blue-400', textClass: 'text-black-400', backgroundColor: 'bg-[#F5F5F5]' },\r\n}\r\n\r\nconst DocumentTable = () => {\r\n\r\n    const tableRef = useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [isDeactivate, setDeactivate] = useState(false)\r\n    const [row, setRow] = useState('')\r\n\r\n    const { pageIndex, pageSize, sort, query, total,sort_field, order } = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n    const { enterAccount, password, rememberMe, usernameOrEmail} = useSelector((state) => state.auth.user)\r\n    const loading = useSelector((state) => state.myaccountList.data.loading)\r\n\r\n    const data = useSelector((state) => state.myaccountList.data.docPolicyList?.res)\r\n\r\n    const totalCount = useSelector((state) => state.myaccountList.data.docPolicyList?.total)\r\n\r\n    const fetchData = useCallback(() => {\r\n       // dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedRows([]))\r\n        dispatch(getDocPolicyList({ page_no: pageIndex-1, page_size: pageSize, sort_field: sort_field?sort_field:'id',unq_id:enterAccount, order}))\r\n        fetchData()\r\n    }, [isDeactivate, dispatch, query, enterAccount, pageIndex, pageSize, sort_field, fetchData, order])\r\n\r\n    useEffect(() => {\r\n        if (tableRef) {\r\n            tableRef.current?.resetSelected()\r\n        }\r\n    }, [data])\r\n\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total:totalCount }),\r\n        [pageIndex, pageSize, sort, query, totalCount]\r\n    )\r\n\r\n    const updateDocPolicyStatus = async () => {\r\n\r\n        let isStatus = row.status === \"ACTIVE\" ? \"IN_ACTIVE\" : \"ACTIVE\";\r\n        const resp = await apiUpdateDocPolicyAccStatus(row.id, isStatus);\r\n        if (resp.data.success) {\r\n            if (isStatus === 'ACTIVE') {\r\n              \r\n                    setDeactivate(false)\r\n                    OpenNotification('success', 'Activated successfully')\r\n              \r\n            } else {\r\n            \r\n                    setDeactivate(false)\r\n                    OpenNotification('success', 'Deactivated successfully')\r\n               \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const ActionColumn = ({ row }) => {\r\n        const dispatch = useDispatch()\r\n        const { textTheme } = useThemeClass()\r\n        const navigate = useNavigate()\r\n    \r\n        const onDelete = () => {\r\n            dispatch(setDeleteMode('single'))\r\n            dispatch(setSelectedRow([row.id]))\r\n        }\r\n    \r\n        const onView = useCallback(() => {\r\n            navigate(`/app/sales/Item-details/${row.id}`)\r\n        }, [navigate, row])\r\n    \r\n        const onEdit = useCallback(() => {\r\n            navigate(`/accounts-new-document`,{state: { data: row, mode: \"EDIT\" } })\r\n        }, [navigate, row])\r\n\r\n        const onClone = useCallback(() => {\r\n            navigate(`/accounts-new-document`,{state: { data: row, mode: \"ADD\" } })\r\n        })\r\n    \r\n        const handleClick = () => {\r\n            setDeactivate(true);\r\n            setRow(row);\r\n        };\r\n    \r\n        const iconColor = row.status != \"ACTIVE\" ? \"green\" : \"rose\";\r\n        const IconComponent = row.status != \"ACTIVE\" ? RiCheckboxCircleFill : RiCloseCircleFill;\r\n    \r\n        return (\r\n            <div className=\"text-lg\">\r\n            <Tooltip title=\"Edit\">\r\n                <span\r\n                    className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                    onClick={onEdit}\r\n                >\r\n                    <MdModeEdit />\r\n               \r\n                </span>\r\n            </Tooltip>\r\n    \r\n            {/* <Tooltip title=\"Clone\">\r\n                <span\r\n                    className={`cursor-pointer p-1  hover:${textTheme}`}\r\n                    onClick={onClone}\r\n                >\r\n                    <AiFillCopy/>\r\n                </span>\r\n            </Tooltip> */}\r\n            <Tooltip title=\"View\">\r\n                <span\r\n                    className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                    onClick={onView}\r\n                >\r\n                    <HiOutlineEye />\r\n                </span>\r\n            </Tooltip>\r\n            <Tooltip title={`${row.status != \"ACTIVE\" ? \"Activate\" : \"Deactivate\"}`}>\r\n                <span\r\n                    className={`cursor-pointer p-1 text-${iconColor}-800 hover:text-${iconColor}-800`}\r\n                    onClick={handleClick}\r\n                >\r\n                    <IconComponent />\r\n                </span>\r\n            </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'Policy Title',\r\n                accessorKey: 'policy_name',\r\n            },\r\n            {\r\n                header: 'Applied to',\r\n                accessorKey: 'acc_type',\r\n            },\r\n            {\r\n                header: 'Current Status',\r\n                accessorKey: 'status',\r\n               \r\n                cell: (props) => {\r\n                    const { status } = props.row.original\r\n\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <span className={`flex whitespace-nowrap ml-2 rtl:mr-2 capitalize font-semibold rounded-full border ${orderStatusColor[status]?.backgroundColor} mt-4 px-2 py-1 text-${orderStatusColor[status]?.dotClass}`}>\r\n                                {status === 'ACTIVE' && <RiCheckboxCircleFill className=\"mt-1 mr-2 text-[#3B8C59]\" />}\r\n                                {status === 'IN_ACTIVE' && <RiCloseCircleFill className=\"mt-1 mr-2 text-[#FF0000]\" />}\r\n                                {status === 'PENDING_APPROVAL' && <BsPause className=\"mt-1 mr-2 text-blue-500\" />}\r\n                                {orderStatusColor[status]?.label}\r\n                            </span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        const sortfield = snakeToCamel(sort.key)\r\n        newTableData[\"sort_field\"] = sortfield;\r\n        newTableData[\"order\"] = sort.order;\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onRowSelect = (checked, row) => {\r\n        if (checked) {\r\n            dispatch(addRowItem([row.id]))\r\n        } else {\r\n            dispatch(removeRowItem(row.id))\r\n        }\r\n    }\r\n\r\n    const onAllRowSelect = useCallback(\r\n        (checked, rows) => {\r\n            if (checked) {\r\n                const originalRows = rows.map((row) => row.original)\r\n                const selectedIds = []\r\n                originalRows.forEach((row) => {\r\n                    selectedIds.push(row.id)\r\n                })\r\n                dispatch(setSelectedRows(selectedIds))\r\n            } else {\r\n                dispatch(setSelectedRows([]))\r\n            }\r\n        },\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            loading={loading}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n            onCheckBoxChange={onRowSelect}\r\n            onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            selectable\r\n        />\r\n        <Dialog\r\n            isOpen={isDeactivate}\r\n            onClose={() => setDeactivate(false)}>\r\n            <h6 style={{\r\n                fontStyle: 'normal',\r\n                fontWeight: 700, fontSize: '18px'\r\n            }}>{row.status === \"ACTIVE\" ? `Deactivate` : `Activate`}</h6>\r\n            <hr className='text-gary-500 mt-4 mb-4' />\r\n            <p style={{\r\n                fontStyle: 'normal',\r\n                fontWeight: 400, fontSize: '15px'\r\n            }}>{row.status === \"ACTIVE\" ? `Are you sure you want to deactivate this document policy ?` : `Are you sure you want to Activate this document policy  ?`}</p>\r\n            <div className='mt-6 text-end'>\r\n                <Button style={{ backgroundColor: \"#4D4D4D\", color: \"white\", borderRadius: \"2px\" }} className='mr-3'\r\n                    onClick={() => setDeactivate(false)}\r\n                >No</Button>\r\n                <Button variant='solid'\r\n                    onClick={() => updateDocPolicyStatus()}\r\n                >Yes</Button>\r\n            </div>\r\n        </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentTable\r\n","import { Button } from 'components/ui'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { HiPlus } from 'react-icons/hi'\r\nimport {\r\n    MdModeEdit,\r\n    MdSubtitles,\r\n    MdEmail,\r\n    MdPhone,\r\n    MdOutlineDateRange,\r\n} from 'react-icons/md'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineArrowRight } from 'react-icons/ai'\r\nimport { RiCheckboxCircleFill, RiCloseCircleFill } from 'react-icons/ri'\r\nimport { TiDeleteOutline } from 'react-icons/ti'\r\nimport { BsPatchCheck } from 'react-icons/bs'\r\nimport { Avatar } from 'components/ui'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    getAccountDetails,\r\n    getOrders,\r\n    getUserRoles,\r\n    getUsersList,\r\n} from '../../store/dataSlice'\r\nimport dayjs from 'dayjs'\r\nimport GetDropdownLabel from 'views/Servicefile'\r\n\r\nconst Account = (props) => {\r\n    const navigate = useNavigate()\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        enterAccount,\r\n        password,\r\n        rememberMe,\r\n        usernameOrEmail,\r\n        acc_mno_parent_unq_id,\r\n    } = useSelector((state) => state.auth.user)\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => state.myaccountList.data.tableData\r\n    )\r\n    const userRoles = useSelector((state) => state.myaccountList?.data?.userRoles)\r\n    const accountList = useSelector(\r\n        (state) => state.myaccountList.data.accountList?.response\r\n    )\r\n    const data = useSelector(\r\n        (state) => state.myaccountList.data.userRoleAndPermitList?.response?.res\r\n    )\r\n    const userDetailsArr = useSelector(\r\n        (state) => state.myaccountList?.data?.usersList.res\r\n    )\r\n\r\n    const parentAccountList = useSelector(\r\n        (state) => state.salesOrderList?.data?.parentAccountList\r\n    )\r\n    const dateFormat = useSelector((state) => state.locale.dateFormat)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserRoles({ enterAccount }))\r\n      }, [dispatch, enterAccount])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccountDetails({ enterAccount }))\r\n        dispatch(\r\n            getOrders({\r\n                enterAccount: enterAccount,\r\n                page_no: pageIndex - 1,\r\n                page_size: 3,\r\n            })\r\n        )\r\n        dispatch(\r\n            getUsersList({\r\n                page_no: pageIndex - 1,\r\n                page_size: 6,\r\n                sort_field: 'id',\r\n                unq_id: enterAccount,\r\n            })\r\n        )\r\n    }, [dispatch, enterAccount, pageIndex, pageSize, sort, query])\r\n\r\n\r\n    const clicked = () => {\r\n        navigate(`/account-menu-item-view-1/${'userRoles'}`)\r\n    }\r\n    return (\r\n        <>\r\n            <div\r\n                style={{ backgroundColor: '#F5F5F5' }}\r\n                className=\" grid grid-cols-3 p-5\"\r\n            >\r\n                <div className=\"col-span-2\">\r\n                    <div className=\"card mb-4\">\r\n                        <div className=\"flex gap-4 mx-4 p-4\">\r\n                            {/* <img className='bg-gray-50 w-16 h-16 rounded border' onClick={() => console.log('1')} /> */}\r\n                            {/* <div className=\"bg-gray-50 w-16 h-16 rounded border\">\r\n                                <img\r\n                                    src={'/img/avatars/airtellogo.png'}\r\n                                    alt=\"airtelLogo\"\r\n                                    className=\"mt-2 ml-2 mr-2\"\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"mt-2 ml-2 pb-2\">\r\n                                <div className='mt-2 ml-2 pb-2'>\r\n                                    <h3 className='font-bold '>{accountList?.acc_name}</h3>\r\n                                    <p>{accountList?.acc_unq_id} </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card mt-2 p-4\">\r\n                        <h5>ACCOUNT DETAILS</h5>\r\n                        <div className=\"grid grid-cols-3 mt-4\">\r\n                            {/* <div className=\"flex gap-4 p-2 mb-4\">\r\n                                <div className=\"bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <CgProfile className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Account ID</h6>\r\n                                    <p>{accountList?.id}</p>\r\n                                </div>\r\n                            </div> */}\r\n                            {/* <div className=\"flex gap-4 p-2\">\r\n                                <div className=\" bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <CgProfile className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Account Title</h6>\r\n                                    <p>{accountList?.acc_name}</p>\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"flex gap-4 p-2\">\r\n                                <div className=\" bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <CgProfile className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Parent Account</h6>\r\n                                    <p>{accountList?.acc_name}</p>\r\n                                    {/* <p>  {GetDropdownLabel(accountList?.acc_parent, parentAccountList)}</p> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex gap-4 p-2 mb-4\">\r\n                                <div className=\" bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <BsPatchCheck className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Tax ID</h6>\r\n                                    <p>{accountList?.acc_tax_id}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\" flex gap-4 p-2\">\r\n                                <div className=\" bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <MdEmail className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Email ID</h6>\r\n                                    <p>{accountList?.acc_email_id}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\" flex gap-4 p-2\">\r\n                                <div className=\"bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <CgProfile className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Global MNO</h6>\r\n                                    \r\n                                    <p>{acc_mno_parent_unq_id}</p>\r\n                                    {/* <p>{accountList?.acc_mno_parent}</p> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\" flex gap-4 p-2 mb-4\">\r\n                                <div className=\"bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <CgProfile className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Company Name</h6>\r\n                                    <p>{accountList?.acc_comp_name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\" flex gap-4 p-2\">\r\n                                <div className=\"bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <MdPhone className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>Phone Number</h6>\r\n                                    <p>{accountList?.acc_phone}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\" flex gap-4 p-2\">\r\n                                <div className=\" bg-gray-50 rounded border h-8 w-8 p-2 mt-2\">\r\n                                    <MdOutlineDateRange className=\"h-4 w-4\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h6>InCorporation Date</h6>\r\n                                    <p>\r\n                                        {dayjs(\r\n                                            accountList?.acc_incorp_dt,\r\n                                            dateFormat\r\n                                        )?.format(dateFormat)}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {data && (\r\n                        <div className=\"card mt-4 mb-2\">\r\n                            <h5 className=\"mx-4 pt-4\">\r\n                                USER ROLE AND PERIMSSIONS\r\n                            </h5>\r\n                            {data?.map((j) => {\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"mt-2 pb-2 border-b-2\">\r\n                                            <div className=\"p-2 flex justify-between\">\r\n                                                <div className=\"flex\">\r\n                                                    <Avatar className=\"ml-2 mt-1 rounded-full bg-indigo-100 text-indigo-600 dark:bg-indigo-500/20 dark:text-indigo-100\">\r\n                                                        {j.role_name.charAt(0).toUpperCase()}\r\n                                                    </Avatar>\r\n                                                    <div className=\"mx-4\">\r\n                                                        <h6>{j.role_name}</h6>\r\n                                                        <div className=\"flex gap-2\">\r\n                                                            {j.role_unq_id}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"text-base text-black font-bold flex mr-4 mt-3 gap-1\">\r\n                                                    {/* <Link to=\"/accounts-new-user-roles\">\r\n                                                        <div className=\"flex\">\r\n                                                            <MdModeEdit className=\"mt-1\" />\r\n                                                            <p className=\"ml-2\">\r\n                                                                EDIT\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {userDetailsArr && (\r\n                    <div className=\"card ml-4 p-4\">\r\n                        <h5>USER DETAILS</h5>\r\n                        {userDetailsArr &&\r\n                            userDetailsArr?.map((e) => {\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"my-4 pb-4 flex justify-between border-b-2\">\r\n                                            <div className=\"grid gap-1\">\r\n                                                {/* <img className='h-8 w-8 rounded-full border' /> */}\r\n                                                {/* <img\r\n                                                        src={\r\n                                                            '/img/avatars/profileimage.png'\r\n                                                        }\r\n                                                        alt=\"airtelLogo\"\r\n                                                        className=\"bg-gray-50 w-8 h-8 rounded-full border\"\r\n                                                    /> */}\r\n                                                <div className=\"flex pt-4\">\r\n                                                    <div className=\"flex flex-col\">\r\n                                                        <h6 className=\"mr-3\">\r\n                                                            {e?.first_name}{' '}\r\n                                                            {e?.middle_name === null\r\n                                                                ? e.middle_name\r\n                                                                : null}{' '}\r\n                                                            {e?.last_name}\r\n                                                        </h6>\r\n                                                        <h6>\r\n                                                            {GetDropdownLabel(e.dgl_roles_id, userRoles)}\r\n                                                        </h6>\r\n\r\n                                                    </div>\r\n                                                    <p\r\n                                                        style={{\r\n                                                            marginTop: '2px',\r\n                                                        }}\r\n                                                    >\r\n                                                        {e.phone}\r\n                                                    </p>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"mt-4\">\r\n                                                <div className=\"text-base text-black font-bold flex justify-end mr-2\">\r\n                                                    {/* <Link to=\"/accounts-new-users\">\r\n                                                        <div className=\"flex\">\r\n                                                            <MdModeEdit className=\"mt-1\" />\r\n                                                            <p className=\"ml-2\">\r\n                                                                EDIT\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link> */}\r\n                                                </div>\r\n                                                <div className=\"mt-2 px-2 py-1 flex rounded-full border  bg-gray-50\">\r\n                                                    {e.status === 'ACTIVE' ? (\r\n                                                        <RiCheckboxCircleFill className=\"mt-1 mr-1 text-green-700\" />\r\n                                                    ) : (\r\n                                                        <RiCloseCircleFill className=\"mt-1 mr-1 text-rose-700\" />\r\n                                                    )}\r\n                                                    <p className=\"text-sm font-black\">\r\n                                                        {e.status === 'ACTIVE'\r\n                                                            ? 'Active'\r\n                                                            : 'Inactive'}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        <Link\r\n                            className=\"block lg:inline-block md:mb-0 mb-4 w-full\"\r\n                            to=\"/account-menu-item-view-1/users\"\r\n                            onClick={clicked}\r\n                        >\r\n                            <Button\r\n                                className=\"w-full flex justify-center\"\r\n                                variant=\"solid\"\r\n                            >\r\n                                See All\r\n                                <AiOutlineArrowRight className=\"ml-4 mt-1\" />\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Tree } from 'react-d3-tree'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\nimport appConfig from 'configs/app.config'\r\n\r\nconst initialTreeData = {\r\n    name: 'Global MNO',\r\n    code: 'GL1',\r\n    collapsed: false,\r\n    tableType: 'ACCOUNT',\r\n    children: [\r\n        {\r\n            name: 'Operator 1',\r\n            collapsed: true,\r\n            code: 'OP1',\r\n            tableType: 'ACCOUNT',\r\n            attributes: {\r\n                department: 'Fabrication',\r\n            },\r\n            children: [],\r\n        },\r\n        {\r\n            name: 'Operator 2',\r\n            collapsed: true,\r\n            code: 'OP2',\r\n            tableType: 'ACCOUNT',\r\n            children: [],\r\n        },\r\n        {\r\n            name: 'Operator 3',\r\n            collapsed: true,\r\n            code: 'OP3',\r\n            tableType: 'ACCOUNT',\r\n            children: [],\r\n        },\r\n        {\r\n            name: 'Enterprise Customer',\r\n            collapsed: true,\r\n            code: 'EC1',\r\n            tableType: 'CUTOMER',\r\n            children: [],\r\n        },\r\n    ],\r\n}\r\n\r\n// let apiresponse = {\r\n//     name: 'RELIANCE GIO',\r\n//     code: 'GL1',\r\n//     collapsed: false,\r\n//     type: 'ACCOUNT',\r\n//     acc_type: 'GlobalMno',\r\n//     children: [\r\n//         {\r\n//             name: 'JioAhmedabad',\r\n//             code: 'OP38',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'JioHyderabad',\r\n//             code: 'OP39',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'adf',\r\n//             code: 'OP46',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Teqsar',\r\n//             code: 'OP48',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Idea',\r\n//             code: 'OP49',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Idea',\r\n//             code: 'OP50',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Idea',\r\n//             code: 'OP52',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYAPROVIDER45',\r\n//             code: 'PR63',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'SOME PARTNER',\r\n//             code: 'PT75',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sdfsdfdsnfb',\r\n//             code: 'PT76',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sdfsdfdsnfb',\r\n//             code: 'PT77',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sdfsdfdsnfb',\r\n//             code: 'PT78',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sdfsdfdsnfb',\r\n//             code: 'PT79',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'vodaphone',\r\n//             code: 'OP58',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYAOP',\r\n//             code: 'OP59',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Gopi',\r\n//             code: 'OP60',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Apple',\r\n//             code: 'OP61',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Classmate',\r\n//             code: 'OP63',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'goPI',\r\n//             code: 'OP64',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'goPI',\r\n//             code: 'OP65',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'goPI',\r\n//             code: 'OP66',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'goPI123',\r\n//             code: 'OP67',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'goPI',\r\n//             code: 'OP68',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'GOpi123',\r\n//             code: 'OP69',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Anil',\r\n//             code: 'OP74',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sdfsdfdsnfb',\r\n//             code: 'PT81',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'dfjgh4534754359',\r\n//             code: 'PT82',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'ANIL',\r\n//             code: 'OP75',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel india',\r\n//             code: 'OP76',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Lenovo',\r\n//             code: 'OP78',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'navyanewpro12345',\r\n//             code: 'PR67',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'navya1234',\r\n//             code: 'PR68',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYAPATENR1234',\r\n//             code: 'PT83',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'newoppppprr',\r\n//             code: 'OP81',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'ksffrsgrsghdsfh#wbfdsbhfsb@gdshdf.dd',\r\n//             code: 'PT84',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'AIrtel',\r\n//             code: 'OP83',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sdffffffffffffff',\r\n//             code: 'OP85',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sfsdfdsfdsfdsf1111',\r\n//             code: 'OP87',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel',\r\n//             code: 'OP89',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel',\r\n//             code: 'OP90',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel india',\r\n//             code: 'OP91',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel23234245245',\r\n//             code: 'OP92',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel',\r\n//             code: 'OP93',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'navyatodaaa',\r\n//             code: 'OP95',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'navyatodaaa1234',\r\n//             code: 'OP96',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel india',\r\n//             code: 'OP97',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel odisa',\r\n//             code: 'OP99',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'adddddd',\r\n//             code: 'PR79',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'xczxc',\r\n//             code: 'PT93',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'DFSDF',\r\n//             code: 'PT94',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Partner',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel odisa',\r\n//             code: 'OP100',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Airtel india',\r\n//             code: 'OP101',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'adddddd',\r\n//             code: 'PR80',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'GOPI',\r\n//             code: 'PR81',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'GOPI',\r\n//             code: 'PR83',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Provider',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Anil',\r\n//             code: 'OP117',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'test test tests',\r\n//             code: 'OP119',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'Nataraju',\r\n//             code: 'OP126',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'GOPI',\r\n//             code: 'OP127',\r\n//             collapsed: true,\r\n//             type: 'ACCOUNT',\r\n//             acc_type: 'Operator',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYA RETAIL12',\r\n//             code: 'RE34',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Retail Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYA123',\r\n//             code: 'EN33',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYA 456',\r\n//             code: 'RE37',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Retail Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYArao',\r\n//             code: 'EN34',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'asdasd34',\r\n//             code: 'RE44',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Retail Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'newennnnnn1',\r\n//             code: 'EN37',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYARELIANCE567',\r\n//             code: 'EN38',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYA RETAIL1234',\r\n//             code: 'RE45',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Retail Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'navyaee',\r\n//             code: 'EN39',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: '1234555555',\r\n//             code: 'EN47',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'sd fdsfsdfsd ff s',\r\n//             code: 'EN49',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'bilo',\r\n//             code: 'EN50',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'NAVYAEN',\r\n//             code: 'EN52',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'gopi@getinfy.bom',\r\n//             code: 'EN53',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//         {\r\n//             name: 'bilo3',\r\n//             code: 'EN55',\r\n//             collapsed: true,\r\n//             type: 'CUSTOMER',\r\n//             acc_type: 'Enterprise Customer',\r\n//             children: [],\r\n//         },\r\n//     ],\r\n// }\r\n\r\nfunction D3HierarchyChart() {\r\n    const [treeData, setTreeData] = useState()\r\n    const { enterAccount, password, rememberMe, usernameOrEmail } = useSelector(\r\n        (state) => state.auth.user\r\n    )\r\n    const { token, signedIn,accUnqId} = useSelector((state) => state.auth.session)\r\n\r\n    let treeDateFromApi\r\n\r\n    useEffect(() => {\r\n        getHierarchyByAccID(enterAccount)\r\n    }, [])\r\n\r\n    const axiosInstance = axios.create({\r\n        baseURL: appConfig.apiPrefix,\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            USER:accUnqId\r\n        },\r\n    })\r\n\r\n    const calculateTranslate = () => {\r\n        const containerWidth = window.innerWidth\r\n        const containerHeight = window.innerHeight\r\n        const centerX = containerWidth / 2\r\n        const centerY = containerHeight / 2\r\n\r\n        // Calculate the desired translation for centering the root node\r\n        const translateX = centerX - 250 // Adjust based on your node width\r\n        const translateY = centerY - 250 // Adjust based on your node height\r\n\r\n        return {\r\n            x: translateX,\r\n            y: translateY,\r\n        }\r\n    }\r\n\r\n    const renderCustomNodeElement = ({ nodeDatum }) => {\r\n        return (\r\n            <g onClick={() => handleNodeClick(nodeDatum)}>\r\n                <circle r={20} fill=\"#ffbf00\" />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    y={40}\r\n                    style={{ fontSize: '12px', color: 'blue' }}\r\n                >\r\n                    {nodeDatum.name}\r\n                </text>\r\n            </g>\r\n        )\r\n    }\r\n    const getHierarchyByAccID = async (accId) => {\r\n        axiosInstance\r\n            .get(`/account/hierarchy/${accId}/ACCOUNT`) // Replace with your API endpoint\r\n            .then((response) => {\r\n                const childrenData = response.data\r\n                setTreeData(childrenData)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error loading children:', error)\r\n            })\r\n    }\r\n\r\n    const handleNodeClick = (nodeData) => {\r\n        console.log(' node toggled ')\r\n\r\n        if (nodeData.data && nodeData.data.collapsed) {\r\n            //     axiosInstance\r\n            //         .get(`/account/hierarchy/${nodeData.data.code}/ACCOUNT`) // Replace with your API endpoint\r\n            //         .then((response) => {\r\n            //             const childrenData = response.data\r\n            //             const updatedTreeData = {\r\n            //                 ...treeData,\r\n            //                 children: treeData.children.map((child) => {\r\n            //                     if (child.name === nodeData.name) {\r\n            //                         return {\r\n            //                             ...child,\r\n            //                             collapsed: false,\r\n            //                             children: childrenData.map((employee) => ({\r\n            //                                 name: employee.name,\r\n            //                             })),\r\n            //                         }\r\n            //                     }\r\n            //                     return child\r\n            //                 }),\r\n            //             }\r\n            //             setTreeData(updatedTreeData)\r\n            //         })\r\n            //         .catch((error) => {\r\n            //             console.error('Error loading children:', error)\r\n            //         })\r\n            // } else {\r\n            //     // Collapse the node\r\n            //     const updatedTreeData = {\r\n            //         ...treeData,\r\n            //         children: treeData.children.map((child) => {\r\n            //             if (child.name === nodeData.name) {\r\n            //                 return {\r\n            //                     ...child,\r\n            //                     collapsed: true,\r\n            //                     children: [],\r\n            //                 }\r\n            //             }\r\n            //             return child\r\n            //         }),\r\n            //     }\r\n            //     setTreeData(updatedTreeData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '500px' }}>\r\n            {treeData && (\r\n                <Tree\r\n                    data={treeData}\r\n                    onNodeClick={handleNodeClick}\r\n                    onNodeToggle={handleNodeClick}\r\n                    translate={calculateTranslate()}\r\n                    separation={{ siblings: 1, nonSiblings: 1.5 }}\r\n                    nodeSvgShape={{ shape: 'rect' }}\r\n                    orientation=\"Vertical\"\r\n                    renderCustomNodeElement={renderCustomNodeElement}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default D3HierarchyChart\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { Tabs } from 'components/ui'\r\nimport DocumentTableTools from './Document/DocumentTableTools'\r\nimport UserRoleTableTools from './UserRoles/UserRoleTableTools'\r\nimport UsersTableTools from './Users/UsersTableTools'\r\nimport UsersRolesTable from './UserRoles/UsersRolesTable'\r\nimport UserTable from './Users/UserTable'\r\nimport DocumentTable from './Document/DocumentTable'\r\nimport Account from './Accounts'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport HierarchyChart from './HierarchyChart'\r\nimport D3HierarchyChart from './Users/D3HierarchyChart'\r\nconst { TabNav, TabList, TabContent } = Tabs\r\n\r\nconst Default = () => {\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const path = location.pathname.substring(\r\n        location.pathname.lastIndexOf('/') + 1\r\n    )\r\n    console.log('pathpath', path)\r\n    useEffect(() => {\r\n        navigate(`/account-menu-item-view-1/${path}`)\r\n    }, [])\r\n\r\n    const onTabChange = (val) => {\r\n        navigate(`/account-menu-item-view-1/${val}`)\r\n    }\r\n\r\n    const currentTab = useMemo(() => {\r\n        if (path) {\r\n            navigate(`/account-menu-item-view-1/${path}`)\r\n            return path\r\n        } else {\r\n            navigate(`/account-menu-item-view-1/${'accounts'}`)\r\n            return 'accounts'\r\n        }\r\n    }, [path])\r\n    return (\r\n        <div>\r\n            <Tabs\r\n                value={currentTab}\r\n                defaultValue=\"accounts\"\r\n                onChange={(val) => onTabChange(val)}\r\n            >\r\n                {/* <Tabs defaultValue=\"accounts\"> */}\r\n                <TabList>\r\n                    <TabNav value=\"accounts\">Account Details</TabNav>\r\n                    <TabNav value=\"documents\">Document Policy</TabNav>\r\n                    <TabNav value=\"userRoles\">User Roles & Permissions</TabNav>\r\n                    <TabNav value=\"users\">Users</TabNav>\r\n                    <TabNav value=\"hierarchy\">Hierarchy</TabNav>\r\n                </TabList>\r\n                <div className=\"p-4\">\r\n                    <TabContent value=\"accounts\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Account Details</h3>\r\n                        </div>\r\n                        <Account />\r\n                    </TabContent>\r\n                    <TabContent value=\"documents\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Document Policy</h3>\r\n                            <DocumentTableTools />\r\n                        </div>\r\n                        <DocumentTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"userRoles\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">\r\n                                User Roles & Permissions\r\n                            </h3>\r\n                            <UserRoleTableTools />\r\n                        </div>\r\n                        <UsersRolesTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"users\">\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <h3 className=\"mb-4 lg:mb-0\">Users</h3>\r\n                            <UsersTableTools />\r\n                        </div>\r\n                        <UserTable />\r\n                    </TabContent>\r\n                    <TabContent value=\"hierarchy\">\r\n                        <h3 className=\"mb-4 lg:mb-0\">Hierarchy</h3>\r\n                        <div className=\"lg:flex items-center justify-between mb-4\">\r\n                            <D3HierarchyChart />\r\n                        </div>\r\n                    </TabContent>\r\n                </div>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Default\r\n","import React from 'react'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store/index'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport AccountTabs from './components/AccountTabs'\r\n\r\ninjectReducer('myaccountList', reducer)\r\nconst MyAccount = () => {\r\n  return (\r\n    <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n      <AccountTabs />\r\n    </AdaptableCard>\r\n  )\r\n}\r\n\r\nexport default MyAccount"],"names":["stateSlice","createSlice","name","initialState","selectedRows","selectedRow","deleteMode","reducers","setSelectedRows","state","action","payload","setSelectedRow","addRowItem","currentState","current","includes","removeRowItem","filter","id","setDeleteMode","actions","toggleDeleteConfirmation","combineReducers","data","size","className","icon","onClick","dispatch","useDispatch","searchInput","useRef","tableData","useSelector","myaccountList","auth","user","enterAccount","debounceFn","password","rememberMe","usernameOrEmail","debounce","val","newTableData","cloneDeep","page_no","pageIndex","page_size","pageSize","unq_id","sort_field","length","fetchData","setTableData","getOrders","ref","placeholder","prefix","onChange","e","target","value","docPolicyList","res","useEffect","getDocPolicyList","download","block","to","variant","disabled","orderStatusColor","ACTIVE","label","dotClass","textClass","backgroundColor","PENDING_APPROVAL","IN_ACTIVE","tableRef","useState","isDeactivate","setDeactivate","row","setRow","sort","query","total","order","loading","userRoleAndPermitList","response","totalCount","resetSelected","useMemo","updateUserRolesAndPermitStatus","isStatus","status","apiUpdateChildRoleStatus","success","OpenNotification","ActionColumn","textTheme","useThemeClass","navigate","useNavigate","onView","useCallback","onEdit","mode","onClone","iconColor","IconComponent","RiCheckboxCircleFill","RiCloseCircleFill","title","columns","header","cell","props","original","accessorKey","onAllRowSelect","checked","rows","originalRows","map","selectedIds","forEach","push","pagingData","onPaginationChange","page","onSelectChange","Number","onSort","sortfield","snakeToCamel","key","onCheckBoxChange","onIndeterminateCheckBoxChange","selectable","isOpen","onClose","style","fontStyle","fontWeight","fontSize","color","borderRadius","ItemStatusColor","SUBMITTED","usersList","acc_unq_id","acc_user_id","userRoles","acc_user_unq_id","updateUserAccStatus","apiUpdateUserAccStatus","getUsersList","getUserRoles","dgl_roles_id","GetDropdownLabel","flex","updateDocPolicyStatus","apiUpdateDocPolicyAccStatus","acc_mno_parent_unq_id","accountList","userDetailsArr","dateFormat","salesOrderList","parentAccountList","locale","getAccountDetails","acc_name","acc_tax_id","acc_email_id","acc_comp_name","acc_phone","dayjs","acc_incorp_dt","format","j","role_name","charAt","toUpperCase","role_unq_id","first_name","middle_name","last_name","marginTop","phone","treeData","setTreeData","session","token","accUnqId","signedIn","getHierarchyByAccID","axiosInstance","axios","baseURL","appConfig","headers","Authorization","USER","accId","get","then","childrenData","catch","error","console","handleNodeClick","nodeData","log","collapsed","width","height","onNodeClick","onNodeToggle","translate","x","window","innerWidth","y","innerHeight","separation","siblings","nonSiblings","nodeSvgShape","shape","orientation","renderCustomNodeElement","nodeDatum","r","fill","textAnchor","TabNav","Tabs","TabList","TabContent","location","useLocation","path","pathname","substring","lastIndexOf","currentTab","defaultValue","onTabChange","injectReducer","reducer","bodyClass","AccountTabs"],"sourceRoot":""}