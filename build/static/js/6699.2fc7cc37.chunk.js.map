{"version":3,"file":"static/js/6699.2fc7cc37.chunk.js","mappings":"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","sources":["services/WareHouseService.js","views/wareHouse/WareHouse/components/WareHouseForm.js"],"sourcesContent":["import ApiService from './ApiService'\r\n\r\nexport async function apiGetWarehouseData(params) {\r\n    return ApiService.fetchData({\r\n        url: '/catalogs/dgl-wh-info',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetWarehouseDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: `/catalogs/admin/dgl-wh-info-pageable`,\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiCreateWarehouse(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info`,\r\n            method: 'post',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\nexport async function apiUpdateWarehouse(data) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info`,\r\n            method: 'put',\r\n            data,\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport async function apiUpdateWarehouseStatus(id, status) {\r\n    try {\r\n        const resp = await ApiService.fetchData({\r\n            url: `catalogs/dgl-wh-info/${id}/${status}`,\r\n            method: 'patch',\r\n        })\r\n        return {\r\n            status: 'success',\r\n            data: resp,\r\n        }\r\n    } catch (errors) {\r\n        return {\r\n            status: 'failed',\r\n            message: errors?.response?.data || errors.toString(),\r\n        }\r\n    }\r\n}","import { AdaptableCard, RichTextEditor } from 'components/shared'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\nimport {\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n    DatePicker,\r\n    Select,\r\n    FormItem,\r\n    FormContainer,\r\n    toast,\r\n    Notification,\r\n    Alert,\r\n} from 'components/ui'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport {\r\n    apiCreateWarehouse,\r\n    apiUpdateWarehouse,\r\n} from 'services/WareHouseService'\r\nimport {\r\n    ApiToUiConversionWareHouse,\r\n    UiToApiConversionWareHouse,\r\n} from 'utils/campareandCopy'\r\nimport { GetErrorMsg } from 'views/Servicefile'\r\nimport * as Yup from 'yup'\r\nexport const phoneRegExp = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/\r\n    \r\nconst WareHouseForm = () => {\r\n    const navigate = useNavigate()\r\n    let initialValues = {\r\n        whTitle: '',\r\n        whLocation: '',\r\n        whAddressLine1: '',\r\n        whAddressLine2: '',\r\n        whCity: '',\r\n        whState: '',\r\n        whCountry: '',\r\n        whZipCode: '',\r\n        whContactPerson: '',\r\n        whEmailId: '',\r\n        whPhoneNumber: '',\r\n        whAlternatePhoneNumber: '',\r\n        whAllottedCapacity: '',\r\n        whTotalCapacity: '',\r\n        whDescription: '',\r\n        whStatus: 0,\r\n    }\r\n\r\n    const location = useLocation()\r\n\r\n    const mode = location.state?.mode === 'EDIT' ? location.state?.mode : 'ADD'\r\n    const [selectedMode, setSelectedMode] = useState(mode)\r\n    const rowForEdit = location.state?.data\r\n    if (rowForEdit) {\r\n        initialValues = ApiToUiConversionWareHouse(initialValues, rowForEdit)\r\n    }\r\n    const [initialState, setInitValues] = useState(initialValues)\r\n    const { acc_mno_id } = useSelector((state) => state.auth.user)\r\n\r\n    const submitApi = async (values) => {\r\n        let submittedValues = { ...values, accId: acc_mno_id }\r\n        let payload = {}\r\n        if (selectedMode === 'ADD') {\r\n            const reqAddPayload = UiToApiConversionWareHouse(\r\n                payload,\r\n                submittedValues\r\n            )\r\n            const resp = await apiCreateWarehouse(reqAddPayload)\r\n            if (resp.status === 'success') {\r\n                toast.push(\r\n                    <Notification\r\n                        title={'WareHouse Creation'}\r\n                        type=\"success\"\r\n                        duration={2500}\r\n                    >\r\n                        Warehouse Added Successfuly\r\n                    </Notification>,\r\n                    {\r\n                        placement: 'top-end',\r\n                    }\r\n                )\r\n\r\n                navigate('/wareHouse-menu-item-view-2')\r\n            } else if (resp.status === 'failed') {\r\n                const errorMsg = GetErrorMsg(resp) || 'Error'\r\n                toast.push(\r\n                    <Notification\r\n                        title={'Failed'}\r\n                        type=\"danger\"\r\n                        duration={2500}\r\n                    >\r\n                        {errorMsg}\r\n                    </Notification>,\r\n                    {\r\n                        placement: 'top-end',\r\n                    }\r\n                )\r\n            }\r\n        } else if (selectedMode === 'EDIT') {\r\n            const reqEditPayload = UiToApiConversionWareHouse(\r\n                payload,\r\n                submittedValues,\r\n                true\r\n            )\r\n            const resp = await apiUpdateWarehouse(reqEditPayload)\r\n            if (resp.status === 'success') {\r\n                toast.push(\r\n                    <Notification\r\n                        title={'WareHouse Updation'}\r\n                        type=\"success\"\r\n                        duration={2500}\r\n                    >\r\n                        Warehouse Updated Successfuly\r\n                    </Notification>,\r\n                    {\r\n                        placement: 'top-end',\r\n                    }\r\n                )\r\n                navigate('/wareHouse-menu-item-view-2')\r\n            } else if (resp.status === 'failed') {\r\n                const errorMsg = GetErrorMsg(resp) || 'Error'\r\n                toast.push(\r\n                    <Notification\r\n                        title={'Failed'}\r\n                        type=\"danger\"\r\n                        duration={2500}\r\n                    >\r\n                        {errorMsg}\r\n                    </Notification>,\r\n                    {\r\n                        placement: 'top-end',\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        whTitle: Yup.string().required('Title is required'),\r\n        whLocation: Yup.string().required('Location is required'),\r\n        whAddressLine1: Yup.string().required('Address Line1 is required'),\r\n        whAddressLine2: Yup.string().required('Address Line2 is required'),\r\n        whCity: Yup.string().required('City is required'),\r\n        whState: Yup.string().required('State is required'),\r\n        whCountry: Yup.string().required('Country is required'),\r\n        whZipCode: Yup.string().required('ZipCode is required'),\r\n        whContactPerson: Yup.string().required('Contact Person is required'),\r\n        whEmailId: Yup.string()\r\n            .email('Enter Valid Email')\r\n            .required('Email Id is required'),\r\n        whPhoneNumber: Yup.string()\r\n            .required('Phone Number is required')\r\n            .matches(phoneRegExp, 'Phone number is not valid'),\r\n        whAlternatePhoneNumber: Yup.string().matches(\r\n            phoneRegExp,\r\n            'Alternate Phone number is not valid'\r\n        ),\r\n        whAllottedCapacity: Yup.string().required(\r\n            'Alloated Capacity is required'\r\n        ),\r\n        whTotalCapacity: Yup.string().required('Total Capacity is required'),\r\n        // whDescription: Yup.string().required('Description is required'),\r\n    })\r\n    let  breadCrumbList=[{\r\n        name:'Home',\r\n        link:\"/home\"\r\n    },{\r\n        name:'WareHouse',\r\n        link:\"/wareHouse-menu-item-view-2\"\r\n    },{\r\n        name: `Create WareHouse`,\r\n    }]\r\n    if(mode===\"EDIT\"){\r\n        breadCrumbList = [\r\n            {\r\n                name: 'Home',\r\n                link: '/home',\r\n            },\r\n            {\r\n                name: 'WareHouse',\r\n                link: '/wareHouse-menu-item-view-2',\r\n            },\r\n            {\r\n                name: rowForEdit?.wh_title,\r\n                link: '/warehouse-view-warehouse',\r\n                state:rowForEdit\r\n            },\r\n            {\r\n                name : \"Edit\"\r\n            },\r\n        ]\r\n    }\r\n    return (\r\n        <>\r\n            <CustomBreadcrumbs list={breadCrumbList} />\r\n            <div className=\"mt-3\">\r\n                <h3>{mode === 'EDIT' ? 'Edit' : 'Create'} WareHouse</h3>\r\n                <div>\r\n                    <Formik\r\n                        // innerRef={formikRef}\r\n                        initialValues={initialState}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={(values) => {\r\n                            // setSubmitting(true)\r\n                            submitApi(values)\r\n                        }}\r\n                    >\r\n                        {({\r\n                            values,\r\n                            touched,\r\n                            errors,\r\n                            isSubmitting,\r\n                            handleSubmit,\r\n                            submitForm,\r\n                        }) => (\r\n                            <Form onSubmit={submitForm}>\r\n                                <div className=\"mt-6  bg-gray-50 dark:bg-gray-700 rounded \">\r\n                               <div className=\" p-5\"\r\n                                            style={{\r\n                                                backgroundColor: '#F5F5F5',\r\n                                            }}>\r\n                                    <AdaptableCard\r\n                                        className=\"h-full\"\r\n                                        bodyClass=\"h-full\"\r\n                                        divider\r\n                                    >\r\n                                        <FormContainer>\r\n                                            <div className=\"md:grid grid-cols-2 gap-4 mx-4\">\r\n                                                <FormItem\r\n                                                    label=\"Warehouse Title\"\r\n                                                    invalid={\r\n                                                        errors.whTitle &&\r\n                                                        touched.whTitle\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whTitle\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whTitle\"\r\n                                                        placeholder=\"Enter Warehouse Title\"\r\n                                                        component={Input}\r\n                                                        value={values.whTitle}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                {/* <FormItem label=\"Warehouse ID\">\r\n                                            <Field\r\n                                                type=\"text\"\r\n                                                autoComplete=\"off\"\r\n                                                name=\"id\"\r\n                                                placeholder=\"Enter Warehouse ID\"\r\n                                                component={Input}\r\n                                            />\r\n                                        </FormItem> */}\r\n                                                <FormItem\r\n                                                    label=\"Location\"\r\n                                                    invalid={\r\n                                                        errors.whLocation &&\r\n                                                        touched.whLocation\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whLocation\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whLocation\"\r\n                                                        placeholder=\"Enter Location\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whLocation\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                {/* <FormItem label=\"\">\r\n                                            <Field\r\n                                                type=\"text\"\r\n                                                autoComplete=\"off\"\r\n                                                name=\" \"\r\n                                                placeholder=\"\"\r\n                                                component={''}\r\n                                            />\r\n                                        </FormItem> */}\r\n                                                <FormItem\r\n                                                    label=\"Address Line 1\"\r\n                                                    invalid={\r\n                                                        errors.whAddressLine1 &&\r\n                                                        touched.whAddressLine1\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whAddressLine1\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whAddressLine1\"\r\n                                                        placeholder=\"Enter Address\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whAddressLine1\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Address Line 2\"\r\n                                                    invalid={\r\n                                                        errors.whAddressLine2 &&\r\n                                                        touched.whAddressLine2\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whAddressLine2\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whAddressLine2\"\r\n                                                        placeholder=\"Enter Address\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whAddressLine2\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem>\r\n                                                    <div className=\"flex\">\r\n                                                        <FormItem\r\n                                                            label=\"Country\"\r\n                                                            className=\"w-150 mr-6\"\r\n                                                            invalid={\r\n                                                                errors.whCountry &&\r\n                                                                touched.whCountry\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.whCountry\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"whCountry\"\r\n                                                                placeholder=\"Enter Your Country\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                value={\r\n                                                                    values.whCountry\r\n                                                                }\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"City\"\r\n                                                            className=\"w-150 mx-6\"\r\n                                                            invalid={\r\n                                                                errors.whCity &&\r\n                                                                touched.whCity\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.whCity\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"whCity\"\r\n                                                                placeholder=\"Enter your City\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                value={\r\n                                                                    values.whCity\r\n                                                                }\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    </div>\r\n                                                </FormItem>\r\n                                                <FormItem>\r\n                                                    <div className=\"flex\">\r\n                                                        <FormItem\r\n                                                            label=\"State\"\r\n                                                            className=\"w-150 mr-6\"\r\n                                                            invalid={\r\n                                                                errors.whState &&\r\n                                                                touched.whState\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.whState\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"whState\"\r\n                                                                placeholder=\"Enter Your State\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                value={\r\n                                                                    values.whState\r\n                                                                }\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                        <FormItem\r\n                                                            label=\"Zip Code\"\r\n                                                            className=\"w-150 mx-6\"\r\n                                                            invalid={\r\n                                                                errors.whZipCode &&\r\n                                                                touched.whZipCode\r\n                                                            }\r\n                                                            errorMessage={\r\n                                                                errors.whZipCode\r\n                                                            }\r\n                                                        >\r\n                                                            <Field\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"off\"\r\n                                                                name=\"whZipCode\"\r\n                                                                placeholder=\"Enter your ZipCode\"\r\n                                                                component={\r\n                                                                    Input\r\n                                                                }\r\n                                                                value={\r\n                                                                    values.whZipCode\r\n                                                                }\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    </div>\r\n                                                </FormItem>\r\n                                            </div>\r\n                                        </FormContainer>\r\n                                    </AdaptableCard>\r\n                                    <AdaptableCard\r\n                                        className=\"h-full\"\r\n                                        bodyClass=\"h-full\"\r\n                                        divider\r\n                                    >\r\n                                        <FormContainer>\r\n                                            <div className=\"md:grid grid-cols-2 gap-4 mx-4\">\r\n                                                <FormItem\r\n                                                    label=\"Contact Person\"\r\n                                                    invalid={\r\n                                                        errors.whContactPerson &&\r\n                                                        touched.whContactPerson\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whContactPerson\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whContactPerson\"\r\n                                                        placeholder=\"Enter Contact Person\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whContactPerson\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Email ID\"\r\n                                                    invalid={\r\n                                                        errors.whEmailId &&\r\n                                                        touched.whEmailId\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whEmailId\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whEmailId\"\r\n                                                        placeholder=\"Enter Email ID\"\r\n                                                        component={Input}\r\n                                                        value={values.whEmailId}\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Phone Number\"\r\n                                                    invalid={\r\n                                                        errors.whPhoneNumber &&\r\n                                                        touched.whPhoneNumber\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whPhoneNumber\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whPhoneNumber\"\r\n                                                        placeholder=\"Enter Phone Number\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whPhoneNumber\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Alternate Phone Number\"\r\n                                                    invalid={\r\n                                                        errors.whAlternatePhoneNumber &&\r\n                                                        touched.whAlternatePhoneNumber\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whAlternatePhoneNumber\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"text\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whAlternatePhoneNumber\"\r\n                                                        placeholder=\"Enter Phone Number\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whAlternatePhoneNumber\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Warehouse Total Capacity(in sqft)\"\r\n                                                    invalid={\r\n                                                        errors.whTotalCapacity &&\r\n                                                        touched.whTotalCapacity\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whTotalCapacity\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"number\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whTotalCapacity\"\r\n                                                        placeholder=\"Enter Capacity\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whTotalCapacity\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                                <FormItem\r\n                                                    label=\"Allocated Capacity(in sqft)\"\r\n                                                    invalid={\r\n                                                        errors.whAllottedCapacity &&\r\n                                                        touched.whAllottedCapacity\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whAllottedCapacity\r\n                                                    }\r\n                                                >\r\n                                                    <Field\r\n                                                        type=\"number\"\r\n                                                        autoComplete=\"off\"\r\n                                                        name=\"whAllottedCapacity\"\r\n                                                        placeholder=\"Enter Capacity\"\r\n                                                        component={Input}\r\n                                                        value={\r\n                                                            values.whAllottedCapacity\r\n                                                        }\r\n                                                    />\r\n                                                </FormItem>\r\n                                            </div>\r\n                                            <div>\r\n                                                <FormItem\r\n                                                    label=\"Description\"\r\n                                                    className=\"mx-4 w-100\"\r\n                                                    invalid={\r\n                                                        errors.whDescription &&\r\n                                                        touched.whDescription\r\n                                                    }\r\n                                                    errorMessage={\r\n                                                        errors.whDescription\r\n                                                    }\r\n                                                >\r\n                                                    <Field name=\"whDescription\">\r\n                                                        {({ field }) => (\r\n                                                            <RichTextEditor\r\n                                                                value={\r\n                                                                    field.value\r\n                                                                }\r\n                                                                onChange={field.onChange(\r\n                                                                    field.name\r\n                                                                )}\r\n                                                            ></RichTextEditor>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FormItem>\r\n                                            </div>\r\n                                        </FormContainer>\r\n                                    </AdaptableCard>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-4 text-right\">\r\n                                    <>\r\n                                        <Link\r\n                                            className=\"block lg:inline-block md:mb-0 mb-4\"\r\n                                            to=\"/wareHouse-menu-item-view-2\"\r\n                                        >\r\n                                            <Button\r\n                                                type={'button'}\r\n                                                className=\"mx-2\"\r\n                                                onClick={() =>\r\n                                                    console.log('cancel')\r\n                                                }\r\n                                                variant=\"solid\"\r\n                                                style={{\r\n                                                    backgroundColor: '#4D4D4D',\r\n                                                }}\r\n                                            >\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Link className=\"block lg:inline-block md:mb-0 mb-4\">\r\n                                            <Button\r\n                                                type={'submit'}\r\n                                                className=\"mx-2\"\r\n                                                variant=\"solid\"\r\n                                                onClick={submitForm}\r\n                                            >\r\n                                                Submit For Approval\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WareHouseForm\r\n"],"names":["apiGetWarehouseData","params","ApiService","url","method","apiGetWarehouseDetails","apiCreateWarehouse","data","resp","status","message","response","toString","apiUpdateWarehouse","apiUpdateWarehouseStatus","id","phoneRegExp","navigate","useNavigate","initialValues","whTitle","whLocation","whAddressLine1","whAddressLine2","whCity","whState","whCountry","whZipCode","whContactPerson","whEmailId","whPhoneNumber","whAlternatePhoneNumber","whAllottedCapacity","whTotalCapacity","whDescription","whStatus","location","useLocation","mode","state","useState","selectedMode","rowForEdit","ApiToUiConversionWareHouse","initialState","acc_mno_id","useSelector","auth","user","submitApi","values","submittedValues","accId","payload","reqAddPayload","UiToApiConversionWareHouse","toast","title","type","duration","placement","errorMsg","GetErrorMsg","reqEditPayload","validationSchema","Yup","required","email","matches","breadCrumbList","name","link","wh_title","list","className","onSubmit","touched","errors","submitForm","isSubmitting","handleSubmit","style","backgroundColor","bodyClass","divider","label","invalid","errorMessage","autoComplete","placeholder","component","Input","value","field","onChange","to","onClick","console","log","variant"],"sourceRoot":""}