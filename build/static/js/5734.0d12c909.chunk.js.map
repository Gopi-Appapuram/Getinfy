{"version":3,"file":"static/js/5734.0d12c909.chunk.js","mappings":"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","sources":["components/template/CustomBreadCrumb.js","views/wareHouse/WareHouse/components/WorkOrders/WorkOrdersTableSearch.js","views/wareHouse/WareHouse/components/WorkOrders/WorkOrdersFilter.js","views/wareHouse/WareHouse/components/WorkOrders/WorkOrdersTools.js","views/wareHouse/WareHouse/components/WorkOrders/WorkOrdersTable.js","views/wareHouse/WareHouse/components/WorkOrders/WorkOrders.js"],"sourcesContent":["import { ActionLink } from 'components/shared'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumbs = ({ list }) => {\r\n    return (\r\n        <nav class=\"w-full rounded-md pb-2\">\r\n            <ol class=\"list-reset flex\">\r\n            {\r\n                list?.map((val, index) => {\r\n                    return <>\r\n                        <li>\r\n                            {val.link ? \r\n                            val?.state ?\r\n                            <Link\r\n                                to={val.link} state={{data:val?.state}}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> :  <Link\r\n                                to={val.link}\r\n                                style={{textDecoration:'underline',color:'blue'}}\r\n                            >\r\n                                {val.name}\r\n                            </Link> \r\n                            : <>{val.name}</>}\r\n                        </li>\r\n                        {\r\n                            index + 1 < list.length && <li>\r\n                            <span class=\"mx-2 text-neutral-500 dark:text-neutral-400\">\r\n                                /\r\n                            </span>\r\n                        </li>\r\n                        }\r\n                    </>\r\n                })\r\n            }\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumbs\r\n","import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { getOrders, setTableData } from '../../store/dataSlice'\r\n// import debounce from 'lodash/debounce'\r\n// import cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst WorkOrdersTableSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            // onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default WorkOrdersTableSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst WorkOrdersFilter = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkOrdersFilter\r\n","import React from 'react'\r\nimport { HiDownload } from 'react-icons/hi'\r\nimport { Link } from 'react-router-dom'\r\nimport {BiRefresh} from 'react-icons/bi'\r\n\r\nimport {\r\n   Button,\r\n \r\n} from 'components/ui'\r\nimport WorkOrdersTableSearch from './WorkOrdersTableSearch'\r\n import WorkOrdersFilter from './WorkOrdersFilter'\r\n\r\n\r\n\r\nconst WorkOrdersTableTools = () => {\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            {/* <InventoryTableSearch/>\r\n            <InventoryFilter/> */}\r\n            <WorkOrdersTableSearch/>\r\n            <WorkOrdersFilter/>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                // target=\"_blank\"\r\n                // to=\"/warehouse-new-add-inventory\" \r\n                >\r\n                    <Button block size=\"sm\" style={{backgroundColor:\"gray\", color:\"white\"}} icon={<BiRefresh />}>\r\n                    Sync\r\n                </Button>\r\n               \r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkOrdersTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAllWorkOrders, setWorkOrderTableData } from '../../store/dataSlice'\r\nimport { cloneDeep } from 'lodash'\r\n\r\nconst ActionColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/workorder-details/${row?.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <div className=\"text-lg\">\r\n            <Tooltip title=\"Edit\">\r\n                <span\r\n                    className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                    onClick={onView}\r\n                >\r\n                   <HiOutlineEye />\r\n\r\n                </span>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WorkOrdersTable = () => {\r\n\r\n     const tableRef = useRef(null)\r\n\r\n     const dispatch = useDispatch()\r\n     const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n         (state) => state.wareHouse?.data?.workOrderTableData\r\n     );\r\n     const loading = useSelector((state) => state.wareHouse.data.loading)\r\n \r\n     const data = useSelector((state) => state.wareHouse.data.allWorkOrdersList)\r\n     \r\n     const fetchData = useCallback(() => {\r\n         dispatch(getAllWorkOrders({ page_no: pageIndex - 1, page_size: pageSize, sort_field: 'id' }))\r\n     }, [dispatch, pageIndex, pageSize, sort, query])\r\n \r\n     useEffect(() => {\r\n         fetchData()\r\n     }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n \r\n     const tableData = useMemo(\r\n         () => ({ pageIndex, pageSize, sort, query, total }),\r\n         [pageIndex, pageSize, sort, query, total]\r\n     )\r\n    // const data = [\r\n    //     {\r\n    //         workOrderId:\"WO_762365\",\r\n    //         Assignee:\"John Depp\",\r\n    //         createDate:\"14/2/2023\",\r\n    //         productTitle:\"Amazon Echo5\",\r\n    //         productQty:\"200\",\r\n    //         estimatedTimeOfDelivery:\"5 Days\"\r\n    //     },\r\n    //     {\r\n    //         workOrderId:\"WO_762365\",\r\n    //         Assignee:\"John Depp\",\r\n    //         createDate:\"14/2/2023\",\r\n    //         productTitle:\"Amazon Echo5\",\r\n    //         productQty:\"200\",\r\n    //         estimatedTimeOfDelivery:\"5 Days\"\r\n    //     },\r\n    //     {\r\n    //         workOrderId:\"WO_762365\",\r\n    //         Assignee:\"John Depp\",\r\n    //         createDate:\"14/2/2023\",\r\n    //         productTitle:\"Amazon Echo5\",\r\n    //         productQty:\"200\",\r\n    //         estimatedTimeOfDelivery:\"5 Days\"\r\n    //     }\r\n    // ]\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'Actions',\r\n                id: 'action',\r\n                cell: (props) => <ActionColumn row={props.row.original} />,\r\n            },\r\n            {\r\n                header: 'WORK ORDER ID',\r\n                accessorKey: 'wo_unq_id',\r\n            },\r\n            // {\r\n            //     header: 'ASSIGNEE',\r\n            //     accessorKey: 'Assignee',\r\n            // },\r\n            {\r\n                header: 'CREATED DATE',\r\n                accessorKey: 'wo_alltd_dt',\r\n            },\r\n            {\r\n                header: 'PRODUCT TITLE',\r\n                accessorKey: 'wo_desc',\r\n            },\r\n            {\r\n                header: 'PRODUCT QTY',\r\n                accessorKey: 'productQty',\r\n                cell: (props) => {\r\n                    const prodQtyArray = props.row.original.dgl_wo_intry_allocation\r\n                    let qty=0\r\n                    if(prodQtyArray?.length > 0){\r\n                        qty=prodQtyArray.reduce(\r\n                            (accumulator, currentValue) => accumulator + currentValue.quantity,\r\n                            0\r\n                          );\r\n                    }\r\n                    return (\r\n                        <>{qty}</>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                header: 'ESTIMATED TIME OF DELIVERY',\r\n                accessorKey: 'dgl_wo_shippment_details.dispatchdate',\r\n            },\r\n            {\r\n                header: 'Status',\r\n                accessorKey: 'wo_status',\r\n                // cell: (props) => {\r\n                //     return (\r\n                //         <div className=\"flex items-center\">\r\n                //             <Badge\r\n                //                 className={ItemStatusColor[0].dotClass}\r\n                //             />\r\n                //             <span\r\n                //                 className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                //             >\r\n                //                 {ItemStatusColor[0].label}\r\n                //             </span>\r\n                //         </div>\r\n                //     )\r\n                // },\r\n            }\r\n        ],\r\n        []\r\n    )\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setWorkOrderTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setWorkOrderTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setWorkOrderTableData(newTableData))\r\n    }\r\n\r\n    console.log(data)\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            loading={loading}\r\n            pagingData={tableData}\r\n            onPaginationChange={onPaginationChange}\r\n            onSelectChange={onSelectChange}\r\n            onSort={onSort}\r\n        />\r\n    )\r\n}\r\n\r\nexport default WorkOrdersTable\r\n\r\n","import React from 'react'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport WorkOrdersTableTools from './WorkOrdersTools'\r\nimport WorkOrdersTable from './WorkOrdersTable'\r\nimport { injectReducer } from 'store'\r\nimport reducer from '../../store'\r\nimport CustomBreadcrumbs from 'components/template/CustomBreadCrumb'\r\ninjectReducer('wareHouse', reducer)\r\nconst WorkOrders = () => {\r\n    const breadCrumbList = [\r\n        {\r\n            name: 'Home',\r\n            link: '/home',\r\n        },\r\n        {\r\n            name: 'Work Orders',\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <CustomBreadcrumbs list={breadCrumbList} />\r\n            <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n                <div className=\"lg:flex items-center justify-between mb-4\">\r\n                    <h3 className=\"mb-4 lg:mb-0 mt-4\">Work Orders</h3>\r\n                    <WorkOrdersTableTools />\r\n                </div>\r\n                <WorkOrdersTable />\r\n            </AdaptableCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkOrders\r\n"],"names":["list","class","map","val","index","link","state","to","data","style","textDecoration","color","name","length","searchInput","useRef","ref","className","size","placeholder","prefix","icon","onClick","target","download","block","backgroundColor","ActionColumn","row","textTheme","useThemeClass","navigate","useNavigate","onView","useCallback","id","title","tableRef","dispatch","useDispatch","useSelector","wareHouse","workOrderTableData","pageIndex","pageSize","sort","query","total","loading","allWorkOrdersList","fetchData","getAllWorkOrders","page_no","page_size","sort_field","useEffect","tableData","useMemo","columns","header","cell","props","original","accessorKey","prodQtyArray","dgl_wo_intry_allocation","qty","reduce","accumulator","currentValue","quantity","console","log","pagingData","onPaginationChange","page","newTableData","cloneDeep","setWorkOrderTableData","onSelectChange","value","Number","onSort","injectReducer","reducer","bodyClass"],"sourceRoot":""}