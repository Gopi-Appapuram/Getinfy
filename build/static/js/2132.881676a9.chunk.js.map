{"version":3,"file":"static/js/2132.881676a9.chunk.js","mappings":"yNA0BA,EAtBgC,WAG5B,IAAMA,GAAcC,EAAAA,EAAAA,UAOpB,OACI,SAAC,KAAK,CACFC,IAAKF,EACLG,UAAU,UACVC,KAAK,KACLC,YAAY,SACZC,QAAQ,SAAC,MAAe,CAACH,UAAU,aAI/C,ECIA,EAlB4B,WAGxB,OACI,+BACI,SAAC,KAAM,CACHC,KAAK,KACLD,UAAU,6DACVI,MAAM,SAAC,MAAe,IACtBC,QAAS,WAAO,EAAE,qBAOlC,ECQA,EArB+B,WAC3B,OACI,iBAAKL,UAAU,4CAA2C,WACtD,SAAC,EAAuB,KACxB,SAAC,EAAmB,KAEpB,SAAC,KAAI,CACDA,UAAU,6CACVM,OAAO,SACPC,UAAQ,YAGR,SAAC,KAAM,CAACC,OAAK,EAACP,KAAK,KAAKG,MAAM,SAAC,MAAU,IAAI,wBAO7D,ECVMK,G,kBACC,CACCC,MAAO,SACPC,SAAU,iBACVC,UAAW,qBA+QnB,EAnO0B,WAErB,IAAMC,GAAWf,EAAAA,EAAAA,QAAO,MA8FnBgB,GAAUC,EAAAA,EAAAA,UACZ,iBAAM,CACF,CACIC,OAAQ,eACRC,YAAa,eAEjB,CACID,OAAQ,kBACRC,YAAa,kBAIjB,CACID,OAAQ,eACRC,YAAa,eAIjB,CACID,OAAQ,aACRC,YAAa,aAIjB,CACID,OAAQ,yBACRC,YAAa,sBAIjB,CACID,OAAQ,wBACRC,YAAa,mBAIjB,CACID,OAAQ,gBACRC,YAAa,eAIjB,CACID,OAAQ,SACRC,YAAa,UAIjB,CACID,OAAQ,SACRC,YAAa,SAEbC,KAAM,SAACC,GACH,OACI,iBAAKnB,UAAU,oBAAmB,WAC9B,SAAC,KAAK,CACFA,UAAWS,EAAmBE,YAElC,iBACIX,UAAS,iDAA4CS,EAAmBG,WAAY,SAEnFH,EAAmBC,UAIpC,GAEP,GACD,IA8CJ,OACI,SAAC,KAAS,CACNX,IAAKc,EACLC,QAASA,EACTM,KAtLK,CACT,CACIC,YAAY,aACZC,eAAe,SACfC,YAAY,aACZC,UAAU,gBACVC,mBAAmB,oBACnBC,gBAAgB,oBAChBC,YAAY,8BACZC,OAAO,aAEX,CACIP,YAAY,aACZC,eAAe,SACfC,YAAY,aACZC,UAAU,gBACVC,mBAAmB,oBACnBC,gBAAgB,oBAChBC,YAAY,8BACZC,OAAO,aAEX,CACIP,YAAY,aACZC,eAAe,SACfC,YAAY,aACZC,UAAU,gBACVC,mBAAmB,oBACnBC,gBAAgB,oBAChBC,YAAY,8BACZC,OAAO,aAEX,CACIP,YAAY,aACZC,eAAe,SACfC,YAAY,aACZC,UAAU,gBACVC,mBAAmB,oBACnBC,gBAAgB,oBAChBC,YAAY,8BACZC,OAAO,aAEX,CACIP,YAAY,aACZC,eAAe,SACfC,YAAY,aACZC,UAAU,gBACVC,mBAAmB,oBACnBC,gBAAgB,oBAChBC,YAAY,8BACZC,OAAO,aAEX,CACIP,YAAY,aACZC,eAAe,SACfC,YAAY,aACZC,UAAU,gBACVC,mBAAmB,oBACnBC,gBAAgB,oBAChBC,YAAY,8BACZC,OAAO,eAsInB,ECnRA,MAdA,WACE,OACE,UAAC,KAAa,CAAC5B,UAAU,SAAS6B,UAAU,SAAQ,WAC/C,oEACG,iBAAK7B,UAAU,4CAA2C,WACtD,eAAIA,UAAU,oBAAmB,yBACjC,SAAC,EAAsB,QAE3B,SAAC,EAAiB,MAI9B,C","sources":["views/billing/Settlements/components/SettlementId/SettlementIdTableSearch.js","views/billing/Settlements/components/SettlementId/SettlementIdFilters.js","views/billing/Settlements/components/SettlementId/SettlementIdTableTools.js","views/billing/Settlements/components/SettlementId/SettlementIdTable.js","views/billing/Settlements/components/SettlementId/SettlementId.js"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { Input } from 'components/ui'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n\r\nconst SettlementTableIdSearch = () => {\r\n    // const dispatch = useDispatch()\r\n\r\n    const searchInput = useRef()\r\n\r\n   \r\n    // // const onEdit = (e) => {\r\n    //     debounceFn(e.target.value)\r\n    // }\r\n\r\n    return (\r\n        <Input\r\n            ref={searchInput}\r\n            className=\"lg:w-52\"\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n            // onChange={onEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SettlementTableIdSearch\r\n","import React from 'react'\r\nimport { HiOutlineFilter} from 'react-icons/hi'\r\nimport {\r\n   \r\n    Button,\r\n  \r\n} from 'components/ui'\r\n\r\n\r\n\r\nconst SettlementIdFilters = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                size=\"sm\"\r\n                className=\"block md:inline-block ltr:md:ml-2 rtl:md:mr-2 md:mb-0 mb-4\"\r\n                icon={<HiOutlineFilter />}\r\n                onClick={() => {}}\r\n            >\r\n                Filter\r\n            </Button>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettlementIdFilters\r\n","import React from 'react'\r\nimport { HiDownload, HiPlusCircle } from 'react-icons/hi'\r\n import { Link } from 'react-router-dom'\r\nimport {\r\n    Button,\r\n   \r\n} from 'components/ui'\r\nimport SettlementTableIdSearch from './SettlementIdTableSearch'\r\nimport SettlementIdFilters from './SettlementIdFilters'\r\n\r\n\r\n\r\n\r\nconst SettlementIdTableTools = () => {\r\n    return (\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center\">\r\n            <SettlementTableIdSearch/>\r\n            <SettlementIdFilters/>\r\n        \r\n            <Link\r\n                className=\"block lg:inline-block md:mx-2 md:mb-0 mb-4\"\r\n                target=\"_blank\"\r\n                download\r\n                \r\n            >\r\n                <Button block size=\"sm\" icon={<HiDownload />}>\r\n                    Export\r\n                </Button>\r\n            </Link>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettlementIdTableTools\r\n","import React, { useEffect, useCallback, useMemo, useRef } from 'react'\r\nimport { Badge, Tooltip } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport {MdModeEdit} from 'react-icons/md'\r\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\r\nimport {IoMdDownload} from 'react-icons/io'\r\n\r\nimport {AiFillCopy} from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import { getOrders, setTableData } from '../../store/dataSlice'\r\n// import {\r\n//     setSelectedRows,\r\n//     addRowItem,\r\n//     removeRowItem,\r\n//     setDeleteMode,\r\n//     setSelectedRow,\r\n// } from '../../store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst ItemStatusColor = {\r\n    0: {\r\n        label: 'Active',\r\n        dotClass: 'bg-emerald-500',\r\n        textClass: 'text-emerald-500',\r\n    },\r\n    1: {\r\n        label: 'Submitted',\r\n        dotClass: 'bg-blue-500',\r\n        textClass: 'text-amber-500',\r\n    },\r\n    2: { label: 'Inactive', dotClass: 'bg-red-500', textClass: 'text-red-500' },\r\n}\r\n\r\n\r\n\r\nconst ActionColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const onView = useCallback(() => {\r\n        navigate(`/app/sales/Item-details/${row.id}`)\r\n    }, [navigate, row])\r\n\r\n    return (\r\n        <div className=\"text-lg\">\r\n            <Tooltip title=\"Edit\">\r\n                <span\r\n                    className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                >\r\n                    <MdModeEdit />\r\n                </span>\r\n            </Tooltip>\r\n            <Tooltip title=\"Edit\">\r\n            <span\r\n                className={`cursor-pointer p-1 text-blue-500 hover:${textTheme}`}\r\n                //onClick={onView}\r\n            >\r\n               <IoMdDownload className='text-red-800'/>\r\n               \r\n            </span>\r\n        </Tooltip>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SettlementIdTable = () => {\r\n\r\n     const tableRef = useRef(null)\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n    //     (state) => state.myaccountList.data.tableData\r\n    // )\r\n    // const loading = useSelector((state) => state?.myaccountList?.data?.loading)\r\n\r\n    // const data = useSelector((state) => state?.myaccountList?.data?.ItemList)\r\n    // const fetchData = useCallback(() => {\r\n    //     dispatch(getOrders())\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(setSelectedRows([]))\r\n    //     fetchData()\r\n    // }, [dispatch, fetchData, pageIndex, pageSize, sort])\r\n\r\n    // useEffect(() => {\r\n    //     if (tableRef) {\r\n    //         tableRef.current?.resetSelected()\r\n    //     }\r\n    // }, [data])\r\n\r\n    // const tableData = useMemo(\r\n    //     () => ({ pageIndex, pageSize, sort, query, total }),\r\n    //     [pageIndex, pageSize, sort, query, total]\r\n    // )\r\n\r\n    const data = [\r\n        {\r\n            referenceId:\"REF3681655\",\r\n            settlementType:\"online\",\r\n            fromAccount:\"ABC3451655\",\r\n            toAccount:\"def3454681655\",\r\n            settlementDateTime:\"15 May 2020, 10pm\",\r\n            paymentDateTime:\"15 May 2020, 10pm\",\r\n            listOfBills:\"BID2345, BID3456, BID6789,+\",\r\n            amount:\"242.9 USD\"\r\n        },\r\n        {\r\n            referenceId:\"REF3681655\",\r\n            settlementType:\"online\",\r\n            fromAccount:\"ABC3451655\",\r\n            toAccount:\"def3454681655\",\r\n            settlementDateTime:\"15 May 2020, 10pm\",\r\n            paymentDateTime:\"15 May 2020, 10pm\",\r\n            listOfBills:\"BID2345, BID3456, BID6789,+\",\r\n            amount:\"242.9 USD\"\r\n        },\r\n        {\r\n            referenceId:\"REF3681655\",\r\n            settlementType:\"online\",\r\n            fromAccount:\"ABC3451655\",\r\n            toAccount:\"def3454681655\",\r\n            settlementDateTime:\"15 May 2020, 10pm\",\r\n            paymentDateTime:\"15 May 2020, 10pm\",\r\n            listOfBills:\"BID2345, BID3456, BID6789,+\",\r\n            amount:\"242.9 USD\"\r\n        },\r\n        {\r\n            referenceId:\"REF3681655\",\r\n            settlementType:\"online\",\r\n            fromAccount:\"ABC3451655\",\r\n            toAccount:\"def3454681655\",\r\n            settlementDateTime:\"15 May 2020, 10pm\",\r\n            paymentDateTime:\"15 May 2020, 10pm\",\r\n            listOfBills:\"BID2345, BID3456, BID6789,+\",\r\n            amount:\"242.9 USD\"\r\n        },\r\n        {\r\n            referenceId:\"REF3681655\",\r\n            settlementType:\"online\",\r\n            fromAccount:\"ABC3451655\",\r\n            toAccount:\"def3454681655\",\r\n            settlementDateTime:\"15 May 2020, 10pm\",\r\n            paymentDateTime:\"15 May 2020, 10pm\",\r\n            listOfBills:\"BID2345, BID3456, BID6789,+\",\r\n            amount:\"242.9 USD\"\r\n        },\r\n        {\r\n            referenceId:\"REF3681655\",\r\n            settlementType:\"online\",\r\n            fromAccount:\"ABC3451655\",\r\n            toAccount:\"def3454681655\",\r\n            settlementDateTime:\"15 May 2020, 10pm\",\r\n            paymentDateTime:\"15 May 2020, 10pm\",\r\n            listOfBills:\"BID2345, BID3456, BID6789,+\",\r\n            amount:\"242.9 USD\"\r\n        },\r\n        \r\n    ]\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                header: 'REFERENCE ID',\r\n                accessorKey: 'referenceId',\r\n            },\r\n            {\r\n                header: 'SETTLEMENT TYPE',\r\n                accessorKey: 'settlementType',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'FROM ACCOUNT',\r\n                accessorKey: 'fromAccount',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'TO ACCOUNT',\r\n                accessorKey: 'toAccount',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'SETTLEMENT DATE & TIME',\r\n                accessorKey: 'settlementDateTime',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'PAYMENT DATE AND TIME',\r\n                accessorKey: 'paymentDateTime',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'LIST OF BILLS',\r\n                accessorKey: 'listOfBills',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'AMOUNT',\r\n                accessorKey: 'amount',\r\n                \r\n               \r\n            },\r\n            {\r\n                header: 'Status',\r\n                accessorKey: 'status',\r\n               \r\n                cell: (props) => {\r\n                    return (\r\n                        <div className=\"flex items-center\">\r\n                            <Badge\r\n                                className={ItemStatusColor[0].dotClass}\r\n                            />\r\n                            <span\r\n                                className={`ml-2 rtl:mr-2 capitalize font-semibold ${ItemStatusColor[0].textClass}`}\r\n                            >\r\n                                {ItemStatusColor[0].label}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                },\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    // const onPaginationChange = (page) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.pageIndex = page\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onSelectChange = (value) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.pageSize = Number(value)\r\n    //     newTableData.pageIndex = 1\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onSort = (sort) => {\r\n    //     const newTableData = cloneDeep(tableData)\r\n    //     newTableData.sort = sort\r\n    //     dispatch(setTableData(newTableData))\r\n    // }\r\n\r\n    // const onRowSelect = (checked, row) => {\r\n    //     if (checked) {\r\n    //         dispatch(addRowItem([row.id]))\r\n    //     } else {\r\n    //         dispatch(removeRowItem(row.id))\r\n    //     }\r\n    // }\r\n\r\n    // const onAllRowSelect = useCallback(\r\n    //     (checked, rows) => {\r\n    //         if (checked) {\r\n    //             const originalRows = rows.map((row) => row.original)\r\n    //             const selectedIds = []\r\n    //             originalRows.forEach((row) => {\r\n    //                 selectedIds.push(row.id)\r\n    //             })\r\n    //             dispatch(setSelectedRows(selectedIds))\r\n    //         } else {\r\n    //             dispatch(setSelectedRows([]))\r\n    //         }\r\n    //     },\r\n    //     [dispatch]\r\n    // )\r\n\r\n    return (\r\n        <DataTable\r\n            ref={tableRef}\r\n            columns={columns}\r\n            data={data}\r\n            // loading={loading}\r\n            // pagingData={tableData}\r\n            // onPaginationChange={onPaginationChange}\r\n            // onSelectChange={onSelectChange}\r\n            // onSort={onSort}\r\n            // onCheckBoxChange={onRowSelect}\r\n            // onIndeterminateCheckBoxChange={onAllRowSelect}\r\n            // selectable\r\n        />\r\n    )\r\n}\r\n\r\nexport default SettlementIdTable\r\n\r\n","import React from 'react'\r\n\r\nimport { AdaptableCard } from 'components/shared'\r\nimport SettlementIdTableTools from './SettlementIdTableTools'\r\nimport SettlementIdTable from './SettlementIdTable'\r\n\r\nfunction SettlementId() {\r\n  return (\r\n    <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n         <div>Billing / Settlements / Settlement ID</div>\r\n            <div className=\"lg:flex items-center justify-between mb-4\">\r\n                <h3 className=\"mb-4 lg:mb-0 mt-4\">Settlement</h3>\r\n                <SettlementIdTableTools/>\r\n            </div>\r\n            <SettlementIdTable/>\r\n        </AdaptableCard>\r\n   \r\n  )\r\n}\r\n\r\nexport default SettlementId"],"names":["searchInput","useRef","ref","className","size","placeholder","prefix","icon","onClick","target","download","block","ItemStatusColor","label","dotClass","textClass","tableRef","columns","useMemo","header","accessorKey","cell","props","data","referenceId","settlementType","fromAccount","toAccount","settlementDateTime","paymentDateTime","listOfBills","amount","bodyClass"],"sourceRoot":""}