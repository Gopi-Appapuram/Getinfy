{"version":3,"file":"static/js/4480.9e68f198.chunk.js","mappings":"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","sources":["components/template/HorizontalNav.js","components/layout/SimpleLayout.js","components/template/HeaderLogo.js","components/template/HorizontalMenuContent/HorizontalMenuNavLink.js","components/template/HorizontalMenuContent/HorizontalMenuItem.js","components/template/HorizontalMenuContent/HorizontalMenuDropdownItem.js","components/template/HorizontalMenuContent/index.js"],"sourcesContent":["import React from 'react'\r\nimport HorizontalMenuContent from './HorizontalMenuContent'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst HorizontalNav = () => {\r\n    const mode = useSelector((state) => state.theme.mode)\r\n    const userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n    const { larger } = useResponsive()\r\n\r\n    return (\r\n        <>\r\n            {larger.md && (\r\n                <HorizontalMenuContent\r\n                    manuVariant={mode}\r\n                    userAuthority={userAuthority}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HorizontalNav\r\n","import React from 'react'\r\nimport Header from 'components/template/Header'\r\nimport SidePanel from 'components/template/SidePanel'\r\nimport UserDropdown from 'components/template/UserDropdown'\r\nimport HeaderLogo from 'components/template/HeaderLogo'\r\nimport MobileNav from 'components/template/MobileNav'\r\nimport HorizontalNav from 'components/template/HorizontalNav'\r\nimport View from 'views'\r\nimport LanguageSelector from 'components/template/LanguageSelector'\r\nimport Search from 'components/template/Search'\r\nimport Notification from 'components/template/Notification'\r\n\r\nconst HeaderActionsStart = () => {\r\n    return (\r\n        <>\r\n            <HeaderLogo />\r\n            <MobileNav />\r\n            <Search />\r\n        </>\r\n    )\r\n}\r\n\r\nconst HeaderActionsEnd = () => {\r\n    return (\r\n        <>\r\n        <LanguageSelector />\r\n        <Notification/>\r\n            <SidePanel />\r\n            <UserDropdown hoverable={false} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst SimpleLayout = () => {\r\n    return (\r\n        <div className=\"app-layout-simple flex flex-auto flex-col min-h-screen\">\r\n            <div className=\"flex flex-auto min-w-0\">\r\n                <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\r\n                    <Header\r\n                        container\r\n                        className=\"shadow dark:shadow-2xl\"\r\n                        headerStart={<HeaderActionsStart />}\r\n                        headerMiddle={<HorizontalNav />}\r\n                        headerEnd={<HeaderActionsEnd />}\r\n                    />\r\n                    <View pageContainerType=\"contained\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleLayout\r\n","import React from 'react'\r\nimport Logo from 'components/template/Logo'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst HeaderLogo = () => {\r\n    const mode = useSelector((state) => state.theme.mode)\r\n\r\n    return <Logo mode={mode} className=\"hidden md:block\" />\r\n}\r\n\r\nexport default HeaderLogo\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HorizontalMenuNavLink = ({ path, children }) => {\r\n    return (\r\n        <Link className=\"h-full w-full flex items-center\" to={path}>\r\n            <span>{children}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenuNavLink\r\n","import React from 'react'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\nimport { MenuItem } from 'components/ui'\r\nimport HorizontalMenuNavLink from './HorizontalMenuNavLink'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalMenuItem = ({ nav, isLink, manuVariant }) => {\r\n    const { title, translateKey, icon, path } = nav\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const itemTitle = t(translateKey, title)\r\n\r\n    return (\r\n        <MenuItem variant={manuVariant}>\r\n            {icon && <span className=\"text-2xl\">{navigationIcon[icon]}</span>}\r\n            {path && isLink ? (\r\n                <HorizontalMenuNavLink path={path}>\r\n                    {itemTitle}\r\n                </HorizontalMenuNavLink>\r\n            ) : (\r\n                <span>{itemTitle}</span>\r\n            )}\r\n        </MenuItem>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenuItem\r\n","import React from 'react'\r\nimport { Dropdown } from 'components/ui'\r\nimport HorizontalMenuNavLink from './HorizontalMenuNavLink'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalMenuDropdownItem = ({ nav }) => {\r\n    const { title, translateKey, path, key } = nav\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const itemTitle = t(translateKey, title)\r\n\r\n    return (\r\n        <Dropdown.Item eventKey={key}>\r\n            {path ? (\r\n                <HorizontalMenuNavLink path={path}>\r\n                    {itemTitle}\r\n                </HorizontalMenuNavLink>\r\n            ) : (\r\n                <span>{itemTitle}</span>\r\n            )}\r\n        </Dropdown.Item>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenuDropdownItem\r\n","import React from 'react'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport { Dropdown } from 'components/ui'\r\nimport { AuthorityCheck } from 'components/shared'\r\nimport HorizontalMenuItem from './HorizontalMenuItem'\r\nimport HorizontalMenuDropdownItem from './HorizontalMenuDropdownItem'\r\nimport {\r\n    NAV_ITEM_TYPE_TITLE,\r\n    NAV_ITEM_TYPE_COLLAPSE,\r\n    NAV_ITEM_TYPE_ITEM,\r\n} from 'constants/navigation.constant'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalMenuContent = ({ manuVariant, userAuthority = [] }) => {\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <span className=\"flex items-center\">\r\n            {navigationConfig.map((nav) => {\r\n                if (\r\n                    nav.type === NAV_ITEM_TYPE_TITLE ||\r\n                    nav.type === NAV_ITEM_TYPE_COLLAPSE\r\n                ) {\r\n                    return (\r\n                        <AuthorityCheck\r\n                            authority={nav.authority}\r\n                            userAuthority={userAuthority}\r\n                            key={nav.key}\r\n                        >\r\n                            <Dropdown\r\n                                trigger=\"hover\"\r\n                                renderTitle={\r\n                                    <HorizontalMenuItem\r\n                                        manuVariant={manuVariant}\r\n                                        nav={nav}\r\n                                    />\r\n                                }\r\n                            >\r\n                                {nav.subMenu.map((secondarySubNav) => (\r\n                                    <AuthorityCheck\r\n                                        authority={secondarySubNav.authority}\r\n                                        userAuthority={userAuthority}\r\n                                        key={secondarySubNav.key}\r\n                                    >\r\n                                        {secondarySubNav.subMenu.length > 0 ? (\r\n                                            <Dropdown.Menu\r\n                                                title={t(\r\n                                                    secondarySubNav.translateKey,\r\n                                                    secondarySubNav.title\r\n                                                )}\r\n                                            >\r\n                                                {secondarySubNav.subMenu.map(\r\n                                                    (tertiarySubNav) => (\r\n                                                        <AuthorityCheck\r\n                                                            authority={\r\n                                                                tertiarySubNav.authority\r\n                                                            }\r\n                                                            userAuthority={\r\n                                                                userAuthority\r\n                                                            }\r\n                                                            key={\r\n                                                                tertiarySubNav.key\r\n                                                            }\r\n                                                        >\r\n                                                            <HorizontalMenuDropdownItem\r\n                                                                nav={\r\n                                                                    tertiarySubNav\r\n                                                                }\r\n                                                            />\r\n                                                        </AuthorityCheck>\r\n                                                    )\r\n                                                )}\r\n                                            </Dropdown.Menu>\r\n                                        ) : (\r\n                                            <HorizontalMenuDropdownItem\r\n                                                nav={secondarySubNav}\r\n                                                key={secondarySubNav.key}\r\n                                            />\r\n                                        )}\r\n                                    </AuthorityCheck>\r\n                                ))}\r\n                            </Dropdown>\r\n                        </AuthorityCheck>\r\n                    )\r\n                }\r\n                if (nav.type === NAV_ITEM_TYPE_ITEM) {\r\n                    return (\r\n                        <AuthorityCheck\r\n                            authority={nav.authority}\r\n                            userAuthority={userAuthority}\r\n                            key={nav.key}\r\n                        >\r\n                            <HorizontalMenuItem\r\n                                isLink\r\n                                nav={nav}\r\n                                manuVariant={manuVariant}\r\n                            />\r\n                        </AuthorityCheck>\r\n                    )\r\n                }\r\n                return <></>\r\n            })}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenuContent\r\n"],"names":["mode","useSelector","state","theme","userAuthority","auth","user","authority","larger","useResponsive","md","HorizontalMenuContent","manuVariant","HeaderActionsStart","HeaderLogo","MobileNav","Search","HeaderActionsEnd","LanguageSelector","Notification","SidePanel","UserDropdown","hoverable","className","Header","container","headerStart","headerMiddle","headerEnd","pageContainerType","path","children","to","nav","isLink","title","translateKey","icon","itemTitle","t","useTranslation","variant","navigationIcon","key","eventKey","navigationConfig","type","NAV_ITEM_TYPE_TITLE","NAV_ITEM_TYPE_COLLAPSE","trigger","renderTitle","subMenu","map","secondarySubNav","length","tertiarySubNav","NAV_ITEM_TYPE_ITEM"],"sourceRoot":""}