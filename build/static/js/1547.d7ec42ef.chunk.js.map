{"version":3,"file":"static/js/1547.d7ec42ef.chunk.js","mappings":"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","sources":["components/template/StackedSideNav/StackedSideNavMini.js","components/template/StackedSideNav/StackedSideNavSecondary.js","components/template/StackedSideNav/index.js","components/layout/StackedSideLayout.js","components/template/HeaderLogo.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Logo from 'components/template/Logo'\r\nimport { Menu, ScrollBar } from 'components/ui'\r\nimport {\r\n    NAV_MODE_DARK,\r\n    NAV_MODE_THEMED,\r\n    NAV_MODE_TRANSPARENT,\r\n    SIDE_NAV_CONTENT_GUTTER,\r\n} from 'constants/theme.constant'\r\nimport { NAV_ITEM_TYPE_ITEM } from 'constants/navigation.constant'\r\nimport { AuthorityCheck } from 'components/shared'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\nimport useMenuActive from 'utils/hooks/useMenuActive'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StackedSideNavMini = (props) => {\r\n    const {\r\n        navMode,\r\n        onChange,\r\n        routeKey,\r\n        activeKeys,\r\n        onSetActiveKey,\r\n        userAuthority,\r\n        mode,\r\n        direction,\r\n        ...rest\r\n    } = props\r\n\r\n    const { includedRouteTree } = useMenuActive(navigationConfig, routeKey)\r\n\r\n    const logoMode = () => {\r\n        if (navMode === NAV_MODE_THEMED) {\r\n            return NAV_MODE_DARK\r\n        }\r\n\r\n        if (navMode === NAV_MODE_TRANSPARENT) {\r\n            return mode\r\n        }\r\n\r\n        return navMode\r\n    }\r\n\r\n    const handleMenuItemSelect = ({ key, title, menu, translateKey }) => {\r\n        onChange({ title, menu, translateKey })\r\n        onSetActiveKey([key])\r\n    }\r\n\r\n    const handleLinkMenuItemSelect = ({ key }) => {\r\n        onChange({})\r\n        onSetActiveKey([key])\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (\r\n            includedRouteTree.type !== NAV_ITEM_TYPE_ITEM &&\r\n            !isEmpty(includedRouteTree)\r\n        ) {\r\n            onChange({\r\n                key: includedRouteTree.key,\r\n                title: includedRouteTree.title,\r\n                menu: includedRouteTree.subMenu,\r\n                translateKey: includedRouteTree.translateKey,\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [includedRouteTree.key])\r\n\r\n    return (\r\n        <div {...rest}>\r\n            <Logo\r\n                mode={logoMode()}\r\n                type=\"streamline\"\r\n                gutter={SIDE_NAV_CONTENT_GUTTER}\r\n            />\r\n            <ScrollBar autoHide direction={direction}>\r\n                <Menu\r\n                    className=\"px-4 pb-4\"\r\n                    variant={navMode}\r\n                    defaultActiveKeys={activeKeys || [includedRouteTree.key]}\r\n                >\r\n                    {navigationConfig.map((nav) => (\r\n                        <AuthorityCheck\r\n                            key={nav.key}\r\n                            authority={nav.authority}\r\n                            userAuthority={userAuthority}\r\n                        >\r\n                            {nav.subMenu && nav.subMenu.length > 0 ? (\r\n                                <Menu.MenuItem\r\n                                    eventKey={nav.key}\r\n                                    className=\"mb-2\"\r\n                                    onSelect={() =>\r\n                                        handleMenuItemSelect({\r\n                                            key: nav.key,\r\n                                            title: nav.title,\r\n                                            menu: nav.subMenu,\r\n                                            translateKey: nav.translateKey,\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <div className=\"text-2xl\">\r\n                                        {navigationIcon[nav.icon]}\r\n                                    </div>\r\n                                </Menu.MenuItem>\r\n                            ) : (\r\n                                <Link\r\n                                    to={nav.path}\r\n                                    className=\"flex items-center h-full w-full\"\r\n                                    onClick={() =>\r\n                                        handleLinkMenuItemSelect({\r\n                                            key: nav.key,\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <Menu.MenuItem\r\n                                        eventKey={nav.key}\r\n                                        className=\"mb-2\"\r\n                                    >\r\n                                        <div className=\"text-2xl\">\r\n                                            {navigationIcon[nav.icon]}\r\n                                        </div>\r\n                                    </Menu.MenuItem>\r\n                                </Link>\r\n                            )}\r\n                        </AuthorityCheck>\r\n                    ))}\r\n                </Menu>\r\n            </ScrollBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StackedSideNavMini\r\n","import React from 'react'\r\nimport { Button, ScrollBar } from 'components/ui'\r\nimport classNames from 'classnames'\r\nimport { HEADER_HEIGHT_CLASS, DIR_LTR, DIR_RTL } from 'constants/theme.constant'\r\nimport VerticalMenuContent from 'components/template/VerticalMenuContent'\r\nimport { HiOutlineArrowSmLeft, HiOutlineArrowSmRight } from 'react-icons/hi'\r\n\r\nconst StackedSideNavSecondary = (props) => {\r\n    const {\r\n        className,\r\n        title,\r\n        menu,\r\n        routeKey,\r\n        onCollapse,\r\n        direction,\r\n        userAuthority,\r\n        navMode,\r\n        ...rest\r\n    } = props\r\n\r\n    const handleCollpase = () => {\r\n        onCollapse()\r\n    }\r\n\r\n    return (\r\n        <div className={classNames('h-full', className)} {...rest}>\r\n            <div\r\n                className={`${HEADER_HEIGHT_CLASS} flex items-center justify-between gap-4 pl-6 pr-4`}\r\n            >\r\n                <h5 className=\"font-bold\">{title}</h5>\r\n                <Button\r\n                    shape=\"circle\"\r\n                    variant=\"plain\"\r\n                    size=\"sm\"\r\n                    icon={\r\n                        <>\r\n                            {direction === DIR_LTR && <HiOutlineArrowSmLeft />}\r\n                            {direction === DIR_RTL && <HiOutlineArrowSmRight />}\r\n                        </>\r\n                    }\r\n                    onClick={handleCollpase}\r\n                />\r\n            </div>\r\n            <ScrollBar autoHide direction={direction}>\r\n                <VerticalMenuContent\r\n                    routeKey={routeKey}\r\n                    navigationTree={menu}\r\n                    userAuthority={userAuthority}\r\n                    navMode={navMode}\r\n                />\r\n            </ScrollBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StackedSideNavSecondary\r\n","import React, { useState } from 'react'\r\nimport {\r\n    NAV_MODE_THEMED,\r\n    SPLITTED_SIDE_NAV_MINI_WIDTH,\r\n    SPLITTED_SIDE_NAV_SECONDARY_WIDTH,\r\n    DIR_LTR,\r\n    DIR_RTL,\r\n    NAV_MODE_TRANSPARENT,\r\n} from 'constants/theme.constant'\r\nimport StackedSideNavMini from './StackedSideNavMini'\r\nimport StackedSideNavSecondary from './StackedSideNavSecondary'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst stackedSideNavDefaultStyle = {\r\n    width: SPLITTED_SIDE_NAV_MINI_WIDTH,\r\n}\r\n\r\nconst StackedSideNav = () => {\r\n    const { t } = useTranslation()\r\n\r\n    const [selectedMenu, setSelectedMenu] = useState({})\r\n    const [activeKeys, setActiveKeys] = useState()\r\n\r\n    const themeColor = useSelector((state) => state.theme.themeColor)\r\n    const primaryColorLevel = useSelector(\r\n        (state) => state.theme.primaryColorLevel\r\n    )\r\n    const navMode = useSelector((state) => state.theme.navMode)\r\n    const mode = useSelector((state) => state.theme.mode)\r\n    const direction = useSelector((state) => state.theme.direction)\r\n    const currentRouteKey = useSelector(\r\n        (state) => state.base.common.currentRouteKey\r\n    )\r\n    const userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n    const { larger } = useResponsive()\r\n\r\n    const navColor = (navType, mode, ableTheme = true) => {\r\n        if (navMode === NAV_MODE_THEMED && ableTheme) {\r\n            return `bg-${themeColor}-${primaryColorLevel} ${navType}-${mode}`\r\n        }\r\n        return `${navType}-${mode}`\r\n    }\r\n\r\n    const handleChange = (selected) => {\r\n        setSelectedMenu(selected)\r\n    }\r\n\r\n    const handleCollpase = () => {\r\n        setSelectedMenu({})\r\n        setActiveKeys([])\r\n    }\r\n\r\n    const handleSetActiveKey = (key) => {\r\n        setActiveKeys(key)\r\n    }\r\n\r\n    const stackedSideNavSecondaryDirStyle = () => {\r\n        let style = {}\r\n        const marginValue = `${-SPLITTED_SIDE_NAV_SECONDARY_WIDTH}px`\r\n        if (direction === DIR_LTR) {\r\n            style = { marginLeft: marginValue }\r\n        }\r\n\r\n        if (direction === DIR_RTL) {\r\n            style = { marginRight: marginValue }\r\n        }\r\n\r\n        return style\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {larger.md && (\r\n                <div className={`stacked-side-nav`}>\r\n                    <StackedSideNavMini\r\n                        className={`stacked-side-nav-mini ${navColor(\r\n                            'stacked-side-nav-mini',\r\n                            navMode\r\n                        )}`}\r\n                        style={stackedSideNavDefaultStyle}\r\n                        routeKey={currentRouteKey}\r\n                        activeKeys={activeKeys}\r\n                        navMode={navMode}\r\n                        onChange={handleChange}\r\n                        onSetActiveKey={handleSetActiveKey}\r\n                        userAuthority={userAuthority}\r\n                        mode={mode}\r\n                        direction={direction}\r\n                    />\r\n                    <div\r\n                        className={`stacked-side-nav-secondary ${navColor(\r\n                            'stacked-side-nav-secondary',\r\n                            mode,\r\n                            false\r\n                        )}`}\r\n                        style={{\r\n                            width: SPLITTED_SIDE_NAV_SECONDARY_WIDTH,\r\n                            ...(isEmpty(selectedMenu)\r\n                                ? stackedSideNavSecondaryDirStyle()\r\n                                : {}),\r\n                        }}\r\n                    >\r\n                        {!isEmpty(selectedMenu) && (\r\n                            <StackedSideNavSecondary\r\n                                title={t(\r\n                                    selectedMenu.translateKey,\r\n                                    selectedMenu.title\r\n                                )}\r\n                                menu={selectedMenu.menu}\r\n                                routeKey={currentRouteKey}\r\n                                navMode={NAV_MODE_TRANSPARENT}\r\n                                onCollapse={handleCollpase}\r\n                                direction={direction}\r\n                                userAuthority={userAuthority}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StackedSideNav\r\n","import React from 'react'\r\nimport Header from 'components/template/Header'\r\nimport SidePanel from 'components/template/SidePanel'\r\nimport UserDropdown from 'components/template/UserDropdown'\r\nimport MobileNav from 'components/template/MobileNav'\r\nimport StackedSideNav from 'components/template/StackedSideNav'\r\nimport View from 'views'\r\nimport LanguageSelector from 'components/template/LanguageSelector'\r\nimport HeaderLogo from 'components/template/HeaderLogo'\r\nimport Search from 'components/template/Search'\r\nimport Notification from 'components/template/Notification'\r\n\r\nconst HeaderActionsStart = () => {\r\n    return (\r\n        <>\r\n        <HeaderLogo />\r\n            <MobileNav />\r\n            <Search/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst HeaderActionsEnd = () => {\r\n    return (\r\n        <>\r\n        <LanguageSelector />\r\n        <Notification/>\r\n            <SidePanel />\r\n            <UserDropdown hoverable={false} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst StackedSideLayout = () => {\r\n    return (\r\n        <div className=\"app-layout-stacked-side flex flex-auto flex-col\">\r\n            <div className=\"flex flex-auto min-w-0\">\r\n                <StackedSideNav />\r\n                <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\r\n                    <Header\r\n                        className=\"shadow dark:shadow-2xl\"\r\n                        headerStart={<HeaderActionsStart />}\r\n                        headerEnd={<HeaderActionsEnd />}\r\n                    />\r\n                    <div className=\"h-full flex flex-auto flex-col\">\r\n                        <View />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StackedSideLayout\r\n","import React from 'react'\r\nimport Logo from 'components/template/Logo'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst HeaderLogo = () => {\r\n    const mode = useSelector((state) => state.theme.mode)\r\n\r\n    return <Logo mode={mode} className=\"hidden md:block\" />\r\n}\r\n\r\nexport default HeaderLogo\r\n"],"names":["props","navMode","onChange","routeKey","activeKeys","onSetActiveKey","userAuthority","mode","direction","rest","includedRouteTree","useMenuActive","navigationConfig","useEffect","type","NAV_ITEM_TYPE_ITEM","isEmpty","key","title","menu","subMenu","translateKey","Logo","NAV_MODE_THEMED","NAV_MODE_DARK","NAV_MODE_TRANSPARENT","gutter","SIDE_NAV_CONTENT_GUTTER","autoHide","className","variant","defaultActiveKeys","nav","authority","length","eventKey","onSelect","handleMenuItemSelect","navigationIcon","icon","to","path","onClick","handleLinkMenuItemSelect","onCollapse","classNames","HEADER_HEIGHT_CLASS","shape","size","DIR_LTR","DIR_RTL","VerticalMenuContent","navigationTree","stackedSideNavDefaultStyle","width","SPLITTED_SIDE_NAV_MINI_WIDTH","t","useTranslation","useState","selectedMenu","setSelectedMenu","setActiveKeys","themeColor","useSelector","state","theme","primaryColorLevel","currentRouteKey","base","common","auth","user","larger","useResponsive","navColor","navType","ableTheme","md","style","selected","SPLITTED_SIDE_NAV_SECONDARY_WIDTH","marginValue","marginLeft","marginRight","stackedSideNavSecondaryDirStyle","HeaderActionsStart","HeaderLogo","MobileNav","Search","HeaderActionsEnd","LanguageSelector","Notification","SidePanel","UserDropdown","hoverable","Header","headerStart","headerEnd"],"sourceRoot":""}